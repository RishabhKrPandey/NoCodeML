2025-06-10 10:16:49,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:16:49,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:16:49,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:16:49,307:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:16:56,120:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 10:18:08,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:18:08,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:18:08,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:18:08,476:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:18:10,028:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 10:40:17,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:40:17,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:40:17,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:40:17,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 10:40:20,463:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 10:44:51,142:INFO:PyCaret ClassificationExperiment
2025-06-10 10:44:51,142:INFO:Logging name: clf-default-name
2025-06-10 10:44:51,142:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:44:51,142:INFO:version 3.3.2
2025-06-10 10:44:51,142:INFO:Initializing setup()
2025-06-10 10:44:51,142:INFO:self.USI: 1506
2025-06-10 10:44:51,142:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:44:51,142:INFO:Checking environment
2025-06-10 10:44:51,142:INFO:python_version: 3.10.6
2025-06-10 10:44:51,142:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:44:51,142:INFO:machine: AMD64
2025-06-10 10:44:51,159:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:44:51,160:INFO:Memory: svmem(total=8416440320, available=938778624, percent=88.8, used=7477661696, free=938778624)
2025-06-10 10:44:51,160:INFO:Physical Core: 8
2025-06-10 10:44:51,160:INFO:Logical Core: 16
2025-06-10 10:44:51,160:INFO:Checking libraries
2025-06-10 10:44:51,160:INFO:System:
2025-06-10 10:44:51,160:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:44:51,160:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:44:51,160:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:44:51,160:INFO:PyCaret required dependencies:
2025-06-10 10:44:52,806:INFO:                 pip: 23.1.2
2025-06-10 10:44:52,806:INFO:          setuptools: 63.2.0
2025-06-10 10:44:52,806:INFO:             pycaret: 3.3.2
2025-06-10 10:44:52,806:INFO:             IPython: 8.4.0
2025-06-10 10:44:52,806:INFO:          ipywidgets: 8.0.6
2025-06-10 10:44:52,806:INFO:                tqdm: 4.65.0
2025-06-10 10:44:52,806:INFO:               numpy: 1.26.4
2025-06-10 10:44:52,806:INFO:              pandas: 1.4.4
2025-06-10 10:44:52,806:INFO:              jinja2: 3.1.2
2025-06-10 10:44:52,806:INFO:               scipy: 1.11.0
2025-06-10 10:44:52,806:INFO:              joblib: 1.3.2
2025-06-10 10:44:52,806:INFO:             sklearn: 1.4.2
2025-06-10 10:44:52,806:INFO:                pyod: 2.0.5
2025-06-10 10:44:52,806:INFO:            imblearn: 0.13.0
2025-06-10 10:44:52,806:INFO:   category_encoders: 2.7.0
2025-06-10 10:44:52,806:INFO:            lightgbm: 4.6.0
2025-06-10 10:44:52,806:INFO:               numba: 0.61.2
2025-06-10 10:44:52,806:INFO:            requests: 2.31.0
2025-06-10 10:44:52,806:INFO:          matplotlib: 3.5.3
2025-06-10 10:44:52,806:INFO:          scikitplot: 0.3.7
2025-06-10 10:44:52,806:INFO:         yellowbrick: 1.5
2025-06-10 10:44:52,807:INFO:              plotly: 5.24.1
2025-06-10 10:44:52,807:INFO:    plotly-resampler: Not installed
2025-06-10 10:44:52,807:INFO:             kaleido: 0.2.1
2025-06-10 10:44:52,807:INFO:           schemdraw: 0.15
2025-06-10 10:44:52,807:INFO:         statsmodels: 0.14.4
2025-06-10 10:44:52,807:INFO:              sktime: 0.26.0
2025-06-10 10:44:52,807:INFO:               tbats: 1.1.3
2025-06-10 10:44:52,807:INFO:            pmdarima: 2.0.4
2025-06-10 10:44:52,807:INFO:              psutil: 5.9.1
2025-06-10 10:44:52,807:INFO:          markupsafe: 2.1.1
2025-06-10 10:44:52,807:INFO:             pickle5: Not installed
2025-06-10 10:44:52,807:INFO:         cloudpickle: 3.1.1
2025-06-10 10:44:52,807:INFO:         deprecation: 2.1.0
2025-06-10 10:44:52,807:INFO:              xxhash: 3.5.0
2025-06-10 10:44:52,807:INFO:           wurlitzer: Not installed
2025-06-10 10:44:52,807:INFO:PyCaret optional dependencies:
2025-06-10 10:44:52,819:INFO:                shap: Not installed
2025-06-10 10:44:52,819:INFO:           interpret: Not installed
2025-06-10 10:44:52,819:INFO:                umap: Not installed
2025-06-10 10:44:52,820:INFO:     ydata_profiling: Not installed
2025-06-10 10:44:52,820:INFO:  explainerdashboard: Not installed
2025-06-10 10:44:52,820:INFO:             autoviz: Not installed
2025-06-10 10:44:52,820:INFO:           fairlearn: Not installed
2025-06-10 10:44:52,820:INFO:          deepchecks: Not installed
2025-06-10 10:44:52,820:INFO:             xgboost: Not installed
2025-06-10 10:44:52,820:INFO:            catboost: Not installed
2025-06-10 10:44:52,820:INFO:              kmodes: Not installed
2025-06-10 10:44:52,820:INFO:             mlxtend: Not installed
2025-06-10 10:44:52,820:INFO:       statsforecast: Not installed
2025-06-10 10:44:52,820:INFO:        tune_sklearn: Not installed
2025-06-10 10:44:52,820:INFO:                 ray: Not installed
2025-06-10 10:44:52,820:INFO:            hyperopt: Not installed
2025-06-10 10:44:52,820:INFO:              optuna: Not installed
2025-06-10 10:44:52,820:INFO:               skopt: Not installed
2025-06-10 10:44:52,820:INFO:              mlflow: Not installed
2025-06-10 10:44:52,820:INFO:              gradio: Not installed
2025-06-10 10:44:52,820:INFO:             fastapi: Not installed
2025-06-10 10:44:52,820:INFO:             uvicorn: Not installed
2025-06-10 10:44:52,820:INFO:              m2cgen: Not installed
2025-06-10 10:44:52,820:INFO:           evidently: Not installed
2025-06-10 10:44:52,820:INFO:               fugue: Not installed
2025-06-10 10:44:52,820:INFO:           streamlit: 1.45.1
2025-06-10 10:44:52,820:INFO:             prophet: Not installed
2025-06-10 10:44:52,820:INFO:None
2025-06-10 10:44:52,820:INFO:Set up data.
2025-06-10 10:44:52,828:INFO:Set up folding strategy.
2025-06-10 10:44:52,828:INFO:Set up train/test split.
2025-06-10 10:44:52,845:INFO:Set up index.
2025-06-10 10:44:52,846:INFO:Assigning column types.
2025-06-10 10:44:52,848:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:44:52,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:44:52,887:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:44:52,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:52,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:52,956:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:44:52,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:44:52,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:52,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:52,980:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:44:53,017:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:44:53,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,078:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:44:53,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,102:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:44:53,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,226:INFO:Preparing preprocessing pipeline...
2025-06-10 10:44:53,228:INFO:Set up label encoding.
2025-06-10 10:44:53,228:INFO:Set up simple imputation.
2025-06-10 10:44:53,230:INFO:Set up encoding of categorical features.
2025-06-10 10:44:53,302:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:44:53,307:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:44:53,307:INFO:Creating final display dataframe.
2025-06-10 10:44:53,499:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                  784
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 1506
2025-06-10 10:44:53,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:44:53,631:INFO:setup() successfully completed in 2.49s...............
2025-06-10 10:45:01,254:INFO:PyCaret ClassificationExperiment
2025-06-10 10:45:01,254:INFO:Logging name: clf-default-name
2025-06-10 10:45:01,254:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:45:01,254:INFO:version 3.3.2
2025-06-10 10:45:01,254:INFO:Initializing setup()
2025-06-10 10:45:01,254:INFO:self.USI: 6966
2025-06-10 10:45:01,254:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:45:01,254:INFO:Checking environment
2025-06-10 10:45:01,254:INFO:python_version: 3.10.6
2025-06-10 10:45:01,254:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:45:01,254:INFO:machine: AMD64
2025-06-10 10:45:01,254:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:45:01,255:INFO:Memory: svmem(total=8416440320, available=829304832, percent=90.1, used=7587135488, free=829304832)
2025-06-10 10:45:01,255:INFO:Physical Core: 8
2025-06-10 10:45:01,255:INFO:Logical Core: 16
2025-06-10 10:45:01,255:INFO:Checking libraries
2025-06-10 10:45:01,255:INFO:System:
2025-06-10 10:45:01,255:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:45:01,255:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:45:01,255:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:45:01,255:INFO:PyCaret required dependencies:
2025-06-10 10:45:01,255:INFO:                 pip: 23.1.2
2025-06-10 10:45:01,255:INFO:          setuptools: 63.2.0
2025-06-10 10:45:01,255:INFO:             pycaret: 3.3.2
2025-06-10 10:45:01,255:INFO:             IPython: 8.4.0
2025-06-10 10:45:01,255:INFO:          ipywidgets: 8.0.6
2025-06-10 10:45:01,255:INFO:                tqdm: 4.65.0
2025-06-10 10:45:01,255:INFO:               numpy: 1.26.4
2025-06-10 10:45:01,255:INFO:              pandas: 1.4.4
2025-06-10 10:45:01,255:INFO:              jinja2: 3.1.2
2025-06-10 10:45:01,255:INFO:               scipy: 1.11.0
2025-06-10 10:45:01,255:INFO:              joblib: 1.3.2
2025-06-10 10:45:01,255:INFO:             sklearn: 1.4.2
2025-06-10 10:45:01,256:INFO:                pyod: 2.0.5
2025-06-10 10:45:01,256:INFO:            imblearn: 0.13.0
2025-06-10 10:45:01,256:INFO:   category_encoders: 2.7.0
2025-06-10 10:45:01,256:INFO:            lightgbm: 4.6.0
2025-06-10 10:45:01,256:INFO:               numba: 0.61.2
2025-06-10 10:45:01,256:INFO:            requests: 2.31.0
2025-06-10 10:45:01,256:INFO:          matplotlib: 3.5.3
2025-06-10 10:45:01,256:INFO:          scikitplot: 0.3.7
2025-06-10 10:45:01,256:INFO:         yellowbrick: 1.5
2025-06-10 10:45:01,256:INFO:              plotly: 5.24.1
2025-06-10 10:45:01,256:INFO:    plotly-resampler: Not installed
2025-06-10 10:45:01,256:INFO:             kaleido: 0.2.1
2025-06-10 10:45:01,256:INFO:           schemdraw: 0.15
2025-06-10 10:45:01,256:INFO:         statsmodels: 0.14.4
2025-06-10 10:45:01,256:INFO:              sktime: 0.26.0
2025-06-10 10:45:01,256:INFO:               tbats: 1.1.3
2025-06-10 10:45:01,256:INFO:            pmdarima: 2.0.4
2025-06-10 10:45:01,256:INFO:              psutil: 5.9.1
2025-06-10 10:45:01,256:INFO:          markupsafe: 2.1.1
2025-06-10 10:45:01,256:INFO:             pickle5: Not installed
2025-06-10 10:45:01,256:INFO:         cloudpickle: 3.1.1
2025-06-10 10:45:01,256:INFO:         deprecation: 2.1.0
2025-06-10 10:45:01,256:INFO:              xxhash: 3.5.0
2025-06-10 10:45:01,256:INFO:           wurlitzer: Not installed
2025-06-10 10:45:01,256:INFO:PyCaret optional dependencies:
2025-06-10 10:45:01,256:INFO:                shap: Not installed
2025-06-10 10:45:01,256:INFO:           interpret: Not installed
2025-06-10 10:45:01,257:INFO:                umap: Not installed
2025-06-10 10:45:01,257:INFO:     ydata_profiling: Not installed
2025-06-10 10:45:01,257:INFO:  explainerdashboard: Not installed
2025-06-10 10:45:01,257:INFO:             autoviz: Not installed
2025-06-10 10:45:01,257:INFO:           fairlearn: Not installed
2025-06-10 10:45:01,257:INFO:          deepchecks: Not installed
2025-06-10 10:45:01,257:INFO:             xgboost: Not installed
2025-06-10 10:45:01,257:INFO:            catboost: Not installed
2025-06-10 10:45:01,257:INFO:              kmodes: Not installed
2025-06-10 10:45:01,257:INFO:             mlxtend: Not installed
2025-06-10 10:45:01,257:INFO:       statsforecast: Not installed
2025-06-10 10:45:01,257:INFO:        tune_sklearn: Not installed
2025-06-10 10:45:01,257:INFO:                 ray: Not installed
2025-06-10 10:45:01,257:INFO:            hyperopt: Not installed
2025-06-10 10:45:01,257:INFO:              optuna: Not installed
2025-06-10 10:45:01,257:INFO:               skopt: Not installed
2025-06-10 10:45:01,257:INFO:              mlflow: Not installed
2025-06-10 10:45:01,257:INFO:              gradio: Not installed
2025-06-10 10:45:01,257:INFO:             fastapi: Not installed
2025-06-10 10:45:01,257:INFO:             uvicorn: Not installed
2025-06-10 10:45:01,257:INFO:              m2cgen: Not installed
2025-06-10 10:45:01,257:INFO:           evidently: Not installed
2025-06-10 10:45:01,257:INFO:               fugue: Not installed
2025-06-10 10:45:01,257:INFO:           streamlit: 1.45.1
2025-06-10 10:45:01,257:INFO:             prophet: Not installed
2025-06-10 10:45:01,257:INFO:None
2025-06-10 10:45:01,257:INFO:Set up data.
2025-06-10 10:45:01,263:INFO:Set up folding strategy.
2025-06-10 10:45:01,263:INFO:Set up train/test split.
2025-06-10 10:45:01,267:INFO:Set up index.
2025-06-10 10:45:01,268:INFO:Assigning column types.
2025-06-10 10:45:01,270:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:45:01,310:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,380:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,407:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:45:01,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,516:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:45:01,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,540:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:45:01,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,602:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,664:INFO:Preparing preprocessing pipeline...
2025-06-10 10:45:01,665:INFO:Set up label encoding.
2025-06-10 10:45:01,665:INFO:Set up simple imputation.
2025-06-10 10:45:01,667:INFO:Set up encoding of categorical features.
2025-06-10 10:45:01,732:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:45:01,736:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:45:01,736:INFO:Creating final display dataframe.
2025-06-10 10:45:01,925:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 7432
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 6966
2025-06-10 10:45:01,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:01,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:02,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:02,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:45:02,050:INFO:setup() successfully completed in 0.8s...............
2025-06-10 10:45:02,050:INFO:Initializing compare_models()
2025-06-10 10:45:02,050:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-10 10:45:02,050:INFO:Checking exceptions
2025-06-10 10:45:02,054:INFO:Preparing display monitor
2025-06-10 10:45:02,058:INFO:Initializing Logistic Regression
2025-06-10 10:45:02,058:INFO:Total runtime is 0.0 minutes
2025-06-10 10:45:02,058:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:02,059:INFO:Initializing create_model()
2025-06-10 10:45:02,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:02,059:INFO:Checking exceptions
2025-06-10 10:45:02,059:INFO:Importing libraries
2025-06-10 10:45:02,059:INFO:Copying training dataset
2025-06-10 10:45:02,061:INFO:Defining folds
2025-06-10 10:45:02,061:INFO:Declaring metric variables
2025-06-10 10:45:02,062:INFO:Importing untrained model
2025-06-10 10:45:02,062:INFO:Logistic Regression Imported successfully
2025-06-10 10:45:02,062:INFO:Starting cross validation
2025-06-10 10:45:02,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:08,838:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,840:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,842:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,846:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,849:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,851:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,852:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,852:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,853:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,855:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,855:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,856:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,857:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,859:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,859:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,861:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,862:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,863:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,863:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,864:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,868:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,871:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,874:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,877:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,878:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,880:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,880:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,881:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:08,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:08,914:INFO:Calculating mean and std
2025-06-10 10:45:08,917:INFO:Creating metrics dataframe
2025-06-10 10:45:08,923:INFO:Uploading results into container
2025-06-10 10:45:08,924:INFO:Uploading model into container now
2025-06-10 10:45:08,925:INFO:_master_model_container: 1
2025-06-10 10:45:08,925:INFO:_display_container: 2
2025-06-10 10:45:08,926:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7432, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-10 10:45:08,926:INFO:create_model() successfully completed......................................
2025-06-10 10:45:09,146:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:09,147:INFO:Creating metrics dataframe
2025-06-10 10:45:09,150:INFO:Initializing K Neighbors Classifier
2025-06-10 10:45:09,150:INFO:Total runtime is 0.11820114850997925 minutes
2025-06-10 10:45:09,150:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:09,150:INFO:Initializing create_model()
2025-06-10 10:45:09,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:09,150:INFO:Checking exceptions
2025-06-10 10:45:09,150:INFO:Importing libraries
2025-06-10 10:45:09,150:INFO:Copying training dataset
2025-06-10 10:45:09,153:INFO:Defining folds
2025-06-10 10:45:09,153:INFO:Declaring metric variables
2025-06-10 10:45:09,153:INFO:Importing untrained model
2025-06-10 10:45:09,153:INFO:K Neighbors Classifier Imported successfully
2025-06-10 10:45:09,153:INFO:Starting cross validation
2025-06-10 10:45:09,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:09,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,337:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,338:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,341:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,342:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,343:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,346:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,349:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,352:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:09,358:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,955:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,962:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,964:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,967:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:13,980:INFO:Calculating mean and std
2025-06-10 10:45:13,982:INFO:Creating metrics dataframe
2025-06-10 10:45:13,988:INFO:Uploading results into container
2025-06-10 10:45:13,989:INFO:Uploading model into container now
2025-06-10 10:45:13,990:INFO:_master_model_container: 2
2025-06-10 10:45:13,990:INFO:_display_container: 2
2025-06-10 10:45:13,990:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-10 10:45:13,990:INFO:create_model() successfully completed......................................
2025-06-10 10:45:14,144:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:14,144:INFO:Creating metrics dataframe
2025-06-10 10:45:14,149:INFO:Initializing Naive Bayes
2025-06-10 10:45:14,149:INFO:Total runtime is 0.20152198076248168 minutes
2025-06-10 10:45:14,150:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:14,150:INFO:Initializing create_model()
2025-06-10 10:45:14,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:14,150:INFO:Checking exceptions
2025-06-10 10:45:14,150:INFO:Importing libraries
2025-06-10 10:45:14,150:INFO:Copying training dataset
2025-06-10 10:45:14,153:INFO:Defining folds
2025-06-10 10:45:14,153:INFO:Declaring metric variables
2025-06-10 10:45:14,153:INFO:Importing untrained model
2025-06-10 10:45:14,154:INFO:Naive Bayes Imported successfully
2025-06-10 10:45:14,154:INFO:Starting cross validation
2025-06-10 10:45:14,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:14,302:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,307:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,312:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,322:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,325:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,328:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,329:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,332:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,334:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,336:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,337:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,337:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,339:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,342:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,342:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,345:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,348:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,354:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,355:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,359:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,360:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,368:INFO:Calculating mean and std
2025-06-10 10:45:14,371:INFO:Creating metrics dataframe
2025-06-10 10:45:14,377:INFO:Uploading results into container
2025-06-10 10:45:14,378:INFO:Uploading model into container now
2025-06-10 10:45:14,379:INFO:_master_model_container: 3
2025-06-10 10:45:14,379:INFO:_display_container: 2
2025-06-10 10:45:14,379:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-10 10:45:14,379:INFO:create_model() successfully completed......................................
2025-06-10 10:45:14,457:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:14,457:INFO:Creating metrics dataframe
2025-06-10 10:45:14,461:INFO:Initializing Decision Tree Classifier
2025-06-10 10:45:14,461:INFO:Total runtime is 0.20672326882680256 minutes
2025-06-10 10:45:14,461:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:14,461:INFO:Initializing create_model()
2025-06-10 10:45:14,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:14,461:INFO:Checking exceptions
2025-06-10 10:45:14,461:INFO:Importing libraries
2025-06-10 10:45:14,461:INFO:Copying training dataset
2025-06-10 10:45:14,464:INFO:Defining folds
2025-06-10 10:45:14,464:INFO:Declaring metric variables
2025-06-10 10:45:14,464:INFO:Importing untrained model
2025-06-10 10:45:14,465:INFO:Decision Tree Classifier Imported successfully
2025-06-10 10:45:14,465:INFO:Starting cross validation
2025-06-10 10:45:14,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:14,616:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,616:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,619:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,619:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,620:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,621:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,623:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,623:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,624:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,626:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,626:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,629:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,630:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,634:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,636:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,637:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,641:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,645:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,648:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,649:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,650:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,651:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,653:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,654:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,654:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,655:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,656:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,656:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,659:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,659:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,666:INFO:Calculating mean and std
2025-06-10 10:45:14,668:INFO:Creating metrics dataframe
2025-06-10 10:45:14,670:INFO:Uploading results into container
2025-06-10 10:45:14,670:INFO:Uploading model into container now
2025-06-10 10:45:14,670:INFO:_master_model_container: 4
2025-06-10 10:45:14,670:INFO:_display_container: 2
2025-06-10 10:45:14,670:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7432, splitter='best')
2025-06-10 10:45:14,670:INFO:create_model() successfully completed......................................
2025-06-10 10:45:14,745:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:14,745:INFO:Creating metrics dataframe
2025-06-10 10:45:14,750:INFO:Initializing SVM - Linear Kernel
2025-06-10 10:45:14,750:INFO:Total runtime is 0.21154091358184812 minutes
2025-06-10 10:45:14,750:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:14,750:INFO:Initializing create_model()
2025-06-10 10:45:14,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:14,750:INFO:Checking exceptions
2025-06-10 10:45:14,750:INFO:Importing libraries
2025-06-10 10:45:14,750:INFO:Copying training dataset
2025-06-10 10:45:14,753:INFO:Defining folds
2025-06-10 10:45:14,753:INFO:Declaring metric variables
2025-06-10 10:45:14,753:INFO:Importing untrained model
2025-06-10 10:45:14,753:INFO:SVM - Linear Kernel Imported successfully
2025-06-10 10:45:14,753:INFO:Starting cross validation
2025-06-10 10:45:14,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:14,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,946:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,958:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,964:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,969:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,971:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,972:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,972:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,975:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,975:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,980:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,984:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,985:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,987:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,989:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,990:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:14,991:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:14,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,011:INFO:Calculating mean and std
2025-06-10 10:45:15,014:INFO:Creating metrics dataframe
2025-06-10 10:45:15,021:INFO:Uploading results into container
2025-06-10 10:45:15,023:INFO:Uploading model into container now
2025-06-10 10:45:15,023:INFO:_master_model_container: 5
2025-06-10 10:45:15,024:INFO:_display_container: 2
2025-06-10 10:45:15,025:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7432, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-10 10:45:15,025:INFO:create_model() successfully completed......................................
2025-06-10 10:45:15,112:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:15,112:INFO:Creating metrics dataframe
2025-06-10 10:45:15,115:INFO:Initializing Ridge Classifier
2025-06-10 10:45:15,115:INFO:Total runtime is 0.2176201780637105 minutes
2025-06-10 10:45:15,115:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:15,116:INFO:Initializing create_model()
2025-06-10 10:45:15,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:15,116:INFO:Checking exceptions
2025-06-10 10:45:15,116:INFO:Importing libraries
2025-06-10 10:45:15,116:INFO:Copying training dataset
2025-06-10 10:45:15,119:INFO:Defining folds
2025-06-10 10:45:15,119:INFO:Declaring metric variables
2025-06-10 10:45:15,119:INFO:Importing untrained model
2025-06-10 10:45:15,119:INFO:Ridge Classifier Imported successfully
2025-06-10 10:45:15,119:INFO:Starting cross validation
2025-06-10 10:45:15,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:15,268:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,274:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,274:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,274:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,274:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,282:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,282:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,285:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,293:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,294:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,294:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,294:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,296:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,296:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,296:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,296:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,298:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,298:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,299:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,300:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,301:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,302:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,302:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:15,302:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,303:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,304:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,305:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,306:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:15,308:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,313:INFO:Calculating mean and std
2025-06-10 10:45:15,314:INFO:Creating metrics dataframe
2025-06-10 10:45:15,316:INFO:Uploading results into container
2025-06-10 10:45:15,317:INFO:Uploading model into container now
2025-06-10 10:45:15,317:INFO:_master_model_container: 6
2025-06-10 10:45:15,317:INFO:_display_container: 2
2025-06-10 10:45:15,317:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7432, solver='auto',
                tol=0.0001)
2025-06-10 10:45:15,317:INFO:create_model() successfully completed......................................
2025-06-10 10:45:15,390:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:15,390:INFO:Creating metrics dataframe
2025-06-10 10:45:15,394:INFO:Initializing Random Forest Classifier
2025-06-10 10:45:15,394:INFO:Total runtime is 0.22227418422698972 minutes
2025-06-10 10:45:15,394:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:15,394:INFO:Initializing create_model()
2025-06-10 10:45:15,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:15,394:INFO:Checking exceptions
2025-06-10 10:45:15,394:INFO:Importing libraries
2025-06-10 10:45:15,394:INFO:Copying training dataset
2025-06-10 10:45:15,397:INFO:Defining folds
2025-06-10 10:45:15,397:INFO:Declaring metric variables
2025-06-10 10:45:15,397:INFO:Importing untrained model
2025-06-10 10:45:15,398:INFO:Random Forest Classifier Imported successfully
2025-06-10 10:45:15,398:INFO:Starting cross validation
2025-06-10 10:45:15,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:15,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,917:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,917:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,928:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,961:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,962:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,962:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,966:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,969:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:15,985:INFO:Calculating mean and std
2025-06-10 10:45:15,986:INFO:Creating metrics dataframe
2025-06-10 10:45:15,988:INFO:Uploading results into container
2025-06-10 10:45:15,989:INFO:Uploading model into container now
2025-06-10 10:45:15,989:INFO:_master_model_container: 7
2025-06-10 10:45:15,989:INFO:_display_container: 2
2025-06-10 10:45:15,989:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7432, verbose=0,
                       warm_start=False)
2025-06-10 10:45:15,989:INFO:create_model() successfully completed......................................
2025-06-10 10:45:16,064:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:16,064:INFO:Creating metrics dataframe
2025-06-10 10:45:16,068:INFO:Initializing Quadratic Discriminant Analysis
2025-06-10 10:45:16,068:INFO:Total runtime is 0.23350650469462075 minutes
2025-06-10 10:45:16,068:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:16,068:INFO:Initializing create_model()
2025-06-10 10:45:16,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:16,068:INFO:Checking exceptions
2025-06-10 10:45:16,068:INFO:Importing libraries
2025-06-10 10:45:16,068:INFO:Copying training dataset
2025-06-10 10:45:16,071:INFO:Defining folds
2025-06-10 10:45:16,071:INFO:Declaring metric variables
2025-06-10 10:45:16,071:INFO:Importing untrained model
2025-06-10 10:45:16,072:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-10 10:45:16,072:INFO:Starting cross validation
2025-06-10 10:45:16,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:16,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,196:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,204:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,209:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,217:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,217:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,217:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,225:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,228:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:45:16,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,235:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,243:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,246:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,249:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,249:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,249:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,250:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,252:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,252:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,253:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,253:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,256:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,257:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,258:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,258:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,258:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,258:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,258:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,259:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,260:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,260:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,265:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,265:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,265:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:45:16,266:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:45:16,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,268:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:45:16,268:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,273:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:16,274:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,287:INFO:Calculating mean and std
2025-06-10 10:45:16,289:INFO:Creating metrics dataframe
2025-06-10 10:45:16,297:INFO:Uploading results into container
2025-06-10 10:45:16,298:INFO:Uploading model into container now
2025-06-10 10:45:16,299:INFO:_master_model_container: 8
2025-06-10 10:45:16,299:INFO:_display_container: 2
2025-06-10 10:45:16,300:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-10 10:45:16,300:INFO:create_model() successfully completed......................................
2025-06-10 10:45:16,387:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:16,387:INFO:Creating metrics dataframe
2025-06-10 10:45:16,395:INFO:Initializing Ada Boost Classifier
2025-06-10 10:45:16,395:INFO:Total runtime is 0.23894949356714884 minutes
2025-06-10 10:45:16,395:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:16,396:INFO:Initializing create_model()
2025-06-10 10:45:16,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:16,396:INFO:Checking exceptions
2025-06-10 10:45:16,396:INFO:Importing libraries
2025-06-10 10:45:16,396:INFO:Copying training dataset
2025-06-10 10:45:16,403:INFO:Defining folds
2025-06-10 10:45:16,404:INFO:Declaring metric variables
2025-06-10 10:45:16,404:INFO:Importing untrained model
2025-06-10 10:45:16,404:INFO:Ada Boost Classifier Imported successfully
2025-06-10 10:45:16,405:INFO:Starting cross validation
2025-06-10 10:45:16,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:16,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,516:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,519:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,522:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,528:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,535:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,545:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,559:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:45:16,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,688:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,692:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,695:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,704:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,705:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,709:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,726:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,727:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,728:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,729:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,729:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,729:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,731:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,732:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,733:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,734:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,735:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,736:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,736:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,736:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,737:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,738:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,738:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,744:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,750:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,750:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:16,752:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,752:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,760:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:16,779:INFO:Calculating mean and std
2025-06-10 10:45:16,780:INFO:Creating metrics dataframe
2025-06-10 10:45:16,788:INFO:Uploading results into container
2025-06-10 10:45:16,789:INFO:Uploading model into container now
2025-06-10 10:45:16,789:INFO:_master_model_container: 9
2025-06-10 10:45:16,790:INFO:_display_container: 2
2025-06-10 10:45:16,790:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7432)
2025-06-10 10:45:16,790:INFO:create_model() successfully completed......................................
2025-06-10 10:45:16,875:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:16,875:INFO:Creating metrics dataframe
2025-06-10 10:45:16,879:INFO:Initializing Gradient Boosting Classifier
2025-06-10 10:45:16,879:INFO:Total runtime is 0.24701439936955769 minutes
2025-06-10 10:45:16,879:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:16,880:INFO:Initializing create_model()
2025-06-10 10:45:16,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:16,880:INFO:Checking exceptions
2025-06-10 10:45:16,880:INFO:Importing libraries
2025-06-10 10:45:16,880:INFO:Copying training dataset
2025-06-10 10:45:16,883:INFO:Defining folds
2025-06-10 10:45:16,883:INFO:Declaring metric variables
2025-06-10 10:45:16,883:INFO:Importing untrained model
2025-06-10 10:45:16,883:INFO:Gradient Boosting Classifier Imported successfully
2025-06-10 10:45:16,884:INFO:Starting cross validation
2025-06-10 10:45:16,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:17,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,926:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,928:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,930:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,944:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,946:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,955:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,960:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,961:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,962:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,964:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,966:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:17,967:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,967:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,973:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:17,979:INFO:Calculating mean and std
2025-06-10 10:45:17,980:INFO:Creating metrics dataframe
2025-06-10 10:45:17,982:INFO:Uploading results into container
2025-06-10 10:45:17,983:INFO:Uploading model into container now
2025-06-10 10:45:17,983:INFO:_master_model_container: 10
2025-06-10 10:45:17,983:INFO:_display_container: 2
2025-06-10 10:45:17,983:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7432, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-10 10:45:17,983:INFO:create_model() successfully completed......................................
2025-06-10 10:45:18,057:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:18,057:INFO:Creating metrics dataframe
2025-06-10 10:45:18,061:INFO:Initializing Linear Discriminant Analysis
2025-06-10 10:45:18,061:INFO:Total runtime is 0.26671212911605835 minutes
2025-06-10 10:45:18,061:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:18,061:INFO:Initializing create_model()
2025-06-10 10:45:18,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:18,062:INFO:Checking exceptions
2025-06-10 10:45:18,062:INFO:Importing libraries
2025-06-10 10:45:18,062:INFO:Copying training dataset
2025-06-10 10:45:18,064:INFO:Defining folds
2025-06-10 10:45:18,064:INFO:Declaring metric variables
2025-06-10 10:45:18,064:INFO:Importing untrained model
2025-06-10 10:45:18,065:INFO:Linear Discriminant Analysis Imported successfully
2025-06-10 10:45:18,065:INFO:Starting cross validation
2025-06-10 10:45:18,066:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:18,209:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,210:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,212:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,212:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,212:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,214:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,216:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,232:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,243:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,246:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:45:18,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,250:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,264:INFO:Calculating mean and std
2025-06-10 10:45:18,266:INFO:Creating metrics dataframe
2025-06-10 10:45:18,272:INFO:Uploading results into container
2025-06-10 10:45:18,273:INFO:Uploading model into container now
2025-06-10 10:45:18,273:INFO:_master_model_container: 11
2025-06-10 10:45:18,274:INFO:_display_container: 2
2025-06-10 10:45:18,274:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-10 10:45:18,274:INFO:create_model() successfully completed......................................
2025-06-10 10:45:18,352:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:18,352:INFO:Creating metrics dataframe
2025-06-10 10:45:18,355:INFO:Initializing Extra Trees Classifier
2025-06-10 10:45:18,355:INFO:Total runtime is 0.2716146190961202 minutes
2025-06-10 10:45:18,355:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:18,356:INFO:Initializing create_model()
2025-06-10 10:45:18,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:18,356:INFO:Checking exceptions
2025-06-10 10:45:18,356:INFO:Importing libraries
2025-06-10 10:45:18,356:INFO:Copying training dataset
2025-06-10 10:45:18,358:INFO:Defining folds
2025-06-10 10:45:18,358:INFO:Declaring metric variables
2025-06-10 10:45:18,358:INFO:Importing untrained model
2025-06-10 10:45:18,358:INFO:Extra Trees Classifier Imported successfully
2025-06-10 10:45:18,359:INFO:Starting cross validation
2025-06-10 10:45:18,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:18,782:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,782:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,786:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,787:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,788:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,790:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,792:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,794:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,798:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,798:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,801:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,802:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,811:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,814:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,817:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,825:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,832:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,844:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,844:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,857:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,861:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,864:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:18,882:INFO:Calculating mean and std
2025-06-10 10:45:18,884:INFO:Creating metrics dataframe
2025-06-10 10:45:18,891:INFO:Uploading results into container
2025-06-10 10:45:18,892:INFO:Uploading model into container now
2025-06-10 10:45:18,892:INFO:_master_model_container: 12
2025-06-10 10:45:18,892:INFO:_display_container: 2
2025-06-10 10:45:18,893:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7432, verbose=0,
                     warm_start=False)
2025-06-10 10:45:18,893:INFO:create_model() successfully completed......................................
2025-06-10 10:45:18,995:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:18,995:INFO:Creating metrics dataframe
2025-06-10 10:45:18,999:INFO:Initializing Light Gradient Boosting Machine
2025-06-10 10:45:18,999:INFO:Total runtime is 0.2823492010434469 minutes
2025-06-10 10:45:18,999:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:18,999:INFO:Initializing create_model()
2025-06-10 10:45:18,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:18,999:INFO:Checking exceptions
2025-06-10 10:45:18,999:INFO:Importing libraries
2025-06-10 10:45:19,000:INFO:Copying training dataset
2025-06-10 10:45:19,003:INFO:Defining folds
2025-06-10 10:45:19,003:INFO:Declaring metric variables
2025-06-10 10:45:19,003:INFO:Importing untrained model
2025-06-10 10:45:19,004:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:45:19,004:INFO:Starting cross validation
2025-06-10 10:45:19,005:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:21,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,367:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,379:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,434:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,440:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,446:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,532:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,537:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,583:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,587:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,592:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,814:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,820:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,826:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,849:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,851:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,854:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,856:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,860:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:21,870:INFO:Calculating mean and std
2025-06-10 10:45:21,872:INFO:Creating metrics dataframe
2025-06-10 10:45:21,877:INFO:Uploading results into container
2025-06-10 10:45:21,877:INFO:Uploading model into container now
2025-06-10 10:45:21,878:INFO:_master_model_container: 13
2025-06-10 10:45:21,878:INFO:_display_container: 2
2025-06-10 10:45:21,879:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7432, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:45:21,879:INFO:create_model() successfully completed......................................
2025-06-10 10:45:21,974:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:21,974:INFO:Creating metrics dataframe
2025-06-10 10:45:21,979:INFO:Initializing Dummy Classifier
2025-06-10 10:45:21,979:INFO:Total runtime is 0.33201911449432375 minutes
2025-06-10 10:45:21,979:INFO:SubProcess create_model() called ==================================
2025-06-10 10:45:21,980:INFO:Initializing create_model()
2025-06-10 10:45:21,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD224D00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:21,980:INFO:Checking exceptions
2025-06-10 10:45:21,980:INFO:Importing libraries
2025-06-10 10:45:21,980:INFO:Copying training dataset
2025-06-10 10:45:21,983:INFO:Defining folds
2025-06-10 10:45:21,983:INFO:Declaring metric variables
2025-06-10 10:45:21,983:INFO:Importing untrained model
2025-06-10 10:45:21,984:INFO:Dummy Classifier Imported successfully
2025-06-10 10:45:21,984:INFO:Starting cross validation
2025-06-10 10:45:21,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:45:22,131:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,135:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,136:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,138:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,138:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,144:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,146:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,146:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,146:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,150:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,150:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,152:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,153:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,154:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,155:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,156:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,157:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,164:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,173:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,175:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,176:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,177:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,177:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:45:22,178:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:45:22,187:INFO:Calculating mean and std
2025-06-10 10:45:22,188:INFO:Creating metrics dataframe
2025-06-10 10:45:22,190:INFO:Uploading results into container
2025-06-10 10:45:22,191:INFO:Uploading model into container now
2025-06-10 10:45:22,191:INFO:_master_model_container: 14
2025-06-10 10:45:22,191:INFO:_display_container: 2
2025-06-10 10:45:22,191:INFO:DummyClassifier(constant=None, random_state=7432, strategy='prior')
2025-06-10 10:45:22,191:INFO:create_model() successfully completed......................................
2025-06-10 10:45:22,266:INFO:SubProcess create_model() end ==================================
2025-06-10 10:45:22,266:INFO:Creating metrics dataframe
2025-06-10 10:45:22,272:INFO:Initializing create_model()
2025-06-10 10:45:22,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D8F3BDC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7432, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:45:22,272:INFO:Checking exceptions
2025-06-10 10:45:22,273:INFO:Importing libraries
2025-06-10 10:45:22,273:INFO:Copying training dataset
2025-06-10 10:45:22,277:INFO:Defining folds
2025-06-10 10:45:22,277:INFO:Declaring metric variables
2025-06-10 10:45:22,278:INFO:Importing untrained model
2025-06-10 10:45:22,278:INFO:Declaring custom model
2025-06-10 10:45:22,279:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:45:22,280:INFO:Cross validation set to False
2025-06-10 10:45:22,280:INFO:Fitting Model
2025-06-10 10:45:22,610:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7432, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:45:22,610:INFO:create_model() successfully completed......................................
2025-06-10 10:45:22,729:INFO:_master_model_container: 14
2025-06-10 10:45:22,729:INFO:_display_container: 2
2025-06-10 10:45:22,730:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7432, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:45:22,730:INFO:compare_models() successfully completed......................................
2025-06-10 10:45:22,736:INFO:Initializing save_model()
2025-06-10 10:45:22,736:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7432, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model_classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-10 10:45:22,736:INFO:Adding model into prep_pipe
2025-06-10 10:45:22,770:INFO:best_model_classification.pkl saved in current working directory
2025-06-10 10:45:22,783:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=7432, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-06-10 10:45:22,783:INFO:save_model() successfully completed......................................
2025-06-10 10:47:25,338:INFO:PyCaret ClassificationExperiment
2025-06-10 10:47:25,338:INFO:Logging name: clf-default-name
2025-06-10 10:47:25,338:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:47:25,339:INFO:version 3.3.2
2025-06-10 10:47:25,339:INFO:Initializing setup()
2025-06-10 10:47:25,339:INFO:self.USI: 96df
2025-06-10 10:47:25,339:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:47:25,339:INFO:Checking environment
2025-06-10 10:47:25,339:INFO:python_version: 3.10.6
2025-06-10 10:47:25,339:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:47:25,339:INFO:machine: AMD64
2025-06-10 10:47:25,339:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:47:25,339:INFO:Memory: svmem(total=8416440320, available=649715712, percent=92.3, used=7766724608, free=649715712)
2025-06-10 10:47:25,339:INFO:Physical Core: 8
2025-06-10 10:47:25,339:INFO:Logical Core: 16
2025-06-10 10:47:25,339:INFO:Checking libraries
2025-06-10 10:47:25,339:INFO:System:
2025-06-10 10:47:25,339:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:47:25,339:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:47:25,339:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:47:25,340:INFO:PyCaret required dependencies:
2025-06-10 10:47:25,340:INFO:                 pip: 23.1.2
2025-06-10 10:47:25,340:INFO:          setuptools: 63.2.0
2025-06-10 10:47:25,340:INFO:             pycaret: 3.3.2
2025-06-10 10:47:25,340:INFO:             IPython: 8.4.0
2025-06-10 10:47:25,340:INFO:          ipywidgets: 8.0.6
2025-06-10 10:47:25,340:INFO:                tqdm: 4.65.0
2025-06-10 10:47:25,340:INFO:               numpy: 1.26.4
2025-06-10 10:47:25,340:INFO:              pandas: 1.4.4
2025-06-10 10:47:25,340:INFO:              jinja2: 3.1.2
2025-06-10 10:47:25,340:INFO:               scipy: 1.11.0
2025-06-10 10:47:25,340:INFO:              joblib: 1.3.2
2025-06-10 10:47:25,340:INFO:             sklearn: 1.4.2
2025-06-10 10:47:25,340:INFO:                pyod: 2.0.5
2025-06-10 10:47:25,340:INFO:            imblearn: 0.13.0
2025-06-10 10:47:25,340:INFO:   category_encoders: 2.7.0
2025-06-10 10:47:25,340:INFO:            lightgbm: 4.6.0
2025-06-10 10:47:25,340:INFO:               numba: 0.61.2
2025-06-10 10:47:25,340:INFO:            requests: 2.31.0
2025-06-10 10:47:25,340:INFO:          matplotlib: 3.5.3
2025-06-10 10:47:25,340:INFO:          scikitplot: 0.3.7
2025-06-10 10:47:25,340:INFO:         yellowbrick: 1.5
2025-06-10 10:47:25,341:INFO:              plotly: 5.24.1
2025-06-10 10:47:25,341:INFO:    plotly-resampler: Not installed
2025-06-10 10:47:25,341:INFO:             kaleido: 0.2.1
2025-06-10 10:47:25,341:INFO:           schemdraw: 0.15
2025-06-10 10:47:25,341:INFO:         statsmodels: 0.14.4
2025-06-10 10:47:25,341:INFO:              sktime: 0.26.0
2025-06-10 10:47:25,341:INFO:               tbats: 1.1.3
2025-06-10 10:47:25,341:INFO:            pmdarima: 2.0.4
2025-06-10 10:47:25,341:INFO:              psutil: 5.9.1
2025-06-10 10:47:25,341:INFO:          markupsafe: 2.1.1
2025-06-10 10:47:25,341:INFO:             pickle5: Not installed
2025-06-10 10:47:25,341:INFO:         cloudpickle: 3.1.1
2025-06-10 10:47:25,341:INFO:         deprecation: 2.1.0
2025-06-10 10:47:25,341:INFO:              xxhash: 3.5.0
2025-06-10 10:47:25,341:INFO:           wurlitzer: Not installed
2025-06-10 10:47:25,341:INFO:PyCaret optional dependencies:
2025-06-10 10:47:25,341:INFO:                shap: Not installed
2025-06-10 10:47:25,341:INFO:           interpret: Not installed
2025-06-10 10:47:25,341:INFO:                umap: Not installed
2025-06-10 10:47:25,341:INFO:     ydata_profiling: Not installed
2025-06-10 10:47:25,341:INFO:  explainerdashboard: Not installed
2025-06-10 10:47:25,341:INFO:             autoviz: Not installed
2025-06-10 10:47:25,341:INFO:           fairlearn: Not installed
2025-06-10 10:47:25,341:INFO:          deepchecks: Not installed
2025-06-10 10:47:25,341:INFO:             xgboost: Not installed
2025-06-10 10:47:25,342:INFO:            catboost: Not installed
2025-06-10 10:47:25,342:INFO:              kmodes: Not installed
2025-06-10 10:47:25,342:INFO:             mlxtend: Not installed
2025-06-10 10:47:25,342:INFO:       statsforecast: Not installed
2025-06-10 10:47:25,342:INFO:        tune_sklearn: Not installed
2025-06-10 10:47:25,342:INFO:                 ray: Not installed
2025-06-10 10:47:25,342:INFO:            hyperopt: Not installed
2025-06-10 10:47:25,342:INFO:              optuna: Not installed
2025-06-10 10:47:25,342:INFO:               skopt: Not installed
2025-06-10 10:47:25,342:INFO:              mlflow: Not installed
2025-06-10 10:47:25,342:INFO:              gradio: Not installed
2025-06-10 10:47:25,342:INFO:             fastapi: Not installed
2025-06-10 10:47:25,342:INFO:             uvicorn: Not installed
2025-06-10 10:47:25,342:INFO:              m2cgen: Not installed
2025-06-10 10:47:25,342:INFO:           evidently: Not installed
2025-06-10 10:47:25,342:INFO:               fugue: Not installed
2025-06-10 10:47:25,342:INFO:           streamlit: 1.45.1
2025-06-10 10:47:25,342:INFO:             prophet: Not installed
2025-06-10 10:47:25,342:INFO:None
2025-06-10 10:47:25,342:INFO:Set up data.
2025-06-10 10:47:25,347:INFO:Set up folding strategy.
2025-06-10 10:47:25,347:INFO:Set up train/test split.
2025-06-10 10:47:25,352:INFO:Set up index.
2025-06-10 10:47:25,352:INFO:Assigning column types.
2025-06-10 10:47:25,354:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:47:25,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,397:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,463:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,464:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,491:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:47:25,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:47:25,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,620:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:47:25,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,743:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:25,745:INFO:Preparing preprocessing pipeline...
2025-06-10 10:47:25,745:INFO:Set up label encoding.
2025-06-10 10:47:25,745:INFO:Set up simple imputation.
2025-06-10 10:47:25,747:INFO:Set up encoding of categorical features.
2025-06-10 10:47:25,813:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:47:25,817:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:47:25,817:INFO:Creating final display dataframe.
2025-06-10 10:47:26,005:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 6015
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 96df
2025-06-10 10:47:26,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:26,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:26,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:26,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:47:26,132:INFO:setup() successfully completed in 0.8s...............
2025-06-10 10:47:26,132:INFO:Initializing compare_models()
2025-06-10 10:47:26,132:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-10 10:47:26,132:INFO:Checking exceptions
2025-06-10 10:47:26,135:INFO:Preparing display monitor
2025-06-10 10:47:26,137:INFO:Initializing Logistic Regression
2025-06-10 10:47:26,137:INFO:Total runtime is 0.0 minutes
2025-06-10 10:47:26,137:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:26,137:INFO:Initializing create_model()
2025-06-10 10:47:26,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:26,137:INFO:Checking exceptions
2025-06-10 10:47:26,137:INFO:Importing libraries
2025-06-10 10:47:26,137:INFO:Copying training dataset
2025-06-10 10:47:26,141:INFO:Defining folds
2025-06-10 10:47:26,141:INFO:Declaring metric variables
2025-06-10 10:47:26,141:INFO:Importing untrained model
2025-06-10 10:47:26,141:INFO:Logistic Regression Imported successfully
2025-06-10 10:47:26,141:INFO:Starting cross validation
2025-06-10 10:47:26,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:26,298:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,299:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,303:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,305:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,307:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,307:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,311:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,316:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,328:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,329:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,336:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,338:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,342:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,346:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,348:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,349:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,352:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,352:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,354:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,354:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,354:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,355:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:26,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,360:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,360:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,361:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,362:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,365:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,373:INFO:Calculating mean and std
2025-06-10 10:47:26,374:INFO:Creating metrics dataframe
2025-06-10 10:47:26,376:INFO:Uploading results into container
2025-06-10 10:47:26,377:INFO:Uploading model into container now
2025-06-10 10:47:26,377:INFO:_master_model_container: 1
2025-06-10 10:47:26,377:INFO:_display_container: 2
2025-06-10 10:47:26,377:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6015, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-10 10:47:26,378:INFO:create_model() successfully completed......................................
2025-06-10 10:47:26,453:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:26,453:INFO:Creating metrics dataframe
2025-06-10 10:47:26,456:INFO:Initializing K Neighbors Classifier
2025-06-10 10:47:26,456:INFO:Total runtime is 0.00532913605372111 minutes
2025-06-10 10:47:26,456:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:26,456:INFO:Initializing create_model()
2025-06-10 10:47:26,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:26,456:INFO:Checking exceptions
2025-06-10 10:47:26,456:INFO:Importing libraries
2025-06-10 10:47:26,456:INFO:Copying training dataset
2025-06-10 10:47:26,459:INFO:Defining folds
2025-06-10 10:47:26,459:INFO:Declaring metric variables
2025-06-10 10:47:26,459:INFO:Importing untrained model
2025-06-10 10:47:26,459:INFO:K Neighbors Classifier Imported successfully
2025-06-10 10:47:26,459:INFO:Starting cross validation
2025-06-10 10:47:26,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:26,605:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,621:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,624:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,629:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,651:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,653:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,654:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,656:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,657:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,658:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,659:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,661:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,665:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,672:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,675:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,685:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,689:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,689:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,691:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,692:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,706:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,709:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,834:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,836:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:26,860:INFO:Calculating mean and std
2025-06-10 10:47:26,862:INFO:Creating metrics dataframe
2025-06-10 10:47:26,868:INFO:Uploading results into container
2025-06-10 10:47:26,869:INFO:Uploading model into container now
2025-06-10 10:47:26,869:INFO:_master_model_container: 2
2025-06-10 10:47:26,869:INFO:_display_container: 2
2025-06-10 10:47:26,869:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-10 10:47:26,870:INFO:create_model() successfully completed......................................
2025-06-10 10:47:26,964:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:26,964:INFO:Creating metrics dataframe
2025-06-10 10:47:26,967:INFO:Initializing Naive Bayes
2025-06-10 10:47:26,967:INFO:Total runtime is 0.013842288653055826 minutes
2025-06-10 10:47:26,967:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:26,967:INFO:Initializing create_model()
2025-06-10 10:47:26,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:26,967:INFO:Checking exceptions
2025-06-10 10:47:26,967:INFO:Importing libraries
2025-06-10 10:47:26,967:INFO:Copying training dataset
2025-06-10 10:47:26,971:INFO:Defining folds
2025-06-10 10:47:26,971:INFO:Declaring metric variables
2025-06-10 10:47:26,971:INFO:Importing untrained model
2025-06-10 10:47:26,972:INFO:Naive Bayes Imported successfully
2025-06-10 10:47:26,972:INFO:Starting cross validation
2025-06-10 10:47:26,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:27,109:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,112:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,113:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,126:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,127:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,127:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,129:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,130:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,130:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,130:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,132:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,132:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,132:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,133:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,134:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,135:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,139:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,143:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,146:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,148:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,152:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,153:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,155:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,157:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,170:INFO:Calculating mean and std
2025-06-10 10:47:27,171:INFO:Creating metrics dataframe
2025-06-10 10:47:27,174:INFO:Uploading results into container
2025-06-10 10:47:27,174:INFO:Uploading model into container now
2025-06-10 10:47:27,175:INFO:_master_model_container: 3
2025-06-10 10:47:27,175:INFO:_display_container: 2
2025-06-10 10:47:27,175:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-10 10:47:27,175:INFO:create_model() successfully completed......................................
2025-06-10 10:47:27,252:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:27,252:INFO:Creating metrics dataframe
2025-06-10 10:47:27,255:INFO:Initializing Decision Tree Classifier
2025-06-10 10:47:27,255:INFO:Total runtime is 0.01864333947499593 minutes
2025-06-10 10:47:27,255:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:27,256:INFO:Initializing create_model()
2025-06-10 10:47:27,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:27,256:INFO:Checking exceptions
2025-06-10 10:47:27,256:INFO:Importing libraries
2025-06-10 10:47:27,256:INFO:Copying training dataset
2025-06-10 10:47:27,258:INFO:Defining folds
2025-06-10 10:47:27,258:INFO:Declaring metric variables
2025-06-10 10:47:27,258:INFO:Importing untrained model
2025-06-10 10:47:27,259:INFO:Decision Tree Classifier Imported successfully
2025-06-10 10:47:27,259:INFO:Starting cross validation
2025-06-10 10:47:27,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:27,399:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,402:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,409:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,414:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,420:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,420:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,430:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,430:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,433:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,440:INFO:Calculating mean and std
2025-06-10 10:47:27,443:INFO:Creating metrics dataframe
2025-06-10 10:47:27,450:INFO:Uploading results into container
2025-06-10 10:47:27,451:INFO:Uploading model into container now
2025-06-10 10:47:27,452:INFO:_master_model_container: 4
2025-06-10 10:47:27,452:INFO:_display_container: 2
2025-06-10 10:47:27,452:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6015, splitter='best')
2025-06-10 10:47:27,453:INFO:create_model() successfully completed......................................
2025-06-10 10:47:27,535:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:27,535:INFO:Creating metrics dataframe
2025-06-10 10:47:27,538:INFO:Initializing SVM - Linear Kernel
2025-06-10 10:47:27,538:INFO:Total runtime is 0.02334729035695394 minutes
2025-06-10 10:47:27,539:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:27,539:INFO:Initializing create_model()
2025-06-10 10:47:27,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:27,539:INFO:Checking exceptions
2025-06-10 10:47:27,539:INFO:Importing libraries
2025-06-10 10:47:27,539:INFO:Copying training dataset
2025-06-10 10:47:27,541:INFO:Defining folds
2025-06-10 10:47:27,541:INFO:Declaring metric variables
2025-06-10 10:47:27,542:INFO:Importing untrained model
2025-06-10 10:47:27,542:INFO:SVM - Linear Kernel Imported successfully
2025-06-10 10:47:27,542:INFO:Starting cross validation
2025-06-10 10:47:27,543:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:27,695:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,696:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,700:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,703:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,713:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,714:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,714:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,716:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,716:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,718:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,719:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,720:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:27,721:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,723:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,724:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,731:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,733:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,733:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,735:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,736:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,738:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,739:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,743:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,743:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,743:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:27,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:27,750:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:27,766:INFO:Calculating mean and std
2025-06-10 10:47:27,768:INFO:Creating metrics dataframe
2025-06-10 10:47:27,777:INFO:Uploading results into container
2025-06-10 10:47:27,778:INFO:Uploading model into container now
2025-06-10 10:47:27,779:INFO:_master_model_container: 5
2025-06-10 10:47:27,779:INFO:_display_container: 2
2025-06-10 10:47:27,780:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6015, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-10 10:47:27,780:INFO:create_model() successfully completed......................................
2025-06-10 10:47:27,880:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:27,880:INFO:Creating metrics dataframe
2025-06-10 10:47:27,883:INFO:Initializing Ridge Classifier
2025-06-10 10:47:27,883:INFO:Total runtime is 0.029108687241872152 minutes
2025-06-10 10:47:27,884:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:27,884:INFO:Initializing create_model()
2025-06-10 10:47:27,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:27,884:INFO:Checking exceptions
2025-06-10 10:47:27,884:INFO:Importing libraries
2025-06-10 10:47:27,884:INFO:Copying training dataset
2025-06-10 10:47:27,888:INFO:Defining folds
2025-06-10 10:47:27,888:INFO:Declaring metric variables
2025-06-10 10:47:27,888:INFO:Importing untrained model
2025-06-10 10:47:27,888:INFO:Ridge Classifier Imported successfully
2025-06-10 10:47:27,889:INFO:Starting cross validation
2025-06-10 10:47:27,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:28,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,041:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,044:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,046:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,050:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,051:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,053:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,053:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,054:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,055:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,056:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,057:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,057:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,057:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,058:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,058:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,060:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,060:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,061:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,066:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,066:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,066:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,067:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,067:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,070:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,070:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,071:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,071:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:28,072:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,072:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,075:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,075:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,077:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:28,078:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,078:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,093:INFO:Calculating mean and std
2025-06-10 10:47:28,096:INFO:Creating metrics dataframe
2025-06-10 10:47:28,104:INFO:Uploading results into container
2025-06-10 10:47:28,105:INFO:Uploading model into container now
2025-06-10 10:47:28,106:INFO:_master_model_container: 6
2025-06-10 10:47:28,106:INFO:_display_container: 2
2025-06-10 10:47:28,107:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6015, solver='auto',
                tol=0.0001)
2025-06-10 10:47:28,107:INFO:create_model() successfully completed......................................
2025-06-10 10:47:28,206:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:28,206:INFO:Creating metrics dataframe
2025-06-10 10:47:28,210:INFO:Initializing Random Forest Classifier
2025-06-10 10:47:28,210:INFO:Total runtime is 0.03455347617467244 minutes
2025-06-10 10:47:28,210:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:28,210:INFO:Initializing create_model()
2025-06-10 10:47:28,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:28,210:INFO:Checking exceptions
2025-06-10 10:47:28,210:INFO:Importing libraries
2025-06-10 10:47:28,210:INFO:Copying training dataset
2025-06-10 10:47:28,213:INFO:Defining folds
2025-06-10 10:47:28,213:INFO:Declaring metric variables
2025-06-10 10:47:28,213:INFO:Importing untrained model
2025-06-10 10:47:28,213:INFO:Random Forest Classifier Imported successfully
2025-06-10 10:47:28,213:INFO:Starting cross validation
2025-06-10 10:47:28,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:28,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,670:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,672:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,673:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,673:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,676:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,678:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,678:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,685:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,687:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,689:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,690:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,691:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,691:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,693:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,694:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,694:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,695:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,717:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,718:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,718:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:28,736:INFO:Calculating mean and std
2025-06-10 10:47:28,739:INFO:Creating metrics dataframe
2025-06-10 10:47:28,746:INFO:Uploading results into container
2025-06-10 10:47:28,748:INFO:Uploading model into container now
2025-06-10 10:47:28,748:INFO:_master_model_container: 7
2025-06-10 10:47:28,749:INFO:_display_container: 2
2025-06-10 10:47:28,750:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6015, verbose=0,
                       warm_start=False)
2025-06-10 10:47:28,750:INFO:create_model() successfully completed......................................
2025-06-10 10:47:28,852:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:28,852:INFO:Creating metrics dataframe
2025-06-10 10:47:28,856:INFO:Initializing Quadratic Discriminant Analysis
2025-06-10 10:47:28,856:INFO:Total runtime is 0.04531811873118083 minutes
2025-06-10 10:47:28,856:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:28,856:INFO:Initializing create_model()
2025-06-10 10:47:28,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:28,856:INFO:Checking exceptions
2025-06-10 10:47:28,856:INFO:Importing libraries
2025-06-10 10:47:28,856:INFO:Copying training dataset
2025-06-10 10:47:28,859:INFO:Defining folds
2025-06-10 10:47:28,859:INFO:Declaring metric variables
2025-06-10 10:47:28,859:INFO:Importing untrained model
2025-06-10 10:47:28,859:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-10 10:47:28,860:INFO:Starting cross validation
2025-06-10 10:47:28,860:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:28,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,955:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,974:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,977:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,983:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,988:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,988:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,989:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:28,991:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,991:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:28,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,993:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,993:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:28,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:47:28,996:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,996:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:28,996:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:28,996:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:28,999:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:28,999:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,002:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,004:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,006:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,006:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weig2025-06-10 10:47:29,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

s\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,015:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,015:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,016:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,016:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,016:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,018:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,019:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,019:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,019:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,022:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,022:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,022:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,023:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,023:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,023:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,024:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,024:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,028:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,028:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,029:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,030:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,030:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:47:29,030:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:47:29,030:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,031:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,032:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:47:29,032:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,033:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,035:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,036:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,036:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,037:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,038:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,038:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,052:INFO:Calculating mean and std
2025-06-10 10:47:29,055:INFO:Creating metrics dataframe
2025-06-10 10:47:29,063:INFO:Uploading results into container
2025-06-10 10:47:29,064:INFO:Uploading model into container now
2025-06-10 10:47:29,065:INFO:_master_model_container: 8
2025-06-10 10:47:29,065:INFO:_display_container: 2
2025-06-10 10:47:29,066:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-10 10:47:29,066:INFO:create_model() successfully completed......................................
2025-06-10 10:47:29,155:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:29,156:INFO:Creating metrics dataframe
2025-06-10 10:47:29,159:INFO:Initializing Ada Boost Classifier
2025-06-10 10:47:29,159:INFO:Total runtime is 0.05036988655726115 minutes
2025-06-10 10:47:29,159:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:29,159:INFO:Initializing create_model()
2025-06-10 10:47:29,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:29,159:INFO:Checking exceptions
2025-06-10 10:47:29,159:INFO:Importing libraries
2025-06-10 10:47:29,159:INFO:Copying training dataset
2025-06-10 10:47:29,162:INFO:Defining folds
2025-06-10 10:47:29,162:INFO:Declaring metric variables
2025-06-10 10:47:29,162:INFO:Importing untrained model
2025-06-10 10:47:29,162:INFO:Ada Boost Classifier Imported successfully
2025-06-10 10:47:29,163:INFO:Starting cross validation
2025-06-10 10:47:29,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:29,264:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,266:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,273:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,277:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,292:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:47:29,440:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,442:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,453:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,454:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,455:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,456:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,457:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,461:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,462:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,463:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:29,465:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,465:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,469:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,470:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,473:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,473:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,475:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,475:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,475:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,479:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,479:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:29,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:29,497:INFO:Calculating mean and std
2025-06-10 10:47:29,499:INFO:Creating metrics dataframe
2025-06-10 10:47:29,501:INFO:Uploading results into container
2025-06-10 10:47:29,501:INFO:Uploading model into container now
2025-06-10 10:47:29,502:INFO:_master_model_container: 9
2025-06-10 10:47:29,502:INFO:_display_container: 2
2025-06-10 10:47:29,502:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6015)
2025-06-10 10:47:29,502:INFO:create_model() successfully completed......................................
2025-06-10 10:47:29,575:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:29,575:INFO:Creating metrics dataframe
2025-06-10 10:47:29,579:INFO:Initializing Gradient Boosting Classifier
2025-06-10 10:47:29,579:INFO:Total runtime is 0.057377755641937256 minutes
2025-06-10 10:47:29,579:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:29,579:INFO:Initializing create_model()
2025-06-10 10:47:29,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:29,579:INFO:Checking exceptions
2025-06-10 10:47:29,579:INFO:Importing libraries
2025-06-10 10:47:29,579:INFO:Copying training dataset
2025-06-10 10:47:29,582:INFO:Defining folds
2025-06-10 10:47:29,582:INFO:Declaring metric variables
2025-06-10 10:47:29,582:INFO:Importing untrained model
2025-06-10 10:47:29,582:INFO:Gradient Boosting Classifier Imported successfully
2025-06-10 10:47:29,582:INFO:Starting cross validation
2025-06-10 10:47:29,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:30,522:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,524:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,530:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,533:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,534:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,538:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,556:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,557:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,560:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,563:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,589:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,610:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,610:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,615:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,615:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,615:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,618:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,618:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,620:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,620:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,623:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,635:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,637:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,639:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,641:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,654:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,655:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,657:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,660:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,665:INFO:Calculating mean and std
2025-06-10 10:47:30,666:INFO:Creating metrics dataframe
2025-06-10 10:47:30,668:INFO:Uploading results into container
2025-06-10 10:47:30,669:INFO:Uploading model into container now
2025-06-10 10:47:30,669:INFO:_master_model_container: 10
2025-06-10 10:47:30,669:INFO:_display_container: 2
2025-06-10 10:47:30,669:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6015, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-10 10:47:30,669:INFO:create_model() successfully completed......................................
2025-06-10 10:47:30,743:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:30,743:INFO:Creating metrics dataframe
2025-06-10 10:47:30,747:INFO:Initializing Linear Discriminant Analysis
2025-06-10 10:47:30,747:INFO:Total runtime is 0.07683844168980916 minutes
2025-06-10 10:47:30,747:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:30,747:INFO:Initializing create_model()
2025-06-10 10:47:30,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:30,747:INFO:Checking exceptions
2025-06-10 10:47:30,747:INFO:Importing libraries
2025-06-10 10:47:30,747:INFO:Copying training dataset
2025-06-10 10:47:30,750:INFO:Defining folds
2025-06-10 10:47:30,750:INFO:Declaring metric variables
2025-06-10 10:47:30,750:INFO:Importing untrained model
2025-06-10 10:47:30,750:INFO:Linear Discriminant Analysis Imported successfully
2025-06-10 10:47:30,750:INFO:Starting cross validation
2025-06-10 10:47:30,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:30,881:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,886:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:30,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:30,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,902:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,904:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,911:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:47:30,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,915:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,917:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:30,935:INFO:Calculating mean and std
2025-06-10 10:47:30,938:INFO:Creating metrics dataframe
2025-06-10 10:47:30,946:INFO:Uploading results into container
2025-06-10 10:47:30,948:INFO:Uploading model into container now
2025-06-10 10:47:30,948:INFO:_master_model_container: 11
2025-06-10 10:47:30,949:INFO:_display_container: 2
2025-06-10 10:47:30,949:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-10 10:47:30,950:INFO:create_model() successfully completed......................................
2025-06-10 10:47:31,046:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:31,046:INFO:Creating metrics dataframe
2025-06-10 10:47:31,049:INFO:Initializing Extra Trees Classifier
2025-06-10 10:47:31,050:INFO:Total runtime is 0.08188536564509073 minutes
2025-06-10 10:47:31,050:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:31,050:INFO:Initializing create_model()
2025-06-10 10:47:31,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:31,050:INFO:Checking exceptions
2025-06-10 10:47:31,050:INFO:Importing libraries
2025-06-10 10:47:31,050:INFO:Copying training dataset
2025-06-10 10:47:31,053:INFO:Defining folds
2025-06-10 10:47:31,053:INFO:Declaring metric variables
2025-06-10 10:47:31,053:INFO:Importing untrained model
2025-06-10 10:47:31,054:INFO:Extra Trees Classifier Imported successfully
2025-06-10 10:47:31,054:INFO:Starting cross validation
2025-06-10 10:47:31,055:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:31,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,451:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,453:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,454:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,456:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,458:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,458:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,481:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,538:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,539:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:31,562:INFO:Calculating mean and std
2025-06-10 10:47:31,564:INFO:Creating metrics dataframe
2025-06-10 10:47:31,571:INFO:Uploading results into container
2025-06-10 10:47:31,573:INFO:Uploading model into container now
2025-06-10 10:47:31,574:INFO:_master_model_container: 12
2025-06-10 10:47:31,574:INFO:_display_container: 2
2025-06-10 10:47:31,575:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6015, verbose=0,
                     warm_start=False)
2025-06-10 10:47:31,575:INFO:create_model() successfully completed......................................
2025-06-10 10:47:31,683:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:31,683:INFO:Creating metrics dataframe
2025-06-10 10:47:31,686:INFO:Initializing Light Gradient Boosting Machine
2025-06-10 10:47:31,686:INFO:Total runtime is 0.09249373277028401 minutes
2025-06-10 10:47:31,686:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:31,687:INFO:Initializing create_model()
2025-06-10 10:47:31,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:31,687:INFO:Checking exceptions
2025-06-10 10:47:31,687:INFO:Importing libraries
2025-06-10 10:47:31,687:INFO:Copying training dataset
2025-06-10 10:47:31,690:INFO:Defining folds
2025-06-10 10:47:31,690:INFO:Declaring metric variables
2025-06-10 10:47:31,690:INFO:Importing untrained model
2025-06-10 10:47:31,691:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:47:31,691:INFO:Starting cross validation
2025-06-10 10:47:31,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:33,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,981:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:33,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,001:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,006:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,109:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,121:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,131:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,136:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,142:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,183:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,195:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,257:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,282:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,287:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,432:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,441:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,456:INFO:Calculating mean and std
2025-06-10 10:47:34,457:INFO:Creating metrics dataframe
2025-06-10 10:47:34,461:INFO:Uploading results into container
2025-06-10 10:47:34,462:INFO:Uploading model into container now
2025-06-10 10:47:34,462:INFO:_master_model_container: 13
2025-06-10 10:47:34,462:INFO:_display_container: 2
2025-06-10 10:47:34,463:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:47:34,463:INFO:create_model() successfully completed......................................
2025-06-10 10:47:34,563:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:34,563:INFO:Creating metrics dataframe
2025-06-10 10:47:34,566:INFO:Initializing Dummy Classifier
2025-06-10 10:47:34,567:INFO:Total runtime is 0.1404974897702535 minutes
2025-06-10 10:47:34,567:INFO:SubProcess create_model() called ==================================
2025-06-10 10:47:34,567:INFO:Initializing create_model()
2025-06-10 10:47:34,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E3A90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:34,567:INFO:Checking exceptions
2025-06-10 10:47:34,567:INFO:Importing libraries
2025-06-10 10:47:34,567:INFO:Copying training dataset
2025-06-10 10:47:34,570:INFO:Defining folds
2025-06-10 10:47:34,570:INFO:Declaring metric variables
2025-06-10 10:47:34,570:INFO:Importing untrained model
2025-06-10 10:47:34,570:INFO:Dummy Classifier Imported successfully
2025-06-10 10:47:34,570:INFO:Starting cross validation
2025-06-10 10:47:34,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:47:34,708:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,709:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,713:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,714:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,717:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,717:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,720:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,720:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,721:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,723:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,727:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,727:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,729:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,729:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,731:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,732:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,733:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,734:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,735:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,754:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,755:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,758:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,760:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,760:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,761:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,762:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,763:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,763:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,764:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:47:34,765:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,765:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:47:34,774:INFO:Calculating mean and std
2025-06-10 10:47:34,776:INFO:Creating metrics dataframe
2025-06-10 10:47:34,783:INFO:Uploading results into container
2025-06-10 10:47:34,783:INFO:Uploading model into container now
2025-06-10 10:47:34,784:INFO:_master_model_container: 14
2025-06-10 10:47:34,784:INFO:_display_container: 2
2025-06-10 10:47:34,785:INFO:DummyClassifier(constant=None, random_state=6015, strategy='prior')
2025-06-10 10:47:34,785:INFO:create_model() successfully completed......................................
2025-06-10 10:47:34,870:INFO:SubProcess create_model() end ==================================
2025-06-10 10:47:34,870:INFO:Creating metrics dataframe
2025-06-10 10:47:34,875:INFO:Initializing create_model()
2025-06-10 10:47:34,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDEAEC0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:47:34,876:INFO:Checking exceptions
2025-06-10 10:47:34,876:INFO:Importing libraries
2025-06-10 10:47:34,877:INFO:Copying training dataset
2025-06-10 10:47:34,879:INFO:Defining folds
2025-06-10 10:47:34,879:INFO:Declaring metric variables
2025-06-10 10:47:34,879:INFO:Importing untrained model
2025-06-10 10:47:34,879:INFO:Declaring custom model
2025-06-10 10:47:34,880:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:47:34,881:INFO:Cross validation set to False
2025-06-10 10:47:34,881:INFO:Fitting Model
2025-06-10 10:47:35,156:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:47:35,157:INFO:create_model() successfully completed......................................
2025-06-10 10:47:35,273:INFO:_master_model_container: 14
2025-06-10 10:47:35,274:INFO:_display_container: 2
2025-06-10 10:47:35,274:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:47:35,274:INFO:compare_models() successfully completed......................................
2025-06-10 10:47:35,279:INFO:Initializing save_model()
2025-06-10 10:47:35,279:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6015, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model_classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-10 10:47:35,279:INFO:Adding model into prep_pipe
2025-06-10 10:47:35,312:INFO:best_model_classification.pkl saved in current working directory
2025-06-10 10:47:35,324:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=6015, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-06-10 10:47:35,324:INFO:save_model() successfully completed......................................
2025-06-10 10:50:08,958:INFO:Initializing load_model()
2025-06-10 10:50:08,959:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-10 10:50:10,782:INFO:Initializing load_model()
2025-06-10 10:50:10,782:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-10 10:50:30,179:INFO:PyCaret ClassificationExperiment
2025-06-10 10:50:30,179:INFO:Logging name: clf-default-name
2025-06-10 10:50:30,179:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:50:30,179:INFO:version 3.3.2
2025-06-10 10:50:30,180:INFO:Initializing setup()
2025-06-10 10:50:30,180:INFO:self.USI: a08c
2025-06-10 10:50:30,180:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:50:30,180:INFO:Checking environment
2025-06-10 10:50:30,180:INFO:python_version: 3.10.6
2025-06-10 10:50:30,180:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:50:30,180:INFO:machine: AMD64
2025-06-10 10:50:30,180:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:50:30,180:INFO:Memory: svmem(total=8416440320, available=640081920, percent=92.4, used=7776358400, free=640081920)
2025-06-10 10:50:30,180:INFO:Physical Core: 8
2025-06-10 10:50:30,180:INFO:Logical Core: 16
2025-06-10 10:50:30,180:INFO:Checking libraries
2025-06-10 10:50:30,180:INFO:System:
2025-06-10 10:50:30,180:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:50:30,180:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:50:30,180:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:50:30,180:INFO:PyCaret required dependencies:
2025-06-10 10:50:30,180:INFO:                 pip: 23.1.2
2025-06-10 10:50:30,180:INFO:          setuptools: 63.2.0
2025-06-10 10:50:30,180:INFO:             pycaret: 3.3.2
2025-06-10 10:50:30,180:INFO:             IPython: 8.4.0
2025-06-10 10:50:30,181:INFO:          ipywidgets: 8.0.6
2025-06-10 10:50:30,181:INFO:                tqdm: 4.65.0
2025-06-10 10:50:30,181:INFO:               numpy: 1.26.4
2025-06-10 10:50:30,181:INFO:              pandas: 1.4.4
2025-06-10 10:50:30,181:INFO:              jinja2: 3.1.2
2025-06-10 10:50:30,181:INFO:               scipy: 1.11.0
2025-06-10 10:50:30,181:INFO:              joblib: 1.3.2
2025-06-10 10:50:30,181:INFO:             sklearn: 1.4.2
2025-06-10 10:50:30,181:INFO:                pyod: 2.0.5
2025-06-10 10:50:30,181:INFO:            imblearn: 0.13.0
2025-06-10 10:50:30,181:INFO:   category_encoders: 2.7.0
2025-06-10 10:50:30,181:INFO:            lightgbm: 4.6.0
2025-06-10 10:50:30,181:INFO:               numba: 0.61.2
2025-06-10 10:50:30,181:INFO:            requests: 2.31.0
2025-06-10 10:50:30,181:INFO:          matplotlib: 3.5.3
2025-06-10 10:50:30,181:INFO:          scikitplot: 0.3.7
2025-06-10 10:50:30,181:INFO:         yellowbrick: 1.5
2025-06-10 10:50:30,181:INFO:              plotly: 5.24.1
2025-06-10 10:50:30,181:INFO:    plotly-resampler: Not installed
2025-06-10 10:50:30,181:INFO:             kaleido: 0.2.1
2025-06-10 10:50:30,181:INFO:           schemdraw: 0.15
2025-06-10 10:50:30,181:INFO:         statsmodels: 0.14.4
2025-06-10 10:50:30,181:INFO:              sktime: 0.26.0
2025-06-10 10:50:30,182:INFO:               tbats: 1.1.3
2025-06-10 10:50:30,182:INFO:            pmdarima: 2.0.4
2025-06-10 10:50:30,182:INFO:              psutil: 5.9.1
2025-06-10 10:50:30,182:INFO:          markupsafe: 2.1.1
2025-06-10 10:50:30,182:INFO:             pickle5: Not installed
2025-06-10 10:50:30,182:INFO:         cloudpickle: 3.1.1
2025-06-10 10:50:30,182:INFO:         deprecation: 2.1.0
2025-06-10 10:50:30,182:INFO:              xxhash: 3.5.0
2025-06-10 10:50:30,182:INFO:           wurlitzer: Not installed
2025-06-10 10:50:30,182:INFO:PyCaret optional dependencies:
2025-06-10 10:50:30,182:INFO:                shap: Not installed
2025-06-10 10:50:30,182:INFO:           interpret: Not installed
2025-06-10 10:50:30,182:INFO:                umap: Not installed
2025-06-10 10:50:30,182:INFO:     ydata_profiling: Not installed
2025-06-10 10:50:30,182:INFO:  explainerdashboard: Not installed
2025-06-10 10:50:30,182:INFO:             autoviz: Not installed
2025-06-10 10:50:30,182:INFO:           fairlearn: Not installed
2025-06-10 10:50:30,182:INFO:          deepchecks: Not installed
2025-06-10 10:50:30,182:INFO:             xgboost: Not installed
2025-06-10 10:50:30,182:INFO:            catboost: Not installed
2025-06-10 10:50:30,182:INFO:              kmodes: Not installed
2025-06-10 10:50:30,182:INFO:             mlxtend: Not installed
2025-06-10 10:50:30,182:INFO:       statsforecast: Not installed
2025-06-10 10:50:30,182:INFO:        tune_sklearn: Not installed
2025-06-10 10:50:30,182:INFO:                 ray: Not installed
2025-06-10 10:50:30,182:INFO:            hyperopt: Not installed
2025-06-10 10:50:30,183:INFO:              optuna: Not installed
2025-06-10 10:50:30,183:INFO:               skopt: Not installed
2025-06-10 10:50:30,183:INFO:              mlflow: Not installed
2025-06-10 10:50:30,183:INFO:              gradio: Not installed
2025-06-10 10:50:30,183:INFO:             fastapi: Not installed
2025-06-10 10:50:30,183:INFO:             uvicorn: Not installed
2025-06-10 10:50:30,183:INFO:              m2cgen: Not installed
2025-06-10 10:50:30,183:INFO:           evidently: Not installed
2025-06-10 10:50:30,183:INFO:               fugue: Not installed
2025-06-10 10:50:30,183:INFO:           streamlit: 1.45.1
2025-06-10 10:50:30,183:INFO:             prophet: Not installed
2025-06-10 10:50:30,183:INFO:None
2025-06-10 10:50:30,183:INFO:Set up data.
2025-06-10 10:50:30,188:INFO:Set up folding strategy.
2025-06-10 10:50:30,188:INFO:Set up train/test split.
2025-06-10 10:50:30,194:INFO:Set up index.
2025-06-10 10:50:30,194:INFO:Assigning column types.
2025-06-10 10:50:30,196:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:50:30,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,305:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,330:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:50:30,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:30,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,456:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:50:30,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,601:INFO:Preparing preprocessing pipeline...
2025-06-10 10:50:30,602:INFO:Set up label encoding.
2025-06-10 10:50:30,602:INFO:Set up simple imputation.
2025-06-10 10:50:30,604:INFO:Set up encoding of categorical features.
2025-06-10 10:50:30,676:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:50:30,680:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:50:30,680:INFO:Creating final display dataframe.
2025-06-10 10:50:30,875:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                  329
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 a08c
2025-06-10 10:50:30,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:30,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:31,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:31,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:31,005:INFO:setup() successfully completed in 0.83s...............
2025-06-10 10:50:51,527:INFO:PyCaret ClassificationExperiment
2025-06-10 10:50:51,527:INFO:Logging name: clf-default-name
2025-06-10 10:50:51,527:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:50:51,527:INFO:version 3.3.2
2025-06-10 10:50:51,527:INFO:Initializing setup()
2025-06-10 10:50:51,527:INFO:self.USI: c0b5
2025-06-10 10:50:51,527:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:50:51,527:INFO:Checking environment
2025-06-10 10:50:51,527:INFO:python_version: 3.10.6
2025-06-10 10:50:51,528:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:50:51,528:INFO:machine: AMD64
2025-06-10 10:50:51,528:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:50:51,528:INFO:Memory: svmem(total=8416440320, available=537411584, percent=93.6, used=7879028736, free=537411584)
2025-06-10 10:50:51,528:INFO:Physical Core: 8
2025-06-10 10:50:51,529:INFO:Logical Core: 16
2025-06-10 10:50:51,529:INFO:Checking libraries
2025-06-10 10:50:51,529:INFO:System:
2025-06-10 10:50:51,529:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:50:51,529:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:50:51,529:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:50:51,529:INFO:PyCaret required dependencies:
2025-06-10 10:50:51,529:INFO:                 pip: 23.1.2
2025-06-10 10:50:51,529:INFO:          setuptools: 63.2.0
2025-06-10 10:50:51,529:INFO:             pycaret: 3.3.2
2025-06-10 10:50:51,529:INFO:             IPython: 8.4.0
2025-06-10 10:50:51,529:INFO:          ipywidgets: 8.0.6
2025-06-10 10:50:51,529:INFO:                tqdm: 4.65.0
2025-06-10 10:50:51,529:INFO:               numpy: 1.26.4
2025-06-10 10:50:51,529:INFO:              pandas: 1.4.4
2025-06-10 10:50:51,529:INFO:              jinja2: 3.1.2
2025-06-10 10:50:51,529:INFO:               scipy: 1.11.0
2025-06-10 10:50:51,530:INFO:              joblib: 1.3.2
2025-06-10 10:50:51,530:INFO:             sklearn: 1.4.2
2025-06-10 10:50:51,530:INFO:                pyod: 2.0.5
2025-06-10 10:50:51,530:INFO:            imblearn: 0.13.0
2025-06-10 10:50:51,530:INFO:   category_encoders: 2.7.0
2025-06-10 10:50:51,530:INFO:            lightgbm: 4.6.0
2025-06-10 10:50:51,530:INFO:               numba: 0.61.2
2025-06-10 10:50:51,530:INFO:            requests: 2.31.0
2025-06-10 10:50:51,530:INFO:          matplotlib: 3.5.3
2025-06-10 10:50:51,530:INFO:          scikitplot: 0.3.7
2025-06-10 10:50:51,530:INFO:         yellowbrick: 1.5
2025-06-10 10:50:51,530:INFO:              plotly: 5.24.1
2025-06-10 10:50:51,530:INFO:    plotly-resampler: Not installed
2025-06-10 10:50:51,530:INFO:             kaleido: 0.2.1
2025-06-10 10:50:51,530:INFO:           schemdraw: 0.15
2025-06-10 10:50:51,531:INFO:         statsmodels: 0.14.4
2025-06-10 10:50:51,531:INFO:              sktime: 0.26.0
2025-06-10 10:50:51,531:INFO:               tbats: 1.1.3
2025-06-10 10:50:51,531:INFO:            pmdarima: 2.0.4
2025-06-10 10:50:51,531:INFO:              psutil: 5.9.1
2025-06-10 10:50:51,531:INFO:          markupsafe: 2.1.1
2025-06-10 10:50:51,531:INFO:             pickle5: Not installed
2025-06-10 10:50:51,531:INFO:         cloudpickle: 3.1.1
2025-06-10 10:50:51,531:INFO:         deprecation: 2.1.0
2025-06-10 10:50:51,531:INFO:              xxhash: 3.5.0
2025-06-10 10:50:51,531:INFO:           wurlitzer: Not installed
2025-06-10 10:50:51,531:INFO:PyCaret optional dependencies:
2025-06-10 10:50:51,531:INFO:                shap: Not installed
2025-06-10 10:50:51,531:INFO:           interpret: Not installed
2025-06-10 10:50:51,531:INFO:                umap: Not installed
2025-06-10 10:50:51,531:INFO:     ydata_profiling: Not installed
2025-06-10 10:50:51,531:INFO:  explainerdashboard: Not installed
2025-06-10 10:50:51,531:INFO:             autoviz: Not installed
2025-06-10 10:50:51,531:INFO:           fairlearn: Not installed
2025-06-10 10:50:51,531:INFO:          deepchecks: Not installed
2025-06-10 10:50:51,531:INFO:             xgboost: Not installed
2025-06-10 10:50:51,532:INFO:            catboost: Not installed
2025-06-10 10:50:51,532:INFO:              kmodes: Not installed
2025-06-10 10:50:51,532:INFO:             mlxtend: Not installed
2025-06-10 10:50:51,532:INFO:       statsforecast: Not installed
2025-06-10 10:50:51,532:INFO:        tune_sklearn: Not installed
2025-06-10 10:50:51,532:INFO:                 ray: Not installed
2025-06-10 10:50:51,532:INFO:            hyperopt: Not installed
2025-06-10 10:50:51,532:INFO:              optuna: Not installed
2025-06-10 10:50:51,532:INFO:               skopt: Not installed
2025-06-10 10:50:51,532:INFO:              mlflow: Not installed
2025-06-10 10:50:51,532:INFO:              gradio: Not installed
2025-06-10 10:50:51,532:INFO:             fastapi: Not installed
2025-06-10 10:50:51,532:INFO:             uvicorn: Not installed
2025-06-10 10:50:51,532:INFO:              m2cgen: Not installed
2025-06-10 10:50:51,532:INFO:           evidently: Not installed
2025-06-10 10:50:51,532:INFO:               fugue: Not installed
2025-06-10 10:50:51,532:INFO:           streamlit: 1.45.1
2025-06-10 10:50:51,532:INFO:             prophet: Not installed
2025-06-10 10:50:51,532:INFO:None
2025-06-10 10:50:51,532:INFO:Set up data.
2025-06-10 10:50:51,537:INFO:Set up folding strategy.
2025-06-10 10:50:51,537:INFO:Set up train/test split.
2025-06-10 10:50:51,542:INFO:Set up index.
2025-06-10 10:50:51,542:INFO:Assigning column types.
2025-06-10 10:50:51,545:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:50:51,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,654:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,678:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,678:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:50:51,717:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:50:51,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,807:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:50:51,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,931:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,931:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:51,932:INFO:Preparing preprocessing pipeline...
2025-06-10 10:50:51,933:INFO:Set up label encoding.
2025-06-10 10:50:51,933:INFO:Set up simple imputation.
2025-06-10 10:50:51,935:INFO:Set up encoding of categorical features.
2025-06-10 10:50:52,001:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:50:52,008:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:50:52,009:INFO:Creating final display dataframe.
2025-06-10 10:50:52,199:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 6217
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 c0b5
2025-06-10 10:50:52,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:52,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:52,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:52,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:50:52,337:INFO:setup() successfully completed in 0.81s...............
2025-06-10 10:50:52,337:INFO:Initializing compare_models()
2025-06-10 10:50:52,337:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-10 10:50:52,338:INFO:Checking exceptions
2025-06-10 10:50:52,340:INFO:Preparing display monitor
2025-06-10 10:50:52,342:INFO:Initializing Logistic Regression
2025-06-10 10:50:52,342:INFO:Total runtime is 0.0 minutes
2025-06-10 10:50:52,342:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:52,343:INFO:Initializing create_model()
2025-06-10 10:50:52,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:52,343:INFO:Checking exceptions
2025-06-10 10:50:52,343:INFO:Importing libraries
2025-06-10 10:50:52,343:INFO:Copying training dataset
2025-06-10 10:50:52,346:INFO:Defining folds
2025-06-10 10:50:52,346:INFO:Declaring metric variables
2025-06-10 10:50:52,346:INFO:Importing untrained model
2025-06-10 10:50:52,347:INFO:Logistic Regression Imported successfully
2025-06-10 10:50:52,347:INFO:Starting cross validation
2025-06-10 10:50:52,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:52,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,502:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,518:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,521:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,539:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,540:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,544:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,546:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,546:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,549:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,551:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,552:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,598:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:52,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,607:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,671:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,675:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,678:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,694:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:52,696:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,699:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,701:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:52,724:INFO:Calculating mean and std
2025-06-10 10:50:52,725:INFO:Creating metrics dataframe
2025-06-10 10:50:52,727:INFO:Uploading results into container
2025-06-10 10:50:52,728:INFO:Uploading model into container now
2025-06-10 10:50:52,728:INFO:_master_model_container: 1
2025-06-10 10:50:52,728:INFO:_display_container: 2
2025-06-10 10:50:52,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6217, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-10 10:50:52,728:INFO:create_model() successfully completed......................................
2025-06-10 10:50:52,815:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:52,815:INFO:Creating metrics dataframe
2025-06-10 10:50:52,818:INFO:Initializing K Neighbors Classifier
2025-06-10 10:50:52,818:INFO:Total runtime is 0.007936596870422363 minutes
2025-06-10 10:50:52,819:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:52,819:INFO:Initializing create_model()
2025-06-10 10:50:52,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:52,819:INFO:Checking exceptions
2025-06-10 10:50:52,819:INFO:Importing libraries
2025-06-10 10:50:52,819:INFO:Copying training dataset
2025-06-10 10:50:52,822:INFO:Defining folds
2025-06-10 10:50:52,822:INFO:Declaring metric variables
2025-06-10 10:50:52,822:INFO:Importing untrained model
2025-06-10 10:50:52,822:INFO:K Neighbors Classifier Imported successfully
2025-06-10 10:50:52,822:INFO:Starting cross validation
2025-06-10 10:50:52,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:53,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,013:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,017:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,018:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,019:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,022:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,031:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,036:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,044:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,047:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:53,050:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,051:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,054:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,084:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:53,104:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,202:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,205:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,208:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,215:INFO:Calculating mean and std
2025-06-10 10:50:53,216:INFO:Creating metrics dataframe
2025-06-10 10:50:53,218:INFO:Uploading results into container
2025-06-10 10:50:53,219:INFO:Uploading model into container now
2025-06-10 10:50:53,219:INFO:_master_model_container: 2
2025-06-10 10:50:53,219:INFO:_display_container: 2
2025-06-10 10:50:53,219:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-10 10:50:53,220:INFO:create_model() successfully completed......................................
2025-06-10 10:50:53,295:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:53,296:INFO:Creating metrics dataframe
2025-06-10 10:50:53,300:INFO:Initializing Naive Bayes
2025-06-10 10:50:53,300:INFO:Total runtime is 0.015970341364542645 minutes
2025-06-10 10:50:53,300:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:53,300:INFO:Initializing create_model()
2025-06-10 10:50:53,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:53,300:INFO:Checking exceptions
2025-06-10 10:50:53,300:INFO:Importing libraries
2025-06-10 10:50:53,300:INFO:Copying training dataset
2025-06-10 10:50:53,303:INFO:Defining folds
2025-06-10 10:50:53,303:INFO:Declaring metric variables
2025-06-10 10:50:53,303:INFO:Importing untrained model
2025-06-10 10:50:53,303:INFO:Naive Bayes Imported successfully
2025-06-10 10:50:53,304:INFO:Starting cross validation
2025-06-10 10:50:53,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:53,454:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,457:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,460:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,507:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,512:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,532:INFO:Calculating mean and std
2025-06-10 10:50:53,533:INFO:Creating metrics dataframe
2025-06-10 10:50:53,536:INFO:Uploading results into container
2025-06-10 10:50:53,536:INFO:Uploading model into container now
2025-06-10 10:50:53,536:INFO:_master_model_container: 3
2025-06-10 10:50:53,536:INFO:_display_container: 2
2025-06-10 10:50:53,536:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-10 10:50:53,536:INFO:create_model() successfully completed......................................
2025-06-10 10:50:53,639:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:53,639:INFO:Creating metrics dataframe
2025-06-10 10:50:53,643:INFO:Initializing Decision Tree Classifier
2025-06-10 10:50:53,643:INFO:Total runtime is 0.02168050209681193 minutes
2025-06-10 10:50:53,643:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:53,644:INFO:Initializing create_model()
2025-06-10 10:50:53,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:53,644:INFO:Checking exceptions
2025-06-10 10:50:53,644:INFO:Importing libraries
2025-06-10 10:50:53,644:INFO:Copying training dataset
2025-06-10 10:50:53,647:INFO:Defining folds
2025-06-10 10:50:53,647:INFO:Declaring metric variables
2025-06-10 10:50:53,647:INFO:Importing untrained model
2025-06-10 10:50:53,647:INFO:Decision Tree Classifier Imported successfully
2025-06-10 10:50:53,647:INFO:Starting cross validation
2025-06-10 10:50:53,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:53,779:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,783:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,787:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,791:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,794:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,803:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,803:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,804:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,811:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,811:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,816:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,826:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,827:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,831:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,832:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,834:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,836:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,836:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,839:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,839:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:53,847:INFO:Calculating mean and std
2025-06-10 10:50:53,848:INFO:Creating metrics dataframe
2025-06-10 10:50:53,850:INFO:Uploading results into container
2025-06-10 10:50:53,851:INFO:Uploading model into container now
2025-06-10 10:50:53,851:INFO:_master_model_container: 4
2025-06-10 10:50:53,851:INFO:_display_container: 2
2025-06-10 10:50:53,851:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6217, splitter='best')
2025-06-10 10:50:53,851:INFO:create_model() successfully completed......................................
2025-06-10 10:50:53,957:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:53,957:INFO:Creating metrics dataframe
2025-06-10 10:50:53,963:INFO:Initializing SVM - Linear Kernel
2025-06-10 10:50:53,963:INFO:Total runtime is 0.027022727330525718 minutes
2025-06-10 10:50:53,963:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:53,963:INFO:Initializing create_model()
2025-06-10 10:50:53,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:53,963:INFO:Checking exceptions
2025-06-10 10:50:53,963:INFO:Importing libraries
2025-06-10 10:50:53,963:INFO:Copying training dataset
2025-06-10 10:50:53,966:INFO:Defining folds
2025-06-10 10:50:53,966:INFO:Declaring metric variables
2025-06-10 10:50:53,967:INFO:Importing untrained model
2025-06-10 10:50:53,967:INFO:SVM - Linear Kernel Imported successfully
2025-06-10 10:50:53,967:INFO:Starting cross validation
2025-06-10 10:50:53,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:54,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,172:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,175:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,177:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,179:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,182:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,183:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,189:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,191:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,194:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,194:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,195:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,196:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,196:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,199:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,200:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,200:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,201:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,207:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,208:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,211:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,213:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,225:INFO:Calculating mean and std
2025-06-10 10:50:54,227:INFO:Creating metrics dataframe
2025-06-10 10:50:54,235:INFO:Uploading results into container
2025-06-10 10:50:54,236:INFO:Uploading model into container now
2025-06-10 10:50:54,237:INFO:_master_model_container: 5
2025-06-10 10:50:54,237:INFO:_display_container: 2
2025-06-10 10:50:54,238:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6217, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-10 10:50:54,239:INFO:create_model() successfully completed......................................
2025-06-10 10:50:54,329:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:54,329:INFO:Creating metrics dataframe
2025-06-10 10:50:54,332:INFO:Initializing Ridge Classifier
2025-06-10 10:50:54,332:INFO:Total runtime is 0.0331703265508016 minutes
2025-06-10 10:50:54,332:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:54,333:INFO:Initializing create_model()
2025-06-10 10:50:54,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:54,333:INFO:Checking exceptions
2025-06-10 10:50:54,333:INFO:Importing libraries
2025-06-10 10:50:54,333:INFO:Copying training dataset
2025-06-10 10:50:54,336:INFO:Defining folds
2025-06-10 10:50:54,336:INFO:Declaring metric variables
2025-06-10 10:50:54,336:INFO:Importing untrained model
2025-06-10 10:50:54,336:INFO:Ridge Classifier Imported successfully
2025-06-10 10:50:54,336:INFO:Starting cross validation
2025-06-10 10:50:54,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:54,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,474:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,479:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,487:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,503:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:54,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:54,516:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:54,528:INFO:Calculating mean and std
2025-06-10 10:50:54,530:INFO:Creating metrics dataframe
2025-06-10 10:50:54,538:INFO:Uploading results into container
2025-06-10 10:50:54,539:INFO:Uploading model into container now
2025-06-10 10:50:54,540:INFO:_master_model_container: 6
2025-06-10 10:50:54,540:INFO:_display_container: 2
2025-06-10 10:50:54,541:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6217, solver='auto',
                tol=0.0001)
2025-06-10 10:50:54,541:INFO:create_model() successfully completed......................................
2025-06-10 10:50:54,626:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:54,626:INFO:Creating metrics dataframe
2025-06-10 10:50:54,629:INFO:Initializing Random Forest Classifier
2025-06-10 10:50:54,630:INFO:Total runtime is 0.038141953945159915 minutes
2025-06-10 10:50:54,630:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:54,630:INFO:Initializing create_model()
2025-06-10 10:50:54,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:54,630:INFO:Checking exceptions
2025-06-10 10:50:54,630:INFO:Importing libraries
2025-06-10 10:50:54,630:INFO:Copying training dataset
2025-06-10 10:50:54,633:INFO:Defining folds
2025-06-10 10:50:54,633:INFO:Declaring metric variables
2025-06-10 10:50:54,633:INFO:Importing untrained model
2025-06-10 10:50:54,633:INFO:Random Forest Classifier Imported successfully
2025-06-10 10:50:54,634:INFO:Starting cross validation
2025-06-10 10:50:54,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:55,109:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,109:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,118:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,118:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,120:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,121:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,136:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,140:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,142:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,154:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,154:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,156:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,157:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,167:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,172:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,192:INFO:Calculating mean and std
2025-06-10 10:50:55,194:INFO:Creating metrics dataframe
2025-06-10 10:50:55,202:INFO:Uploading results into container
2025-06-10 10:50:55,203:INFO:Uploading model into container now
2025-06-10 10:50:55,204:INFO:_master_model_container: 7
2025-06-10 10:50:55,204:INFO:_display_container: 2
2025-06-10 10:50:55,205:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6217, verbose=0,
                       warm_start=False)
2025-06-10 10:50:55,205:INFO:create_model() successfully completed......................................
2025-06-10 10:50:55,284:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:55,284:INFO:Creating metrics dataframe
2025-06-10 10:50:55,288:INFO:Initializing Quadratic Discriminant Analysis
2025-06-10 10:50:55,288:INFO:Total runtime is 0.049108159542083744 minutes
2025-06-10 10:50:55,288:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:55,289:INFO:Initializing create_model()
2025-06-10 10:50:55,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:55,289:INFO:Checking exceptions
2025-06-10 10:50:55,289:INFO:Importing libraries
2025-06-10 10:50:55,289:INFO:Copying training dataset
2025-06-10 10:50:55,291:INFO:Defining folds
2025-06-10 10:50:55,291:INFO:Declaring metric variables
2025-06-10 10:50:55,292:INFO:Importing untrained model
2025-06-10 10:50:55,292:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-10 10:50:55,292:INFO:Starting cross validation
2025-06-10 10:50:55,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:55,440:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,442:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,446:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,451:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,455:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,455:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,463:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:50:55,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,487:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

 self.scalings_])

2025-06-10 10:50:55,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

f this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,502:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,503:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,506:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,506:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,507:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,507:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:50:55,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:50:55,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:50:55,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,514:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,514:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,514:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,517:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,517:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,518:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:55,520:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,538:INFO:Calculating mean and std
2025-06-10 10:50:55,540:INFO:Creating metrics dataframe
2025-06-10 10:50:55,548:INFO:Uploading results into container
2025-06-10 10:50:55,550:INFO:Uploading model into container now
2025-06-10 10:50:55,550:INFO:_master_model_container: 8
2025-06-10 10:50:55,551:INFO:_display_container: 2
2025-06-10 10:50:55,551:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-10 10:50:55,551:INFO:create_model() successfully completed......................................
2025-06-10 10:50:55,638:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:55,638:INFO:Creating metrics dataframe
2025-06-10 10:50:55,642:INFO:Initializing Ada Boost Classifier
2025-06-10 10:50:55,642:INFO:Total runtime is 0.05501070022583008 minutes
2025-06-10 10:50:55,642:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:55,642:INFO:Initializing create_model()
2025-06-10 10:50:55,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:55,642:INFO:Checking exceptions
2025-06-10 10:50:55,642:INFO:Importing libraries
2025-06-10 10:50:55,642:INFO:Copying training dataset
2025-06-10 10:50:55,645:INFO:Defining folds
2025-06-10 10:50:55,645:INFO:Declaring metric variables
2025-06-10 10:50:55,645:INFO:Importing untrained model
2025-06-10 10:50:55,645:INFO:Ada Boost Classifier Imported successfully
2025-06-10 10:50:55,646:INFO:Starting cross validation
2025-06-10 10:50:55,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:55,740:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,743:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,774:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,777:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,792:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,801:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:50:55,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,908:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,926:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,938:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,940:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,956:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,962:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,969:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:55,971:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,972:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,973:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,975:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,977:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:55,990:INFO:Calculating mean and std
2025-06-10 10:50:55,993:INFO:Creating metrics dataframe
2025-06-10 10:50:55,998:INFO:Uploading results into container
2025-06-10 10:50:55,999:INFO:Uploading model into container now
2025-06-10 10:50:56,000:INFO:_master_model_container: 9
2025-06-10 10:50:56,000:INFO:_display_container: 2
2025-06-10 10:50:56,001:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6217)
2025-06-10 10:50:56,001:INFO:create_model() successfully completed......................................
2025-06-10 10:50:56,090:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:56,090:INFO:Creating metrics dataframe
2025-06-10 10:50:56,093:INFO:Initializing Gradient Boosting Classifier
2025-06-10 10:50:56,093:INFO:Total runtime is 0.06252432664235433 minutes
2025-06-10 10:50:56,093:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:56,094:INFO:Initializing create_model()
2025-06-10 10:50:56,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:56,094:INFO:Checking exceptions
2025-06-10 10:50:56,094:INFO:Importing libraries
2025-06-10 10:50:56,094:INFO:Copying training dataset
2025-06-10 10:50:56,097:INFO:Defining folds
2025-06-10 10:50:56,097:INFO:Declaring metric variables
2025-06-10 10:50:56,097:INFO:Importing untrained model
2025-06-10 10:50:56,097:INFO:Gradient Boosting Classifier Imported successfully
2025-06-10 10:50:56,097:INFO:Starting cross validation
2025-06-10 10:50:56,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:57,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,043:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,053:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,070:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,081:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,088:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,089:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,092:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,094:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,096:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,105:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,105:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,105:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,108:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,108:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,111:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,112:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,124:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,128:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,130:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,136:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,137:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,139:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,142:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,150:INFO:Calculating mean and std
2025-06-10 10:50:57,151:INFO:Creating metrics dataframe
2025-06-10 10:50:57,153:INFO:Uploading results into container
2025-06-10 10:50:57,154:INFO:Uploading model into container now
2025-06-10 10:50:57,154:INFO:_master_model_container: 10
2025-06-10 10:50:57,154:INFO:_display_container: 2
2025-06-10 10:50:57,154:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6217, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-10 10:50:57,154:INFO:create_model() successfully completed......................................
2025-06-10 10:50:57,228:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:57,228:INFO:Creating metrics dataframe
2025-06-10 10:50:57,231:INFO:Initializing Linear Discriminant Analysis
2025-06-10 10:50:57,231:INFO:Total runtime is 0.08148816426595051 minutes
2025-06-10 10:50:57,232:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:57,232:INFO:Initializing create_model()
2025-06-10 10:50:57,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:57,232:INFO:Checking exceptions
2025-06-10 10:50:57,232:INFO:Importing libraries
2025-06-10 10:50:57,232:INFO:Copying training dataset
2025-06-10 10:50:57,234:INFO:Defining folds
2025-06-10 10:50:57,234:INFO:Declaring metric variables
2025-06-10 10:50:57,235:INFO:Importing untrained model
2025-06-10 10:50:57,235:INFO:Linear Discriminant Analysis Imported successfully
2025-06-10 10:50:57,235:INFO:Starting cross validation
2025-06-10 10:50:57,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:57,371:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,376:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,376:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,378:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,379:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,379:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,384:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,389:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,389:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,393:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,396:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,398:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,398:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,401:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,401:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,402:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,402:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:50:57,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,409:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,411:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:50:57,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,432:INFO:Calculating mean and std
2025-06-10 10:50:57,433:INFO:Creating metrics dataframe
2025-06-10 10:50:57,436:INFO:Uploading results into container
2025-06-10 10:50:57,436:INFO:Uploading model into container now
2025-06-10 10:50:57,436:INFO:_master_model_container: 11
2025-06-10 10:50:57,436:INFO:_display_container: 2
2025-06-10 10:50:57,437:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-10 10:50:57,437:INFO:create_model() successfully completed......................................
2025-06-10 10:50:57,510:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:57,510:INFO:Creating metrics dataframe
2025-06-10 10:50:57,514:INFO:Initializing Extra Trees Classifier
2025-06-10 10:50:57,514:INFO:Total runtime is 0.08620173533757527 minutes
2025-06-10 10:50:57,514:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:57,514:INFO:Initializing create_model()
2025-06-10 10:50:57,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:57,514:INFO:Checking exceptions
2025-06-10 10:50:57,514:INFO:Importing libraries
2025-06-10 10:50:57,514:INFO:Copying training dataset
2025-06-10 10:50:57,517:INFO:Defining folds
2025-06-10 10:50:57,517:INFO:Declaring metric variables
2025-06-10 10:50:57,517:INFO:Importing untrained model
2025-06-10 10:50:57,517:INFO:Extra Trees Classifier Imported successfully
2025-06-10 10:50:57,518:INFO:Starting cross validation
2025-06-10 10:50:57,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:50:57,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,934:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,940:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,944:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,944:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,956:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:57,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:50:58,032:INFO:Calculating mean and std
2025-06-10 10:50:58,033:INFO:Creating metrics dataframe
2025-06-10 10:50:58,035:INFO:Uploading results into container
2025-06-10 10:50:58,036:INFO:Uploading model into container now
2025-06-10 10:50:58,036:INFO:_master_model_container: 12
2025-06-10 10:50:58,036:INFO:_display_container: 2
2025-06-10 10:50:58,036:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6217, verbose=0,
                     warm_start=False)
2025-06-10 10:50:58,036:INFO:create_model() successfully completed......................................
2025-06-10 10:50:58,109:INFO:SubProcess create_model() end ==================================
2025-06-10 10:50:58,109:INFO:Creating metrics dataframe
2025-06-10 10:50:58,113:INFO:Initializing Light Gradient Boosting Machine
2025-06-10 10:50:58,113:INFO:Total runtime is 0.09619572162628173 minutes
2025-06-10 10:50:58,113:INFO:SubProcess create_model() called ==================================
2025-06-10 10:50:58,113:INFO:Initializing create_model()
2025-06-10 10:50:58,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:50:58,113:INFO:Checking exceptions
2025-06-10 10:50:58,113:INFO:Importing libraries
2025-06-10 10:50:58,113:INFO:Copying training dataset
2025-06-10 10:50:58,116:INFO:Defining folds
2025-06-10 10:50:58,116:INFO:Declaring metric variables
2025-06-10 10:50:58,116:INFO:Importing untrained model
2025-06-10 10:50:58,117:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:50:58,117:INFO:Starting cross validation
2025-06-10 10:50:58,118:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:51:00,456:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,461:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,513:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,518:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,579:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,594:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,630:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,635:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,636:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,640:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,641:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,646:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,688:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,693:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,697:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,925:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,930:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,936:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,941:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,946:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:00,974:INFO:Calculating mean and std
2025-06-10 10:51:00,975:INFO:Creating metrics dataframe
2025-06-10 10:51:00,980:INFO:Uploading results into container
2025-06-10 10:51:00,980:INFO:Uploading model into container now
2025-06-10 10:51:00,981:INFO:_master_model_container: 13
2025-06-10 10:51:00,981:INFO:_display_container: 2
2025-06-10 10:51:00,982:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6217, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:51:00,982:INFO:create_model() successfully completed......................................
2025-06-10 10:51:01,084:INFO:SubProcess create_model() end ==================================
2025-06-10 10:51:01,084:INFO:Creating metrics dataframe
2025-06-10 10:51:01,088:INFO:Initializing Dummy Classifier
2025-06-10 10:51:01,088:INFO:Total runtime is 0.14576653242111204 minutes
2025-06-10 10:51:01,088:INFO:SubProcess create_model() called ==================================
2025-06-10 10:51:01,088:INFO:Initializing create_model()
2025-06-10 10:51:01,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E1E70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:51:01,088:INFO:Checking exceptions
2025-06-10 10:51:01,088:INFO:Importing libraries
2025-06-10 10:51:01,088:INFO:Copying training dataset
2025-06-10 10:51:01,092:INFO:Defining folds
2025-06-10 10:51:01,092:INFO:Declaring metric variables
2025-06-10 10:51:01,092:INFO:Importing untrained model
2025-06-10 10:51:01,092:INFO:Dummy Classifier Imported successfully
2025-06-10 10:51:01,092:INFO:Starting cross validation
2025-06-10 10:51:01,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:51:01,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,249:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,252:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,256:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,256:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,259:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,264:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,264:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,264:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,273:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,279:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,283:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:51:01,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:51:01,292:INFO:Calculating mean and std
2025-06-10 10:51:01,293:INFO:Creating metrics dataframe
2025-06-10 10:51:01,295:INFO:Uploading results into container
2025-06-10 10:51:01,296:INFO:Uploading model into container now
2025-06-10 10:51:01,296:INFO:_master_model_container: 14
2025-06-10 10:51:01,296:INFO:_display_container: 2
2025-06-10 10:51:01,296:INFO:DummyClassifier(constant=None, random_state=6217, strategy='prior')
2025-06-10 10:51:01,296:INFO:create_model() successfully completed......................................
2025-06-10 10:51:01,376:INFO:SubProcess create_model() end ==================================
2025-06-10 10:51:01,376:INFO:Creating metrics dataframe
2025-06-10 10:51:01,382:INFO:Initializing create_model()
2025-06-10 10:51:01,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DD356920>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6217, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:51:01,382:INFO:Checking exceptions
2025-06-10 10:51:01,383:INFO:Importing libraries
2025-06-10 10:51:01,383:INFO:Copying training dataset
2025-06-10 10:51:01,385:INFO:Defining folds
2025-06-10 10:51:01,386:INFO:Declaring metric variables
2025-06-10 10:51:01,386:INFO:Importing untrained model
2025-06-10 10:51:01,386:INFO:Declaring custom model
2025-06-10 10:51:01,387:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:51:01,387:INFO:Cross validation set to False
2025-06-10 10:51:01,388:INFO:Fitting Model
2025-06-10 10:51:01,629:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6217, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:51:01,629:INFO:create_model() successfully completed......................................
2025-06-10 10:51:01,744:INFO:_master_model_container: 14
2025-06-10 10:51:01,745:INFO:_display_container: 2
2025-06-10 10:51:01,745:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6217, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:51:01,745:INFO:compare_models() successfully completed......................................
2025-06-10 10:51:01,750:INFO:Initializing save_model()
2025-06-10 10:51:01,750:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6217, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model_classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-10 10:51:01,751:INFO:Adding model into prep_pipe
2025-06-10 10:51:01,782:INFO:best_model_classification.pkl saved in current working directory
2025-06-10 10:51:01,793:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=6217, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-06-10 10:51:01,793:INFO:save_model() successfully completed......................................
2025-06-10 10:51:38,668:INFO:Initializing load_model()
2025-06-10 10:51:38,668:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-10 10:54:10,018:INFO:PyCaret ClassificationExperiment
2025-06-10 10:54:10,018:INFO:Logging name: clf-default-name
2025-06-10 10:54:10,018:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:54:10,018:INFO:version 3.3.2
2025-06-10 10:54:10,018:INFO:Initializing setup()
2025-06-10 10:54:10,018:INFO:self.USI: 046d
2025-06-10 10:54:10,018:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:54:10,018:INFO:Checking environment
2025-06-10 10:54:10,018:INFO:python_version: 3.10.6
2025-06-10 10:54:10,018:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:54:10,018:INFO:machine: AMD64
2025-06-10 10:54:10,018:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:54:10,018:INFO:Memory: svmem(total=8416440320, available=995115008, percent=88.2, used=7421325312, free=995115008)
2025-06-10 10:54:10,018:INFO:Physical Core: 8
2025-06-10 10:54:10,019:INFO:Logical Core: 16
2025-06-10 10:54:10,019:INFO:Checking libraries
2025-06-10 10:54:10,019:INFO:System:
2025-06-10 10:54:10,019:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:54:10,019:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:54:10,019:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:54:10,019:INFO:PyCaret required dependencies:
2025-06-10 10:54:10,019:INFO:                 pip: 23.1.2
2025-06-10 10:54:10,019:INFO:          setuptools: 63.2.0
2025-06-10 10:54:10,019:INFO:             pycaret: 3.3.2
2025-06-10 10:54:10,019:INFO:             IPython: 8.4.0
2025-06-10 10:54:10,019:INFO:          ipywidgets: 8.0.6
2025-06-10 10:54:10,019:INFO:                tqdm: 4.65.0
2025-06-10 10:54:10,019:INFO:               numpy: 1.26.4
2025-06-10 10:54:10,019:INFO:              pandas: 1.4.4
2025-06-10 10:54:10,020:INFO:              jinja2: 3.1.2
2025-06-10 10:54:10,020:INFO:               scipy: 1.11.0
2025-06-10 10:54:10,020:INFO:              joblib: 1.3.2
2025-06-10 10:54:10,020:INFO:             sklearn: 1.4.2
2025-06-10 10:54:10,020:INFO:                pyod: 2.0.5
2025-06-10 10:54:10,020:INFO:            imblearn: 0.13.0
2025-06-10 10:54:10,020:INFO:   category_encoders: 2.7.0
2025-06-10 10:54:10,020:INFO:            lightgbm: 4.6.0
2025-06-10 10:54:10,020:INFO:               numba: 0.61.2
2025-06-10 10:54:10,020:INFO:            requests: 2.31.0
2025-06-10 10:54:10,020:INFO:          matplotlib: 3.5.3
2025-06-10 10:54:10,020:INFO:          scikitplot: 0.3.7
2025-06-10 10:54:10,020:INFO:         yellowbrick: 1.5
2025-06-10 10:54:10,020:INFO:              plotly: 5.24.1
2025-06-10 10:54:10,020:INFO:    plotly-resampler: Not installed
2025-06-10 10:54:10,020:INFO:             kaleido: 0.2.1
2025-06-10 10:54:10,020:INFO:           schemdraw: 0.15
2025-06-10 10:54:10,020:INFO:         statsmodels: 0.14.4
2025-06-10 10:54:10,020:INFO:              sktime: 0.26.0
2025-06-10 10:54:10,020:INFO:               tbats: 1.1.3
2025-06-10 10:54:10,020:INFO:            pmdarima: 2.0.4
2025-06-10 10:54:10,020:INFO:              psutil: 5.9.1
2025-06-10 10:54:10,020:INFO:          markupsafe: 2.1.1
2025-06-10 10:54:10,020:INFO:             pickle5: Not installed
2025-06-10 10:54:10,020:INFO:         cloudpickle: 3.1.1
2025-06-10 10:54:10,021:INFO:         deprecation: 2.1.0
2025-06-10 10:54:10,021:INFO:              xxhash: 3.5.0
2025-06-10 10:54:10,021:INFO:           wurlitzer: Not installed
2025-06-10 10:54:10,021:INFO:PyCaret optional dependencies:
2025-06-10 10:54:10,021:INFO:                shap: Not installed
2025-06-10 10:54:10,021:INFO:           interpret: Not installed
2025-06-10 10:54:10,021:INFO:                umap: Not installed
2025-06-10 10:54:10,021:INFO:     ydata_profiling: Not installed
2025-06-10 10:54:10,021:INFO:  explainerdashboard: Not installed
2025-06-10 10:54:10,021:INFO:             autoviz: Not installed
2025-06-10 10:54:10,021:INFO:           fairlearn: Not installed
2025-06-10 10:54:10,021:INFO:          deepchecks: Not installed
2025-06-10 10:54:10,021:INFO:             xgboost: Not installed
2025-06-10 10:54:10,021:INFO:            catboost: Not installed
2025-06-10 10:54:10,021:INFO:              kmodes: Not installed
2025-06-10 10:54:10,021:INFO:             mlxtend: Not installed
2025-06-10 10:54:10,021:INFO:       statsforecast: Not installed
2025-06-10 10:54:10,021:INFO:        tune_sklearn: Not installed
2025-06-10 10:54:10,021:INFO:                 ray: Not installed
2025-06-10 10:54:10,021:INFO:            hyperopt: Not installed
2025-06-10 10:54:10,022:INFO:              optuna: Not installed
2025-06-10 10:54:10,022:INFO:               skopt: Not installed
2025-06-10 10:54:10,022:INFO:              mlflow: Not installed
2025-06-10 10:54:10,022:INFO:              gradio: Not installed
2025-06-10 10:54:10,022:INFO:             fastapi: Not installed
2025-06-10 10:54:10,022:INFO:             uvicorn: Not installed
2025-06-10 10:54:10,022:INFO:              m2cgen: Not installed
2025-06-10 10:54:10,022:INFO:           evidently: Not installed
2025-06-10 10:54:10,022:INFO:               fugue: Not installed
2025-06-10 10:54:10,022:INFO:           streamlit: 1.45.1
2025-06-10 10:54:10,022:INFO:             prophet: Not installed
2025-06-10 10:54:10,022:INFO:None
2025-06-10 10:54:10,022:INFO:Set up data.
2025-06-10 10:54:10,027:INFO:Set up folding strategy.
2025-06-10 10:54:10,027:INFO:Set up train/test split.
2025-06-10 10:54:10,032:INFO:Set up index.
2025-06-10 10:54:10,032:INFO:Assigning column types.
2025-06-10 10:54:10,034:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:54:10,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,078:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,171:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:54:10,211:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,275:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:54:10,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,299:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:54:10,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,431:INFO:Preparing preprocessing pipeline...
2025-06-10 10:54:10,432:INFO:Set up label encoding.
2025-06-10 10:54:10,432:INFO:Set up simple imputation.
2025-06-10 10:54:10,434:INFO:Set up encoding of categorical features.
2025-06-10 10:54:10,500:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:54:10,507:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:54:10,507:INFO:Creating final display dataframe.
2025-06-10 10:54:10,719:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 6032
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 046d
2025-06-10 10:54:10,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:54:10,856:INFO:setup() successfully completed in 0.84s...............
2025-06-10 10:57:12,074:INFO:PyCaret ClassificationExperiment
2025-06-10 10:57:12,074:INFO:Logging name: clf-default-name
2025-06-10 10:57:12,074:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 10:57:12,074:INFO:version 3.3.2
2025-06-10 10:57:12,074:INFO:Initializing setup()
2025-06-10 10:57:12,074:INFO:self.USI: d86d
2025-06-10 10:57:12,074:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 10:57:12,074:INFO:Checking environment
2025-06-10 10:57:12,074:INFO:python_version: 3.10.6
2025-06-10 10:57:12,074:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 10:57:12,074:INFO:machine: AMD64
2025-06-10 10:57:12,074:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 10:57:12,075:INFO:Memory: svmem(total=8416440320, available=1064103936, percent=87.4, used=7352336384, free=1064103936)
2025-06-10 10:57:12,075:INFO:Physical Core: 8
2025-06-10 10:57:12,075:INFO:Logical Core: 16
2025-06-10 10:57:12,075:INFO:Checking libraries
2025-06-10 10:57:12,075:INFO:System:
2025-06-10 10:57:12,075:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 10:57:12,075:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 10:57:12,075:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 10:57:12,075:INFO:PyCaret required dependencies:
2025-06-10 10:57:12,075:INFO:                 pip: 23.1.2
2025-06-10 10:57:12,075:INFO:          setuptools: 63.2.0
2025-06-10 10:57:12,075:INFO:             pycaret: 3.3.2
2025-06-10 10:57:12,075:INFO:             IPython: 8.4.0
2025-06-10 10:57:12,075:INFO:          ipywidgets: 8.0.6
2025-06-10 10:57:12,075:INFO:                tqdm: 4.65.0
2025-06-10 10:57:12,075:INFO:               numpy: 1.26.4
2025-06-10 10:57:12,075:INFO:              pandas: 1.4.4
2025-06-10 10:57:12,075:INFO:              jinja2: 3.1.2
2025-06-10 10:57:12,075:INFO:               scipy: 1.11.0
2025-06-10 10:57:12,075:INFO:              joblib: 1.3.2
2025-06-10 10:57:12,075:INFO:             sklearn: 1.4.2
2025-06-10 10:57:12,075:INFO:                pyod: 2.0.5
2025-06-10 10:57:12,075:INFO:            imblearn: 0.13.0
2025-06-10 10:57:12,075:INFO:   category_encoders: 2.7.0
2025-06-10 10:57:12,075:INFO:            lightgbm: 4.6.0
2025-06-10 10:57:12,076:INFO:               numba: 0.61.2
2025-06-10 10:57:12,076:INFO:            requests: 2.31.0
2025-06-10 10:57:12,076:INFO:          matplotlib: 3.5.3
2025-06-10 10:57:12,076:INFO:          scikitplot: 0.3.7
2025-06-10 10:57:12,076:INFO:         yellowbrick: 1.5
2025-06-10 10:57:12,076:INFO:              plotly: 5.24.1
2025-06-10 10:57:12,076:INFO:    plotly-resampler: Not installed
2025-06-10 10:57:12,076:INFO:             kaleido: 0.2.1
2025-06-10 10:57:12,076:INFO:           schemdraw: 0.15
2025-06-10 10:57:12,076:INFO:         statsmodels: 0.14.4
2025-06-10 10:57:12,076:INFO:              sktime: 0.26.0
2025-06-10 10:57:12,076:INFO:               tbats: 1.1.3
2025-06-10 10:57:12,076:INFO:            pmdarima: 2.0.4
2025-06-10 10:57:12,076:INFO:              psutil: 5.9.1
2025-06-10 10:57:12,076:INFO:          markupsafe: 2.1.1
2025-06-10 10:57:12,076:INFO:             pickle5: Not installed
2025-06-10 10:57:12,076:INFO:         cloudpickle: 3.1.1
2025-06-10 10:57:12,076:INFO:         deprecation: 2.1.0
2025-06-10 10:57:12,076:INFO:              xxhash: 3.5.0
2025-06-10 10:57:12,076:INFO:           wurlitzer: Not installed
2025-06-10 10:57:12,076:INFO:PyCaret optional dependencies:
2025-06-10 10:57:12,076:INFO:                shap: Not installed
2025-06-10 10:57:12,076:INFO:           interpret: Not installed
2025-06-10 10:57:12,076:INFO:                umap: Not installed
2025-06-10 10:57:12,076:INFO:     ydata_profiling: Not installed
2025-06-10 10:57:12,076:INFO:  explainerdashboard: Not installed
2025-06-10 10:57:12,076:INFO:             autoviz: Not installed
2025-06-10 10:57:12,076:INFO:           fairlearn: Not installed
2025-06-10 10:57:12,076:INFO:          deepchecks: Not installed
2025-06-10 10:57:12,077:INFO:             xgboost: Not installed
2025-06-10 10:57:12,077:INFO:            catboost: Not installed
2025-06-10 10:57:12,077:INFO:              kmodes: Not installed
2025-06-10 10:57:12,077:INFO:             mlxtend: Not installed
2025-06-10 10:57:12,077:INFO:       statsforecast: Not installed
2025-06-10 10:57:12,077:INFO:        tune_sklearn: Not installed
2025-06-10 10:57:12,077:INFO:                 ray: Not installed
2025-06-10 10:57:12,077:INFO:            hyperopt: Not installed
2025-06-10 10:57:12,077:INFO:              optuna: Not installed
2025-06-10 10:57:12,077:INFO:               skopt: Not installed
2025-06-10 10:57:12,077:INFO:              mlflow: Not installed
2025-06-10 10:57:12,077:INFO:              gradio: Not installed
2025-06-10 10:57:12,077:INFO:             fastapi: Not installed
2025-06-10 10:57:12,077:INFO:             uvicorn: Not installed
2025-06-10 10:57:12,077:INFO:              m2cgen: Not installed
2025-06-10 10:57:12,077:INFO:           evidently: Not installed
2025-06-10 10:57:12,077:INFO:               fugue: Not installed
2025-06-10 10:57:12,077:INFO:           streamlit: 1.45.1
2025-06-10 10:57:12,077:INFO:             prophet: Not installed
2025-06-10 10:57:12,077:INFO:None
2025-06-10 10:57:12,077:INFO:Set up data.
2025-06-10 10:57:12,083:INFO:Set up folding strategy.
2025-06-10 10:57:12,083:INFO:Set up train/test split.
2025-06-10 10:57:12,089:INFO:Set up index.
2025-06-10 10:57:12,089:INFO:Assigning column types.
2025-06-10 10:57:12,091:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 10:57:12,132:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,133:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,194:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,219:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 10:57:12,258:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,322:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 10:57:12,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 10:57:12,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,471:INFO:Preparing preprocessing pipeline...
2025-06-10 10:57:12,472:INFO:Set up label encoding.
2025-06-10 10:57:12,472:INFO:Set up simple imputation.
2025-06-10 10:57:12,474:INFO:Set up encoding of categorical features.
2025-06-10 10:57:12,545:INFO:Finished creating preprocessing pipeline.
2025-06-10 10:57:12,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 10:57:12,550:INFO:Creating final display dataframe.
2025-06-10 10:57:12,749:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 8119
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 d86d
2025-06-10 10:57:12,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,874:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 10:57:12,875:INFO:setup() successfully completed in 0.8s...............
2025-06-10 10:57:12,875:INFO:Initializing compare_models()
2025-06-10 10:57:12,875:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-10 10:57:12,875:INFO:Checking exceptions
2025-06-10 10:57:12,878:INFO:Preparing display monitor
2025-06-10 10:57:12,880:INFO:Initializing Logistic Regression
2025-06-10 10:57:12,880:INFO:Total runtime is 0.0 minutes
2025-06-10 10:57:12,880:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:12,880:INFO:Initializing create_model()
2025-06-10 10:57:12,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:12,880:INFO:Checking exceptions
2025-06-10 10:57:12,880:INFO:Importing libraries
2025-06-10 10:57:12,880:INFO:Copying training dataset
2025-06-10 10:57:12,883:INFO:Defining folds
2025-06-10 10:57:12,883:INFO:Declaring metric variables
2025-06-10 10:57:12,883:INFO:Importing untrained model
2025-06-10 10:57:12,883:INFO:Logistic Regression Imported successfully
2025-06-10 10:57:12,884:INFO:Starting cross validation
2025-06-10 10:57:12,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:23,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,470:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,472:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,475:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:23,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,479:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,482:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,512:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,516:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,516:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,520:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,521:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:23,523:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,524:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,528:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,533:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,547:INFO:Calculating mean and std
2025-06-10 10:57:23,549:INFO:Creating metrics dataframe
2025-06-10 10:57:23,555:INFO:Uploading results into container
2025-06-10 10:57:23,557:INFO:Uploading model into container now
2025-06-10 10:57:23,558:INFO:_master_model_container: 1
2025-06-10 10:57:23,558:INFO:_display_container: 2
2025-06-10 10:57:23,558:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8119, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-10 10:57:23,559:INFO:create_model() successfully completed......................................
2025-06-10 10:57:23,790:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:23,790:INFO:Creating metrics dataframe
2025-06-10 10:57:23,793:INFO:Initializing K Neighbors Classifier
2025-06-10 10:57:23,793:INFO:Total runtime is 0.1818849802017212 minutes
2025-06-10 10:57:23,793:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:23,793:INFO:Initializing create_model()
2025-06-10 10:57:23,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:23,793:INFO:Checking exceptions
2025-06-10 10:57:23,793:INFO:Importing libraries
2025-06-10 10:57:23,794:INFO:Copying training dataset
2025-06-10 10:57:23,796:INFO:Defining folds
2025-06-10 10:57:23,796:INFO:Declaring metric variables
2025-06-10 10:57:23,797:INFO:Importing untrained model
2025-06-10 10:57:23,797:INFO:K Neighbors Classifier Imported successfully
2025-06-10 10:57:23,797:INFO:Starting cross validation
2025-06-10 10:57:23,798:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:23,967:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,969:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,973:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,973:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,976:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,985:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,987:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,988:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,991:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:23,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,940:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,944:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,964:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,971:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,975:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,979:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,981:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,986:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,990:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:28,999:INFO:Calculating mean and std
2025-06-10 10:57:29,001:INFO:Creating metrics dataframe
2025-06-10 10:57:29,008:INFO:Uploading results into container
2025-06-10 10:57:29,010:INFO:Uploading model into container now
2025-06-10 10:57:29,011:INFO:_master_model_container: 2
2025-06-10 10:57:29,011:INFO:_display_container: 2
2025-06-10 10:57:29,012:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-10 10:57:29,012:INFO:create_model() successfully completed......................................
2025-06-10 10:57:29,208:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:29,208:INFO:Creating metrics dataframe
2025-06-10 10:57:29,213:INFO:Initializing Naive Bayes
2025-06-10 10:57:29,214:INFO:Total runtime is 0.27223774592081706 minutes
2025-06-10 10:57:29,214:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:29,214:INFO:Initializing create_model()
2025-06-10 10:57:29,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:29,214:INFO:Checking exceptions
2025-06-10 10:57:29,214:INFO:Importing libraries
2025-06-10 10:57:29,214:INFO:Copying training dataset
2025-06-10 10:57:29,217:INFO:Defining folds
2025-06-10 10:57:29,217:INFO:Declaring metric variables
2025-06-10 10:57:29,218:INFO:Importing untrained model
2025-06-10 10:57:29,218:INFO:Naive Bayes Imported successfully
2025-06-10 10:57:29,218:INFO:Starting cross validation
2025-06-10 10:57:29,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:29,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,420:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,420:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,431:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,432:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,432:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,434:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,435:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,438:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,438:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,440:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,440:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,442:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,443:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,443:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,444:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,445:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,450:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,457:INFO:Calculating mean and std
2025-06-10 10:57:29,458:INFO:Creating metrics dataframe
2025-06-10 10:57:29,460:INFO:Uploading results into container
2025-06-10 10:57:29,461:INFO:Uploading model into container now
2025-06-10 10:57:29,461:INFO:_master_model_container: 3
2025-06-10 10:57:29,461:INFO:_display_container: 2
2025-06-10 10:57:29,461:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-10 10:57:29,461:INFO:create_model() successfully completed......................................
2025-06-10 10:57:29,542:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:29,542:INFO:Creating metrics dataframe
2025-06-10 10:57:29,546:INFO:Initializing Decision Tree Classifier
2025-06-10 10:57:29,546:INFO:Total runtime is 0.2777657985687256 minutes
2025-06-10 10:57:29,546:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:29,546:INFO:Initializing create_model()
2025-06-10 10:57:29,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:29,546:INFO:Checking exceptions
2025-06-10 10:57:29,546:INFO:Importing libraries
2025-06-10 10:57:29,546:INFO:Copying training dataset
2025-06-10 10:57:29,549:INFO:Defining folds
2025-06-10 10:57:29,549:INFO:Declaring metric variables
2025-06-10 10:57:29,549:INFO:Importing untrained model
2025-06-10 10:57:29,549:INFO:Decision Tree Classifier Imported successfully
2025-06-10 10:57:29,549:INFO:Starting cross validation
2025-06-10 10:57:29,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:29,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,723:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,726:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,730:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,732:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,735:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,736:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,737:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,738:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,739:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,740:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,742:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,743:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,744:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,752:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,754:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,754:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,760:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:29,773:INFO:Calculating mean and std
2025-06-10 10:57:29,774:INFO:Creating metrics dataframe
2025-06-10 10:57:29,777:INFO:Uploading results into container
2025-06-10 10:57:29,777:INFO:Uploading model into container now
2025-06-10 10:57:29,778:INFO:_master_model_container: 4
2025-06-10 10:57:29,778:INFO:_display_container: 2
2025-06-10 10:57:29,778:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8119, splitter='best')
2025-06-10 10:57:29,778:INFO:create_model() successfully completed......................................
2025-06-10 10:57:29,871:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:29,871:INFO:Creating metrics dataframe
2025-06-10 10:57:29,875:INFO:Initializing SVM - Linear Kernel
2025-06-10 10:57:29,875:INFO:Total runtime is 0.28324697812398275 minutes
2025-06-10 10:57:29,875:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:29,876:INFO:Initializing create_model()
2025-06-10 10:57:29,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:29,876:INFO:Checking exceptions
2025-06-10 10:57:29,876:INFO:Importing libraries
2025-06-10 10:57:29,876:INFO:Copying training dataset
2025-06-10 10:57:29,879:INFO:Defining folds
2025-06-10 10:57:29,879:INFO:Declaring metric variables
2025-06-10 10:57:29,879:INFO:Importing untrained model
2025-06-10 10:57:29,879:INFO:SVM - Linear Kernel Imported successfully
2025-06-10 10:57:29,879:INFO:Starting cross validation
2025-06-10 10:57:29,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:30,052:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,054:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,058:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,063:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,073:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,074:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,078:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,081:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,082:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,082:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,083:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,084:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,085:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,087:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,088:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,088:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,090:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,090:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,092:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,094:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,100:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,104:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,105:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,121:INFO:Calculating mean and std
2025-06-10 10:57:30,124:INFO:Creating metrics dataframe
2025-06-10 10:57:30,133:INFO:Uploading results into container
2025-06-10 10:57:30,134:INFO:Uploading model into container now
2025-06-10 10:57:30,135:INFO:_master_model_container: 5
2025-06-10 10:57:30,135:INFO:_display_container: 2
2025-06-10 10:57:30,136:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8119, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-10 10:57:30,136:INFO:create_model() successfully completed......................................
2025-06-10 10:57:30,226:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:30,226:INFO:Creating metrics dataframe
2025-06-10 10:57:30,230:INFO:Initializing Ridge Classifier
2025-06-10 10:57:30,230:INFO:Total runtime is 0.2891716122627258 minutes
2025-06-10 10:57:30,231:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:30,231:INFO:Initializing create_model()
2025-06-10 10:57:30,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:30,231:INFO:Checking exceptions
2025-06-10 10:57:30,231:INFO:Importing libraries
2025-06-10 10:57:30,231:INFO:Copying training dataset
2025-06-10 10:57:30,234:INFO:Defining folds
2025-06-10 10:57:30,234:INFO:Declaring metric variables
2025-06-10 10:57:30,234:INFO:Importing untrained model
2025-06-10 10:57:30,234:INFO:Ridge Classifier Imported successfully
2025-06-10 10:57:30,234:INFO:Starting cross validation
2025-06-10 10:57:30,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:30,375:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,377:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,378:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,379:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,383:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,384:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,401:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,407:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,407:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,408:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,410:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,411:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,413:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,430:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,431:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,431:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,432:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,433:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,436:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:30,438:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,441:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,442:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:30,444:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:30,451:INFO:Calculating mean and std
2025-06-10 10:57:30,452:INFO:Creating metrics dataframe
2025-06-10 10:57:30,455:INFO:Uploading results into container
2025-06-10 10:57:30,456:INFO:Uploading model into container now
2025-06-10 10:57:30,456:INFO:_master_model_container: 6
2025-06-10 10:57:30,456:INFO:_display_container: 2
2025-06-10 10:57:30,456:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8119, solver='auto',
                tol=0.0001)
2025-06-10 10:57:30,456:INFO:create_model() successfully completed......................................
2025-06-10 10:57:30,540:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:30,540:INFO:Creating metrics dataframe
2025-06-10 10:57:30,544:INFO:Initializing Random Forest Classifier
2025-06-10 10:57:30,544:INFO:Total runtime is 0.2943914651870727 minutes
2025-06-10 10:57:30,544:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:30,544:INFO:Initializing create_model()
2025-06-10 10:57:30,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:30,544:INFO:Checking exceptions
2025-06-10 10:57:30,544:INFO:Importing libraries
2025-06-10 10:57:30,544:INFO:Copying training dataset
2025-06-10 10:57:30,547:INFO:Defining folds
2025-06-10 10:57:30,547:INFO:Declaring metric variables
2025-06-10 10:57:30,547:INFO:Importing untrained model
2025-06-10 10:57:30,547:INFO:Random Forest Classifier Imported successfully
2025-06-10 10:57:30,548:INFO:Starting cross validation
2025-06-10 10:57:30,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:31,059:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,059:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,059:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,060:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,070:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,074:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,075:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,081:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,083:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,084:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,085:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,104:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,122:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,141:INFO:Calculating mean and std
2025-06-10 10:57:31,142:INFO:Creating metrics dataframe
2025-06-10 10:57:31,145:INFO:Uploading results into container
2025-06-10 10:57:31,145:INFO:Uploading model into container now
2025-06-10 10:57:31,145:INFO:_master_model_container: 7
2025-06-10 10:57:31,145:INFO:_display_container: 2
2025-06-10 10:57:31,146:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8119, verbose=0,
                       warm_start=False)
2025-06-10 10:57:31,146:INFO:create_model() successfully completed......................................
2025-06-10 10:57:31,223:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:31,223:INFO:Creating metrics dataframe
2025-06-10 10:57:31,226:INFO:Initializing Quadratic Discriminant Analysis
2025-06-10 10:57:31,226:INFO:Total runtime is 0.3057592431704203 minutes
2025-06-10 10:57:31,227:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:31,227:INFO:Initializing create_model()
2025-06-10 10:57:31,227:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:31,227:INFO:Checking exceptions
2025-06-10 10:57:31,227:INFO:Importing libraries
2025-06-10 10:57:31,227:INFO:Copying training dataset
2025-06-10 10:57:31,229:INFO:Defining folds
2025-06-10 10:57:31,230:INFO:Declaring metric variables
2025-06-10 10:57:31,230:INFO:Importing untrained model
2025-06-10 10:57:31,230:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-10 10:57:31,230:INFO:Starting cross validation
2025-06-10 10:57:31,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:31,338:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,345:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,346:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,359:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,371:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,376:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,376:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,382:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,383:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,384:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,389:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,389:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,390:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,390:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,392:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,393:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,394:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,394:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,394:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,394:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,395:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,396:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,398:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,398:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,399:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,400:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,400:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,400:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,401:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,402:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,408:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,408:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,409:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,413:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,413:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,413:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,414:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,414:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,417:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,418:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,420:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

f this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 10:57:31,422:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 10:57:31,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 10:57:31,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,431:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,432:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,442:INFO:Calculating mean and std
2025-06-10 10:57:31,444:INFO:Creating metrics dataframe
2025-06-10 10:57:31,451:INFO:Uploading results into container
2025-06-10 10:57:31,452:INFO:Uploading model into container now
2025-06-10 10:57:31,453:INFO:_master_model_container: 8
2025-06-10 10:57:31,453:INFO:_display_container: 2
2025-06-10 10:57:31,454:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-10 10:57:31,454:INFO:create_model() successfully completed......................................
2025-06-10 10:57:31,548:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:31,548:INFO:Creating metrics dataframe
2025-06-10 10:57:31,551:INFO:Initializing Ada Boost Classifier
2025-06-10 10:57:31,552:INFO:Total runtime is 0.31120501359303787 minutes
2025-06-10 10:57:31,552:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:31,552:INFO:Initializing create_model()
2025-06-10 10:57:31,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:31,552:INFO:Checking exceptions
2025-06-10 10:57:31,552:INFO:Importing libraries
2025-06-10 10:57:31,552:INFO:Copying training dataset
2025-06-10 10:57:31,555:INFO:Defining folds
2025-06-10 10:57:31,555:INFO:Declaring metric variables
2025-06-10 10:57:31,555:INFO:Importing untrained model
2025-06-10 10:57:31,555:INFO:Ada Boost Classifier Imported successfully
2025-06-10 10:57:31,556:INFO:Starting cross validation
2025-06-10 10:57:31,557:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:31,654:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,664:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,666:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,692:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,699:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,700:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,714:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 10:57:31,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,902:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,902:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,915:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,925:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,932:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,934:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,937:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,938:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,940:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,941:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,942:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,946:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:31,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:31,950:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,952:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,955:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:31,979:INFO:Calculating mean and std
2025-06-10 10:57:31,982:INFO:Creating metrics dataframe
2025-06-10 10:57:31,991:INFO:Uploading results into container
2025-06-10 10:57:31,992:INFO:Uploading model into container now
2025-06-10 10:57:31,993:INFO:_master_model_container: 9
2025-06-10 10:57:31,993:INFO:_display_container: 2
2025-06-10 10:57:31,994:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8119)
2025-06-10 10:57:31,994:INFO:create_model() successfully completed......................................
2025-06-10 10:57:32,092:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:32,092:INFO:Creating metrics dataframe
2025-06-10 10:57:32,096:INFO:Initializing Gradient Boosting Classifier
2025-06-10 10:57:32,096:INFO:Total runtime is 0.320257286230723 minutes
2025-06-10 10:57:32,096:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:32,096:INFO:Initializing create_model()
2025-06-10 10:57:32,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:32,096:INFO:Checking exceptions
2025-06-10 10:57:32,096:INFO:Importing libraries
2025-06-10 10:57:32,096:INFO:Copying training dataset
2025-06-10 10:57:32,099:INFO:Defining folds
2025-06-10 10:57:32,099:INFO:Declaring metric variables
2025-06-10 10:57:32,099:INFO:Importing untrained model
2025-06-10 10:57:32,099:INFO:Gradient Boosting Classifier Imported successfully
2025-06-10 10:57:32,099:INFO:Starting cross validation
2025-06-10 10:57:32,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:33,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,228:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,256:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,259:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:33,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,265:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:33,279:INFO:Calculating mean and std
2025-06-10 10:57:33,282:INFO:Creating metrics dataframe
2025-06-10 10:57:33,290:INFO:Uploading results into container
2025-06-10 10:57:33,292:INFO:Uploading model into container now
2025-06-10 10:57:33,293:INFO:_master_model_container: 10
2025-06-10 10:57:33,293:INFO:_display_container: 2
2025-06-10 10:57:33,294:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8119, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-10 10:57:33,294:INFO:create_model() successfully completed......................................
2025-06-10 10:57:33,391:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:33,391:INFO:Creating metrics dataframe
2025-06-10 10:57:33,395:INFO:Initializing Linear Discriminant Analysis
2025-06-10 10:57:33,395:INFO:Total runtime is 0.34190653562545775 minutes
2025-06-10 10:57:33,395:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:33,395:INFO:Initializing create_model()
2025-06-10 10:57:33,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:33,395:INFO:Checking exceptions
2025-06-10 10:57:33,396:INFO:Importing libraries
2025-06-10 10:57:33,396:INFO:Copying training dataset
2025-06-10 10:57:33,398:INFO:Defining folds
2025-06-10 10:57:33,398:INFO:Declaring metric variables
2025-06-10 10:57:33,398:INFO:Importing untrained model
2025-06-10 10:57:33,398:INFO:Linear Discriminant Analysis Imported successfully
2025-06-10 10:57:33,398:INFO:Starting cross validation
2025-06-10 10:57:33,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:34,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,220:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,220:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,220:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,224:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,225:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,225:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 10:57:34,232:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,232:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,235:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:34,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,261:INFO:Calculating mean and std
2025-06-10 10:57:34,262:INFO:Creating metrics dataframe
2025-06-10 10:57:34,264:INFO:Uploading results into container
2025-06-10 10:57:34,265:INFO:Uploading model into container now
2025-06-10 10:57:34,265:INFO:_master_model_container: 11
2025-06-10 10:57:34,265:INFO:_display_container: 2
2025-06-10 10:57:34,265:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-10 10:57:34,265:INFO:create_model() successfully completed......................................
2025-06-10 10:57:34,348:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:34,348:INFO:Creating metrics dataframe
2025-06-10 10:57:34,352:INFO:Initializing Extra Trees Classifier
2025-06-10 10:57:34,352:INFO:Total runtime is 0.3578583280245463 minutes
2025-06-10 10:57:34,352:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:34,352:INFO:Initializing create_model()
2025-06-10 10:57:34,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:34,352:INFO:Checking exceptions
2025-06-10 10:57:34,352:INFO:Importing libraries
2025-06-10 10:57:34,352:INFO:Copying training dataset
2025-06-10 10:57:34,355:INFO:Defining folds
2025-06-10 10:57:34,355:INFO:Declaring metric variables
2025-06-10 10:57:34,355:INFO:Importing untrained model
2025-06-10 10:57:34,355:INFO:Extra Trees Classifier Imported successfully
2025-06-10 10:57:34,356:INFO:Starting cross validation
2025-06-10 10:57:34,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:34,783:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,785:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,785:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,788:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,788:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,789:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,793:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,794:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,795:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,801:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,805:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,809:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,827:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,827:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,828:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,831:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,857:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,859:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,862:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:34,883:INFO:Calculating mean and std
2025-06-10 10:57:34,885:INFO:Creating metrics dataframe
2025-06-10 10:57:34,894:INFO:Uploading results into container
2025-06-10 10:57:34,895:INFO:Uploading model into container now
2025-06-10 10:57:34,896:INFO:_master_model_container: 12
2025-06-10 10:57:34,896:INFO:_display_container: 2
2025-06-10 10:57:34,897:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8119, verbose=0,
                     warm_start=False)
2025-06-10 10:57:34,898:INFO:create_model() successfully completed......................................
2025-06-10 10:57:34,992:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:34,992:INFO:Creating metrics dataframe
2025-06-10 10:57:34,996:INFO:Initializing Light Gradient Boosting Machine
2025-06-10 10:57:34,996:INFO:Total runtime is 0.3686012029647827 minutes
2025-06-10 10:57:34,996:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:34,996:INFO:Initializing create_model()
2025-06-10 10:57:34,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:34,996:INFO:Checking exceptions
2025-06-10 10:57:34,996:INFO:Importing libraries
2025-06-10 10:57:34,996:INFO:Copying training dataset
2025-06-10 10:57:34,999:INFO:Defining folds
2025-06-10 10:57:34,999:INFO:Declaring metric variables
2025-06-10 10:57:34,999:INFO:Importing untrained model
2025-06-10 10:57:34,999:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:57:35,000:INFO:Starting cross validation
2025-06-10 10:57:35,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:37,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,326:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,331:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,338:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,380:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,505:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,517:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,522:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,528:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,559:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,564:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,641:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,646:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,652:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,673:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,678:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,823:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,827:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,831:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:37,850:INFO:Calculating mean and std
2025-06-10 10:57:37,851:INFO:Creating metrics dataframe
2025-06-10 10:57:37,856:INFO:Uploading results into container
2025-06-10 10:57:37,856:INFO:Uploading model into container now
2025-06-10 10:57:37,857:INFO:_master_model_container: 13
2025-06-10 10:57:37,857:INFO:_display_container: 2
2025-06-10 10:57:37,858:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8119, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:57:37,858:INFO:create_model() successfully completed......................................
2025-06-10 10:57:37,961:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:37,961:INFO:Creating metrics dataframe
2025-06-10 10:57:37,965:INFO:Initializing Dummy Classifier
2025-06-10 10:57:37,966:INFO:Total runtime is 0.41810418367385865 minutes
2025-06-10 10:57:37,966:INFO:SubProcess create_model() called ==================================
2025-06-10 10:57:37,966:INFO:Initializing create_model()
2025-06-10 10:57:37,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD340F70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:37,966:INFO:Checking exceptions
2025-06-10 10:57:37,966:INFO:Importing libraries
2025-06-10 10:57:37,966:INFO:Copying training dataset
2025-06-10 10:57:37,969:INFO:Defining folds
2025-06-10 10:57:37,970:INFO:Declaring metric variables
2025-06-10 10:57:37,970:INFO:Importing untrained model
2025-06-10 10:57:37,970:INFO:Dummy Classifier Imported successfully
2025-06-10 10:57:37,970:INFO:Starting cross validation
2025-06-10 10:57:37,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 10:57:38,146:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,154:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,155:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,156:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,161:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,163:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,163:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,168:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,169:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,173:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,175:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,175:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,176:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,177:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,178:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,178:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,179:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,179:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,182:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,183:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,183:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,185:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 10:57:38,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 10:57:38,195:INFO:Calculating mean and std
2025-06-10 10:57:38,196:INFO:Creating metrics dataframe
2025-06-10 10:57:38,198:INFO:Uploading results into container
2025-06-10 10:57:38,199:INFO:Uploading model into container now
2025-06-10 10:57:38,199:INFO:_master_model_container: 14
2025-06-10 10:57:38,199:INFO:_display_container: 2
2025-06-10 10:57:38,199:INFO:DummyClassifier(constant=None, random_state=8119, strategy='prior')
2025-06-10 10:57:38,199:INFO:create_model() successfully completed......................................
2025-06-10 10:57:38,280:INFO:SubProcess create_model() end ==================================
2025-06-10 10:57:38,280:INFO:Creating metrics dataframe
2025-06-10 10:57:38,285:INFO:Initializing create_model()
2025-06-10 10:57:38,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DC7C24A0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8119, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 10:57:38,287:INFO:Checking exceptions
2025-06-10 10:57:38,287:INFO:Importing libraries
2025-06-10 10:57:38,287:INFO:Copying training dataset
2025-06-10 10:57:38,290:INFO:Defining folds
2025-06-10 10:57:38,290:INFO:Declaring metric variables
2025-06-10 10:57:38,290:INFO:Importing untrained model
2025-06-10 10:57:38,290:INFO:Declaring custom model
2025-06-10 10:57:38,291:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 10:57:38,292:INFO:Cross validation set to False
2025-06-10 10:57:38,292:INFO:Fitting Model
2025-06-10 10:57:38,559:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8119, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:57:38,559:INFO:create_model() successfully completed......................................
2025-06-10 10:57:38,678:INFO:_master_model_container: 14
2025-06-10 10:57:38,678:INFO:_display_container: 2
2025-06-10 10:57:38,679:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8119, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 10:57:38,679:INFO:compare_models() successfully completed......................................
2025-06-10 10:57:38,684:INFO:Initializing save_model()
2025-06-10 10:57:38,684:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8119, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model_classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-10 10:57:38,684:INFO:Adding model into prep_pipe
2025-06-10 10:57:38,716:INFO:best_model_classification.pkl saved in current working directory
2025-06-10 10:57:38,728:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=8119, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-06-10 10:57:38,728:INFO:save_model() successfully completed......................................
2025-06-10 11:03:19,730:INFO:PyCaret ClassificationExperiment
2025-06-10 11:03:19,730:INFO:Logging name: clf-default-name
2025-06-10 11:03:19,730:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 11:03:19,730:INFO:version 3.3.2
2025-06-10 11:03:19,730:INFO:Initializing setup()
2025-06-10 11:03:19,730:INFO:self.USI: 6245
2025-06-10 11:03:19,731:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 11:03:19,731:INFO:Checking environment
2025-06-10 11:03:19,731:INFO:python_version: 3.10.6
2025-06-10 11:03:19,731:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 11:03:19,731:INFO:machine: AMD64
2025-06-10 11:03:19,731:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 11:03:19,731:INFO:Memory: svmem(total=8416440320, available=1329840128, percent=84.2, used=7086600192, free=1329840128)
2025-06-10 11:03:19,732:INFO:Physical Core: 8
2025-06-10 11:03:19,732:INFO:Logical Core: 16
2025-06-10 11:03:19,732:INFO:Checking libraries
2025-06-10 11:03:19,732:INFO:System:
2025-06-10 11:03:19,732:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 11:03:19,732:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 11:03:19,732:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 11:03:19,732:INFO:PyCaret required dependencies:
2025-06-10 11:03:19,732:INFO:                 pip: 23.1.2
2025-06-10 11:03:19,732:INFO:          setuptools: 63.2.0
2025-06-10 11:03:19,732:INFO:             pycaret: 3.3.2
2025-06-10 11:03:19,732:INFO:             IPython: 8.4.0
2025-06-10 11:03:19,732:INFO:          ipywidgets: 8.0.6
2025-06-10 11:03:19,732:INFO:                tqdm: 4.65.0
2025-06-10 11:03:19,732:INFO:               numpy: 1.26.4
2025-06-10 11:03:19,732:INFO:              pandas: 1.4.4
2025-06-10 11:03:19,732:INFO:              jinja2: 3.1.2
2025-06-10 11:03:19,732:INFO:               scipy: 1.11.0
2025-06-10 11:03:19,733:INFO:              joblib: 1.3.2
2025-06-10 11:03:19,733:INFO:             sklearn: 1.4.2
2025-06-10 11:03:19,733:INFO:                pyod: 2.0.5
2025-06-10 11:03:19,733:INFO:            imblearn: 0.13.0
2025-06-10 11:03:19,733:INFO:   category_encoders: 2.7.0
2025-06-10 11:03:19,733:INFO:            lightgbm: 4.6.0
2025-06-10 11:03:19,733:INFO:               numba: 0.61.2
2025-06-10 11:03:19,733:INFO:            requests: 2.31.0
2025-06-10 11:03:19,733:INFO:          matplotlib: 3.5.3
2025-06-10 11:03:19,733:INFO:          scikitplot: 0.3.7
2025-06-10 11:03:19,733:INFO:         yellowbrick: 1.5
2025-06-10 11:03:19,733:INFO:              plotly: 5.24.1
2025-06-10 11:03:19,733:INFO:    plotly-resampler: Not installed
2025-06-10 11:03:19,733:INFO:             kaleido: 0.2.1
2025-06-10 11:03:19,733:INFO:           schemdraw: 0.15
2025-06-10 11:03:19,733:INFO:         statsmodels: 0.14.4
2025-06-10 11:03:19,733:INFO:              sktime: 0.26.0
2025-06-10 11:03:19,733:INFO:               tbats: 1.1.3
2025-06-10 11:03:19,733:INFO:            pmdarima: 2.0.4
2025-06-10 11:03:19,733:INFO:              psutil: 5.9.1
2025-06-10 11:03:19,734:INFO:          markupsafe: 2.1.1
2025-06-10 11:03:19,734:INFO:             pickle5: Not installed
2025-06-10 11:03:19,734:INFO:         cloudpickle: 3.1.1
2025-06-10 11:03:19,734:INFO:         deprecation: 2.1.0
2025-06-10 11:03:19,734:INFO:              xxhash: 3.5.0
2025-06-10 11:03:19,734:INFO:           wurlitzer: Not installed
2025-06-10 11:03:19,734:INFO:PyCaret optional dependencies:
2025-06-10 11:03:19,734:INFO:                shap: Not installed
2025-06-10 11:03:19,734:INFO:           interpret: Not installed
2025-06-10 11:03:19,734:INFO:                umap: Not installed
2025-06-10 11:03:19,734:INFO:     ydata_profiling: Not installed
2025-06-10 11:03:19,734:INFO:  explainerdashboard: Not installed
2025-06-10 11:03:19,734:INFO:             autoviz: Not installed
2025-06-10 11:03:19,734:INFO:           fairlearn: Not installed
2025-06-10 11:03:19,734:INFO:          deepchecks: Not installed
2025-06-10 11:03:19,734:INFO:             xgboost: Not installed
2025-06-10 11:03:19,734:INFO:            catboost: Not installed
2025-06-10 11:03:19,734:INFO:              kmodes: Not installed
2025-06-10 11:03:19,734:INFO:             mlxtend: Not installed
2025-06-10 11:03:19,734:INFO:       statsforecast: Not installed
2025-06-10 11:03:19,734:INFO:        tune_sklearn: Not installed
2025-06-10 11:03:19,734:INFO:                 ray: Not installed
2025-06-10 11:03:19,734:INFO:            hyperopt: Not installed
2025-06-10 11:03:19,734:INFO:              optuna: Not installed
2025-06-10 11:03:19,735:INFO:               skopt: Not installed
2025-06-10 11:03:19,735:INFO:              mlflow: Not installed
2025-06-10 11:03:19,735:INFO:              gradio: Not installed
2025-06-10 11:03:19,735:INFO:             fastapi: Not installed
2025-06-10 11:03:19,735:INFO:             uvicorn: Not installed
2025-06-10 11:03:19,735:INFO:              m2cgen: Not installed
2025-06-10 11:03:19,735:INFO:           evidently: Not installed
2025-06-10 11:03:19,735:INFO:               fugue: Not installed
2025-06-10 11:03:19,735:INFO:           streamlit: 1.45.1
2025-06-10 11:03:19,735:INFO:             prophet: Not installed
2025-06-10 11:03:19,735:INFO:None
2025-06-10 11:03:19,735:INFO:Set up data.
2025-06-10 11:03:19,744:INFO:Set up folding strategy.
2025-06-10 11:03:19,744:INFO:Set up train/test split.
2025-06-10 11:03:19,753:INFO:Set up index.
2025-06-10 11:03:19,753:INFO:Assigning column types.
2025-06-10 11:03:19,756:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 11:03:19,801:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:03:19,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:19,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:19,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:19,868:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:03:19,869:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:19,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:19,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:19,896:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 11:03:19,937:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:19,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:19,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:20,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,028:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,028:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 11:03:20,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,153:INFO:Preparing preprocessing pipeline...
2025-06-10 11:03:20,155:INFO:Set up label encoding.
2025-06-10 11:03:20,155:INFO:Set up simple imputation.
2025-06-10 11:03:20,157:INFO:Set up encoding of categorical features.
2025-06-10 11:03:20,224:INFO:Finished creating preprocessing pipeline.
2025-06-10 11:03:20,229:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 11:03:20,229:INFO:Creating final display dataframe.
2025-06-10 11:03:20,419:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 5815
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 6245
2025-06-10 11:03:20,485:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:20,548:INFO:setup() successfully completed in 0.82s...............
2025-06-10 11:03:26,112:INFO:PyCaret ClassificationExperiment
2025-06-10 11:03:26,112:INFO:Logging name: clf-default-name
2025-06-10 11:03:26,112:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-10 11:03:26,113:INFO:version 3.3.2
2025-06-10 11:03:26,113:INFO:Initializing setup()
2025-06-10 11:03:26,113:INFO:self.USI: 1eb4
2025-06-10 11:03:26,113:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'fix_imbalance', 'logging_param', 'USI', 'X_test', 'is_multiclass', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 11:03:26,113:INFO:Checking environment
2025-06-10 11:03:26,113:INFO:python_version: 3.10.6
2025-06-10 11:03:26,113:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 11:03:26,113:INFO:machine: AMD64
2025-06-10 11:03:26,113:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 11:03:26,113:INFO:Memory: svmem(total=8416440320, available=1311641600, percent=84.4, used=7104798720, free=1311641600)
2025-06-10 11:03:26,113:INFO:Physical Core: 8
2025-06-10 11:03:26,113:INFO:Logical Core: 16
2025-06-10 11:03:26,113:INFO:Checking libraries
2025-06-10 11:03:26,113:INFO:System:
2025-06-10 11:03:26,113:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 11:03:26,113:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 11:03:26,113:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 11:03:26,113:INFO:PyCaret required dependencies:
2025-06-10 11:03:26,113:INFO:                 pip: 23.1.2
2025-06-10 11:03:26,113:INFO:          setuptools: 63.2.0
2025-06-10 11:03:26,114:INFO:             pycaret: 3.3.2
2025-06-10 11:03:26,114:INFO:             IPython: 8.4.0
2025-06-10 11:03:26,114:INFO:          ipywidgets: 8.0.6
2025-06-10 11:03:26,114:INFO:                tqdm: 4.65.0
2025-06-10 11:03:26,114:INFO:               numpy: 1.26.4
2025-06-10 11:03:26,114:INFO:              pandas: 1.4.4
2025-06-10 11:03:26,114:INFO:              jinja2: 3.1.2
2025-06-10 11:03:26,114:INFO:               scipy: 1.11.0
2025-06-10 11:03:26,114:INFO:              joblib: 1.3.2
2025-06-10 11:03:26,114:INFO:             sklearn: 1.4.2
2025-06-10 11:03:26,114:INFO:                pyod: 2.0.5
2025-06-10 11:03:26,114:INFO:            imblearn: 0.13.0
2025-06-10 11:03:26,114:INFO:   category_encoders: 2.7.0
2025-06-10 11:03:26,114:INFO:            lightgbm: 4.6.0
2025-06-10 11:03:26,114:INFO:               numba: 0.61.2
2025-06-10 11:03:26,114:INFO:            requests: 2.31.0
2025-06-10 11:03:26,114:INFO:          matplotlib: 3.5.3
2025-06-10 11:03:26,114:INFO:          scikitplot: 0.3.7
2025-06-10 11:03:26,114:INFO:         yellowbrick: 1.5
2025-06-10 11:03:26,114:INFO:              plotly: 5.24.1
2025-06-10 11:03:26,114:INFO:    plotly-resampler: Not installed
2025-06-10 11:03:26,114:INFO:             kaleido: 0.2.1
2025-06-10 11:03:26,114:INFO:           schemdraw: 0.15
2025-06-10 11:03:26,114:INFO:         statsmodels: 0.14.4
2025-06-10 11:03:26,114:INFO:              sktime: 0.26.0
2025-06-10 11:03:26,114:INFO:               tbats: 1.1.3
2025-06-10 11:03:26,114:INFO:            pmdarima: 2.0.4
2025-06-10 11:03:26,115:INFO:              psutil: 5.9.1
2025-06-10 11:03:26,115:INFO:          markupsafe: 2.1.1
2025-06-10 11:03:26,115:INFO:             pickle5: Not installed
2025-06-10 11:03:26,115:INFO:         cloudpickle: 3.1.1
2025-06-10 11:03:26,115:INFO:         deprecation: 2.1.0
2025-06-10 11:03:26,115:INFO:              xxhash: 3.5.0
2025-06-10 11:03:26,115:INFO:           wurlitzer: Not installed
2025-06-10 11:03:26,115:INFO:PyCaret optional dependencies:
2025-06-10 11:03:26,115:INFO:                shap: Not installed
2025-06-10 11:03:26,115:INFO:           interpret: Not installed
2025-06-10 11:03:26,115:INFO:                umap: Not installed
2025-06-10 11:03:26,115:INFO:     ydata_profiling: Not installed
2025-06-10 11:03:26,115:INFO:  explainerdashboard: Not installed
2025-06-10 11:03:26,115:INFO:             autoviz: Not installed
2025-06-10 11:03:26,115:INFO:           fairlearn: Not installed
2025-06-10 11:03:26,115:INFO:          deepchecks: Not installed
2025-06-10 11:03:26,115:INFO:             xgboost: Not installed
2025-06-10 11:03:26,115:INFO:            catboost: Not installed
2025-06-10 11:03:26,115:INFO:              kmodes: Not installed
2025-06-10 11:03:26,115:INFO:             mlxtend: Not installed
2025-06-10 11:03:26,115:INFO:       statsforecast: Not installed
2025-06-10 11:03:26,115:INFO:        tune_sklearn: Not installed
2025-06-10 11:03:26,115:INFO:                 ray: Not installed
2025-06-10 11:03:26,115:INFO:            hyperopt: Not installed
2025-06-10 11:03:26,115:INFO:              optuna: Not installed
2025-06-10 11:03:26,116:INFO:               skopt: Not installed
2025-06-10 11:03:26,116:INFO:              mlflow: Not installed
2025-06-10 11:03:26,116:INFO:              gradio: Not installed
2025-06-10 11:03:26,116:INFO:             fastapi: Not installed
2025-06-10 11:03:26,116:INFO:             uvicorn: Not installed
2025-06-10 11:03:26,116:INFO:              m2cgen: Not installed
2025-06-10 11:03:26,116:INFO:           evidently: Not installed
2025-06-10 11:03:26,116:INFO:               fugue: Not installed
2025-06-10 11:03:26,116:INFO:           streamlit: 1.45.1
2025-06-10 11:03:26,116:INFO:             prophet: Not installed
2025-06-10 11:03:26,116:INFO:None
2025-06-10 11:03:26,116:INFO:Set up data.
2025-06-10 11:03:26,122:INFO:Set up folding strategy.
2025-06-10 11:03:26,122:INFO:Set up train/test split.
2025-06-10 11:03:26,127:INFO:Set up index.
2025-06-10 11:03:26,127:INFO:Assigning column types.
2025-06-10 11:03:26,130:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 11:03:26,171:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,171:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,196:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,237:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,261:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 11:03:26,300:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,363:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-10 11:03:26,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,387:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-10 11:03:26,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,509:INFO:Preparing preprocessing pipeline...
2025-06-10 11:03:26,510:INFO:Set up label encoding.
2025-06-10 11:03:26,510:INFO:Set up simple imputation.
2025-06-10 11:03:26,511:INFO:Set up encoding of categorical features.
2025-06-10 11:03:26,579:INFO:Finished creating preprocessing pipeline.
2025-06-10 11:03:26,583:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2025-06-10 11:03:26,584:INFO:Creating final display dataframe.
2025-06-10 11:03:26,778:INFO:Setup _display_container:                     Description                                Value
0                    Session id                                 7844
1                        Target                                class
2                   Target type                           Multiclass
3                Target mapping  acc: 0, good: 1, unacc: 2, vgood: 3
4           Original data shape                            (1728, 7)
5        Transformed data shape                           (1728, 23)
6   Transformed train set shape                           (1209, 23)
7    Transformed test set shape                            (519, 23)
8          Categorical features                                    6
9                    Preprocess                                 True
10              Imputation type                               simple
11           Numeric imputation                                 mean
12       Categorical imputation                                 mode
13     Maximum one-hot encoding                                   25
14              Encoding method                                 None
15               Fold Generator                      StratifiedKFold
16                  Fold Number                                   10
17                     CPU Jobs                                   -1
18                      Use GPU                                False
19               Log Experiment                                False
20              Experiment Name                     clf-default-name
21                          USI                                 1eb4
2025-06-10 11:03:26,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:03:26,907:INFO:setup() successfully completed in 0.8s...............
2025-06-10 11:03:26,907:INFO:Initializing compare_models()
2025-06-10 11:03:26,907:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-10 11:03:26,907:INFO:Checking exceptions
2025-06-10 11:03:26,910:INFO:Preparing display monitor
2025-06-10 11:03:26,914:INFO:Initializing Logistic Regression
2025-06-10 11:03:26,914:INFO:Total runtime is 0.0 minutes
2025-06-10 11:03:26,914:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:26,914:INFO:Initializing create_model()
2025-06-10 11:03:26,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:26,914:INFO:Checking exceptions
2025-06-10 11:03:26,914:INFO:Importing libraries
2025-06-10 11:03:26,914:INFO:Copying training dataset
2025-06-10 11:03:26,918:INFO:Defining folds
2025-06-10 11:03:26,918:INFO:Declaring metric variables
2025-06-10 11:03:26,918:INFO:Importing untrained model
2025-06-10 11:03:26,918:INFO:Logistic Regression Imported successfully
2025-06-10 11:03:26,919:INFO:Starting cross validation
2025-06-10 11:03:26,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:33,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,492:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,514:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,516:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,518:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,519:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,521:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,521:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,524:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,526:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,529:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:33,533:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,534:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,534:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:33,535:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:33,537:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,540:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,547:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,553:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,578:INFO:Calculating mean and std
2025-06-10 11:03:33,581:INFO:Creating metrics dataframe
2025-06-10 11:03:33,586:INFO:Uploading results into container
2025-06-10 11:03:33,588:INFO:Uploading model into container now
2025-06-10 11:03:33,589:INFO:_master_model_container: 1
2025-06-10 11:03:33,589:INFO:_display_container: 2
2025-06-10 11:03:33,589:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7844, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-10 11:03:33,589:INFO:create_model() successfully completed......................................
2025-06-10 11:03:33,792:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:33,792:INFO:Creating metrics dataframe
2025-06-10 11:03:33,795:INFO:Initializing K Neighbors Classifier
2025-06-10 11:03:33,795:INFO:Total runtime is 0.11469010909398397 minutes
2025-06-10 11:03:33,795:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:33,796:INFO:Initializing create_model()
2025-06-10 11:03:33,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:33,796:INFO:Checking exceptions
2025-06-10 11:03:33,796:INFO:Importing libraries
2025-06-10 11:03:33,796:INFO:Copying training dataset
2025-06-10 11:03:33,799:INFO:Defining folds
2025-06-10 11:03:33,799:INFO:Declaring metric variables
2025-06-10 11:03:33,799:INFO:Importing untrained model
2025-06-10 11:03:33,799:INFO:K Neighbors Classifier Imported successfully
2025-06-10 11:03:33,799:INFO:Starting cross validation
2025-06-10 11:03:33,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:33,957:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,961:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,963:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,965:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,974:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,981:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,984:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,987:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:33,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,481:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,481:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:38,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,487:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,487:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:38,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,493:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,498:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,507:INFO:Calculating mean and std
2025-06-10 11:03:38,509:INFO:Creating metrics dataframe
2025-06-10 11:03:38,513:INFO:Uploading results into container
2025-06-10 11:03:38,514:INFO:Uploading model into container now
2025-06-10 11:03:38,515:INFO:_master_model_container: 2
2025-06-10 11:03:38,515:INFO:_display_container: 2
2025-06-10 11:03:38,515:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-10 11:03:38,515:INFO:create_model() successfully completed......................................
2025-06-10 11:03:38,685:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:38,685:INFO:Creating metrics dataframe
2025-06-10 11:03:38,689:INFO:Initializing Naive Bayes
2025-06-10 11:03:38,689:INFO:Total runtime is 0.1962469736735026 minutes
2025-06-10 11:03:38,689:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:38,689:INFO:Initializing create_model()
2025-06-10 11:03:38,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:38,689:INFO:Checking exceptions
2025-06-10 11:03:38,690:INFO:Importing libraries
2025-06-10 11:03:38,690:INFO:Copying training dataset
2025-06-10 11:03:38,692:INFO:Defining folds
2025-06-10 11:03:38,692:INFO:Declaring metric variables
2025-06-10 11:03:38,693:INFO:Importing untrained model
2025-06-10 11:03:38,693:INFO:Naive Bayes Imported successfully
2025-06-10 11:03:38,693:INFO:Starting cross validation
2025-06-10 11:03:38,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:38,838:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,842:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,848:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,864:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,866:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,867:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,867:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,870:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,871:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,873:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,876:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,877:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,878:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,886:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,902:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:38,921:INFO:Calculating mean and std
2025-06-10 11:03:38,922:INFO:Creating metrics dataframe
2025-06-10 11:03:38,924:INFO:Uploading results into container
2025-06-10 11:03:38,925:INFO:Uploading model into container now
2025-06-10 11:03:38,925:INFO:_master_model_container: 3
2025-06-10 11:03:38,925:INFO:_display_container: 2
2025-06-10 11:03:38,925:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-10 11:03:38,925:INFO:create_model() successfully completed......................................
2025-06-10 11:03:39,011:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:39,011:INFO:Creating metrics dataframe
2025-06-10 11:03:39,015:INFO:Initializing Decision Tree Classifier
2025-06-10 11:03:39,015:INFO:Total runtime is 0.20169254541397094 minutes
2025-06-10 11:03:39,015:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:39,015:INFO:Initializing create_model()
2025-06-10 11:03:39,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:39,016:INFO:Checking exceptions
2025-06-10 11:03:39,016:INFO:Importing libraries
2025-06-10 11:03:39,016:INFO:Copying training dataset
2025-06-10 11:03:39,019:INFO:Defining folds
2025-06-10 11:03:39,019:INFO:Declaring metric variables
2025-06-10 11:03:39,019:INFO:Importing untrained model
2025-06-10 11:03:39,019:INFO:Decision Tree Classifier Imported successfully
2025-06-10 11:03:39,019:INFO:Starting cross validation
2025-06-10 11:03:39,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:39,187:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,197:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,200:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,203:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,204:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,204:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,206:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,206:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,209:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,210:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,210:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,212:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,213:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,215:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,253:INFO:Calculating mean and std
2025-06-10 11:03:39,254:INFO:Creating metrics dataframe
2025-06-10 11:03:39,257:INFO:Uploading results into container
2025-06-10 11:03:39,257:INFO:Uploading model into container now
2025-06-10 11:03:39,258:INFO:_master_model_container: 4
2025-06-10 11:03:39,258:INFO:_display_container: 2
2025-06-10 11:03:39,258:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7844, splitter='best')
2025-06-10 11:03:39,258:INFO:create_model() successfully completed......................................
2025-06-10 11:03:39,346:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:39,346:INFO:Creating metrics dataframe
2025-06-10 11:03:39,351:INFO:Initializing SVM - Linear Kernel
2025-06-10 11:03:39,351:INFO:Total runtime is 0.207293697198232 minutes
2025-06-10 11:03:39,352:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:39,352:INFO:Initializing create_model()
2025-06-10 11:03:39,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:39,352:INFO:Checking exceptions
2025-06-10 11:03:39,352:INFO:Importing libraries
2025-06-10 11:03:39,352:INFO:Copying training dataset
2025-06-10 11:03:39,355:INFO:Defining folds
2025-06-10 11:03:39,355:INFO:Declaring metric variables
2025-06-10 11:03:39,355:INFO:Importing untrained model
2025-06-10 11:03:39,355:INFO:SVM - Linear Kernel Imported successfully
2025-06-10 11:03:39,355:INFO:Starting cross validation
2025-06-10 11:03:39,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:39,551:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,554:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,554:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,557:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,559:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,562:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,564:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,568:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,568:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,571:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,574:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,577:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

f this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,579:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,584:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,586:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,586:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,586:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,587:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,589:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,590:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,590:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,592:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,596:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,598:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,598:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,602:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,604:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,615:INFO:Calculating mean and std
2025-06-10 11:03:39,616:INFO:Creating metrics dataframe
2025-06-10 11:03:39,618:INFO:Uploading results into container
2025-06-10 11:03:39,619:INFO:Uploading model into container now
2025-06-10 11:03:39,619:INFO:_master_model_container: 5
2025-06-10 11:03:39,619:INFO:_display_container: 2
2025-06-10 11:03:39,619:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7844, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-10 11:03:39,619:INFO:create_model() successfully completed......................................
2025-06-10 11:03:39,697:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:39,697:INFO:Creating metrics dataframe
2025-06-10 11:03:39,701:INFO:Initializing Ridge Classifier
2025-06-10 11:03:39,701:INFO:Total runtime is 0.21312365134557087 minutes
2025-06-10 11:03:39,701:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:39,701:INFO:Initializing create_model()
2025-06-10 11:03:39,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:39,701:INFO:Checking exceptions
2025-06-10 11:03:39,701:INFO:Importing libraries
2025-06-10 11:03:39,701:INFO:Copying training dataset
2025-06-10 11:03:39,704:INFO:Defining folds
2025-06-10 11:03:39,704:INFO:Declaring metric variables
2025-06-10 11:03:39,704:INFO:Importing untrained model
2025-06-10 11:03:39,705:INFO:Ridge Classifier Imported successfully
2025-06-10 11:03:39,705:INFO:Starting cross validation
2025-06-10 11:03:39,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:39,875:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,878:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,879:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,880:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,886:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:39,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,902:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,903:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,904:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:39,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:39,916:INFO:Calculating mean and std
2025-06-10 11:03:39,917:INFO:Creating metrics dataframe
2025-06-10 11:03:39,920:INFO:Uploading results into container
2025-06-10 11:03:39,921:INFO:Uploading model into container now
2025-06-10 11:03:39,921:INFO:_master_model_container: 6
2025-06-10 11:03:39,921:INFO:_display_container: 2
2025-06-10 11:03:39,921:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7844, solver='auto',
                tol=0.0001)
2025-06-10 11:03:39,921:INFO:create_model() successfully completed......................................
2025-06-10 11:03:40,026:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:40,026:INFO:Creating metrics dataframe
2025-06-10 11:03:40,031:INFO:Initializing Random Forest Classifier
2025-06-10 11:03:40,031:INFO:Total runtime is 0.21861613591512044 minutes
2025-06-10 11:03:40,031:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:40,031:INFO:Initializing create_model()
2025-06-10 11:03:40,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:40,031:INFO:Checking exceptions
2025-06-10 11:03:40,031:INFO:Importing libraries
2025-06-10 11:03:40,032:INFO:Copying training dataset
2025-06-10 11:03:40,035:INFO:Defining folds
2025-06-10 11:03:40,035:INFO:Declaring metric variables
2025-06-10 11:03:40,035:INFO:Importing untrained model
2025-06-10 11:03:40,035:INFO:Random Forest Classifier Imported successfully
2025-06-10 11:03:40,036:INFO:Starting cross validation
2025-06-10 11:03:40,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:40,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,590:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,594:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,594:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,595:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,598:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,600:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,613:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,613:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,618:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,618:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,628:INFO:Calculating mean and std
2025-06-10 11:03:40,629:INFO:Creating metrics dataframe
2025-06-10 11:03:40,632:INFO:Uploading results into container
2025-06-10 11:03:40,632:INFO:Uploading model into container now
2025-06-10 11:03:40,633:INFO:_master_model_container: 7
2025-06-10 11:03:40,633:INFO:_display_container: 2
2025-06-10 11:03:40,633:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7844, verbose=0,
                       warm_start=False)
2025-06-10 11:03:40,633:INFO:create_model() successfully completed......................................
2025-06-10 11:03:40,710:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:40,710:INFO:Creating metrics dataframe
2025-06-10 11:03:40,715:INFO:Initializing Quadratic Discriminant Analysis
2025-06-10 11:03:40,715:INFO:Total runtime is 0.23001499970753989 minutes
2025-06-10 11:03:40,715:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:40,716:INFO:Initializing create_model()
2025-06-10 11:03:40,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:40,716:INFO:Checking exceptions
2025-06-10 11:03:40,716:INFO:Importing libraries
2025-06-10 11:03:40,716:INFO:Copying training dataset
2025-06-10 11:03:40,718:INFO:Defining folds
2025-06-10 11:03:40,719:INFO:Declaring metric variables
2025-06-10 11:03:40,719:INFO:Importing untrained model
2025-06-10 11:03:40,719:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-10 11:03:40,719:INFO:Starting cross validation
2025-06-10 11:03:40,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:40,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,860:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,861:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,874:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,875:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,875:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-10 11:03:40,876:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,876:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,877:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,891:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,892:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,903:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,903:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,905:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,908:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,908:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,908:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,919:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-06-10 11:03:40,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-06-10 11:03:40,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-06-10 11:03:40,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,925:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,926:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:40,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:40,943:INFO:Calculating mean and std
2025-06-10 11:03:40,944:INFO:Creating metrics dataframe
2025-06-10 11:03:40,947:INFO:Uploading results into container
2025-06-10 11:03:40,948:INFO:Uploading model into container now
2025-06-10 11:03:40,948:INFO:_master_model_container: 8
2025-06-10 11:03:40,948:INFO:_display_container: 2
2025-06-10 11:03:40,948:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-10 11:03:40,948:INFO:create_model() successfully completed......................................
2025-06-10 11:03:41,032:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:41,032:INFO:Creating metrics dataframe
2025-06-10 11:03:41,036:INFO:Initializing Ada Boost Classifier
2025-06-10 11:03:41,037:INFO:Total runtime is 0.23538281520207724 minutes
2025-06-10 11:03:41,037:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:41,037:INFO:Initializing create_model()
2025-06-10 11:03:41,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:41,037:INFO:Checking exceptions
2025-06-10 11:03:41,037:INFO:Importing libraries
2025-06-10 11:03:41,037:INFO:Copying training dataset
2025-06-10 11:03:41,041:INFO:Defining folds
2025-06-10 11:03:41,041:INFO:Declaring metric variables
2025-06-10 11:03:41,041:INFO:Importing untrained model
2025-06-10 11:03:41,041:INFO:Ada Boost Classifier Imported successfully
2025-06-10 11:03:41,041:INFO:Starting cross validation
2025-06-10 11:03:41,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:41,139:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,153:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,154:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,156:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,185:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,191:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-10 11:03:41,354:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,357:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,359:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,360:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,361:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,362:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,364:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,365:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:41,365:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,365:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,366:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,367:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,368:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,370:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,370:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,371:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,372:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,376:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,380:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,380:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,383:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,389:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,390:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,391:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:41,392:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,392:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,393:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,395:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,395:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:41,402:INFO:Calculating mean and std
2025-06-10 11:03:41,403:INFO:Creating metrics dataframe
2025-06-10 11:03:41,406:INFO:Uploading results into container
2025-06-10 11:03:41,406:INFO:Uploading model into container now
2025-06-10 11:03:41,406:INFO:_master_model_container: 9
2025-06-10 11:03:41,406:INFO:_display_container: 2
2025-06-10 11:03:41,407:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7844)
2025-06-10 11:03:41,407:INFO:create_model() successfully completed......................................
2025-06-10 11:03:41,484:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:41,484:INFO:Creating metrics dataframe
2025-06-10 11:03:41,488:INFO:Initializing Gradient Boosting Classifier
2025-06-10 11:03:41,488:INFO:Total runtime is 0.2429111997286479 minutes
2025-06-10 11:03:41,488:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:41,488:INFO:Initializing create_model()
2025-06-10 11:03:41,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:41,489:INFO:Checking exceptions
2025-06-10 11:03:41,489:INFO:Importing libraries
2025-06-10 11:03:41,489:INFO:Copying training dataset
2025-06-10 11:03:41,491:INFO:Defining folds
2025-06-10 11:03:41,491:INFO:Declaring metric variables
2025-06-10 11:03:41,491:INFO:Importing untrained model
2025-06-10 11:03:41,492:INFO:Gradient Boosting Classifier Imported successfully
2025-06-10 11:03:41,492:INFO:Starting cross validation
2025-06-10 11:03:41,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:42,549:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,550:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,552:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,554:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,555:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,557:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,561:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,564:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,566:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,567:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,569:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,572:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,583:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,586:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,590:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,596:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,597:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,602:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,606:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,606:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,606:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,611:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,611:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,611:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,616:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,617:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,634:INFO:Calculating mean and std
2025-06-10 11:03:42,636:INFO:Creating metrics dataframe
2025-06-10 11:03:42,642:INFO:Uploading results into container
2025-06-10 11:03:42,643:INFO:Uploading model into container now
2025-06-10 11:03:42,644:INFO:_master_model_container: 10
2025-06-10 11:03:42,644:INFO:_display_container: 2
2025-06-10 11:03:42,645:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7844, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-10 11:03:42,645:INFO:create_model() successfully completed......................................
2025-06-10 11:03:42,732:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:42,732:INFO:Creating metrics dataframe
2025-06-10 11:03:42,736:INFO:Initializing Linear Discriminant Analysis
2025-06-10 11:03:42,736:INFO:Total runtime is 0.26370309193929037 minutes
2025-06-10 11:03:42,736:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:42,736:INFO:Initializing create_model()
2025-06-10 11:03:42,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:42,736:INFO:Checking exceptions
2025-06-10 11:03:42,736:INFO:Importing libraries
2025-06-10 11:03:42,736:INFO:Copying training dataset
2025-06-10 11:03:42,739:INFO:Defining folds
2025-06-10 11:03:42,739:INFO:Declaring metric variables
2025-06-10 11:03:42,739:INFO:Importing untrained model
2025-06-10 11:03:42,739:INFO:Linear Discriminant Analysis Imported successfully
2025-06-10 11:03:42,739:INFO:Starting cross validation
2025-06-10 11:03:42,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:42,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,887:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,904:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,907:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,912:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,915:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,915:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,920:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:42,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,924:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,925:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,926:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-06-10 11:03:42,932:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,934:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,937:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,937:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,938:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:42,946:INFO:Calculating mean and std
2025-06-10 11:03:42,947:INFO:Creating metrics dataframe
2025-06-10 11:03:42,949:INFO:Uploading results into container
2025-06-10 11:03:42,950:INFO:Uploading model into container now
2025-06-10 11:03:42,950:INFO:_master_model_container: 11
2025-06-10 11:03:42,950:INFO:_display_container: 2
2025-06-10 11:03:42,950:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-10 11:03:42,950:INFO:create_model() successfully completed......................................
2025-06-10 11:03:43,034:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:43,035:INFO:Creating metrics dataframe
2025-06-10 11:03:43,038:INFO:Initializing Extra Trees Classifier
2025-06-10 11:03:43,038:INFO:Total runtime is 0.26873660484949746 minutes
2025-06-10 11:03:43,038:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:43,039:INFO:Initializing create_model()
2025-06-10 11:03:43,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:43,039:INFO:Checking exceptions
2025-06-10 11:03:43,039:INFO:Importing libraries
2025-06-10 11:03:43,039:INFO:Copying training dataset
2025-06-10 11:03:43,041:INFO:Defining folds
2025-06-10 11:03:43,041:INFO:Declaring metric variables
2025-06-10 11:03:43,041:INFO:Importing untrained model
2025-06-10 11:03:43,042:INFO:Extra Trees Classifier Imported successfully
2025-06-10 11:03:43,042:INFO:Starting cross validation
2025-06-10 11:03:43,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:43,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,499:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,501:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,502:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,503:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,507:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,511:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,518:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,527:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,528:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,530:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,531:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,531:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,532:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,533:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,534:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,535:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,536:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,542:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,542:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,545:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,545:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:43,565:INFO:Calculating mean and std
2025-06-10 11:03:43,566:INFO:Creating metrics dataframe
2025-06-10 11:03:43,568:INFO:Uploading results into container
2025-06-10 11:03:43,569:INFO:Uploading model into container now
2025-06-10 11:03:43,569:INFO:_master_model_container: 12
2025-06-10 11:03:43,569:INFO:_display_container: 2
2025-06-10 11:03:43,569:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7844, verbose=0,
                     warm_start=False)
2025-06-10 11:03:43,569:INFO:create_model() successfully completed......................................
2025-06-10 11:03:43,648:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:43,648:INFO:Creating metrics dataframe
2025-06-10 11:03:43,652:INFO:Initializing Light Gradient Boosting Machine
2025-06-10 11:03:43,652:INFO:Total runtime is 0.2789734840393066 minutes
2025-06-10 11:03:43,652:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:43,652:INFO:Initializing create_model()
2025-06-10 11:03:43,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:43,652:INFO:Checking exceptions
2025-06-10 11:03:43,652:INFO:Importing libraries
2025-06-10 11:03:43,652:INFO:Copying training dataset
2025-06-10 11:03:43,655:INFO:Defining folds
2025-06-10 11:03:43,655:INFO:Declaring metric variables
2025-06-10 11:03:43,655:INFO:Importing untrained model
2025-06-10 11:03:43,655:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 11:03:43,655:INFO:Starting cross validation
2025-06-10 11:03:43,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:45,898:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:45,904:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:45,910:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,152:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,195:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,202:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,206:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,208:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,221:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,300:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,305:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,453:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,458:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,463:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,718:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,730:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,731:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,735:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,737:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,741:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:46,764:INFO:Calculating mean and std
2025-06-10 11:03:46,765:INFO:Creating metrics dataframe
2025-06-10 11:03:46,770:INFO:Uploading results into container
2025-06-10 11:03:46,771:INFO:Uploading model into container now
2025-06-10 11:03:46,771:INFO:_master_model_container: 13
2025-06-10 11:03:46,771:INFO:_display_container: 2
2025-06-10 11:03:46,772:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7844, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 11:03:46,772:INFO:create_model() successfully completed......................................
2025-06-10 11:03:46,884:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:46,884:INFO:Creating metrics dataframe
2025-06-10 11:03:46,888:INFO:Initializing Dummy Classifier
2025-06-10 11:03:46,888:INFO:Total runtime is 0.33289794524510696 minutes
2025-06-10 11:03:46,888:INFO:SubProcess create_model() called ==================================
2025-06-10 11:03:46,888:INFO:Initializing create_model()
2025-06-10 11:03:46,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DD1E30D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:46,889:INFO:Checking exceptions
2025-06-10 11:03:46,889:INFO:Importing libraries
2025-06-10 11:03:46,889:INFO:Copying training dataset
2025-06-10 11:03:46,892:INFO:Defining folds
2025-06-10 11:03:46,892:INFO:Declaring metric variables
2025-06-10 11:03:46,892:INFO:Importing untrained model
2025-06-10 11:03:46,892:INFO:Dummy Classifier Imported successfully
2025-06-10 11:03:46,893:INFO:Starting cross validation
2025-06-10 11:03:46,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:03:47,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,092:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,097:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,100:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,100:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,105:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,108:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,108:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,108:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,111:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,112:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,113:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,115:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,117:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,117:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,118:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,120:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,121:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,121:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,123:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,124:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,124:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,127:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,127:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,128:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,129:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,130:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-10 11:03:47,132:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'vgood') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-10 11:03:47,139:INFO:Calculating mean and std
2025-06-10 11:03:47,140:INFO:Creating metrics dataframe
2025-06-10 11:03:47,143:INFO:Uploading results into container
2025-06-10 11:03:47,144:INFO:Uploading model into container now
2025-06-10 11:03:47,144:INFO:_master_model_container: 14
2025-06-10 11:03:47,144:INFO:_display_container: 2
2025-06-10 11:03:47,145:INFO:DummyClassifier(constant=None, random_state=7844, strategy='prior')
2025-06-10 11:03:47,145:INFO:create_model() successfully completed......................................
2025-06-10 11:03:47,252:INFO:SubProcess create_model() end ==================================
2025-06-10 11:03:47,252:INFO:Creating metrics dataframe
2025-06-10 11:03:47,261:INFO:Initializing create_model()
2025-06-10 11:03:47,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7844, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:03:47,262:INFO:Checking exceptions
2025-06-10 11:03:47,263:INFO:Importing libraries
2025-06-10 11:03:47,263:INFO:Copying training dataset
2025-06-10 11:03:47,267:INFO:Defining folds
2025-06-10 11:03:47,267:INFO:Declaring metric variables
2025-06-10 11:03:47,267:INFO:Importing untrained model
2025-06-10 11:03:47,267:INFO:Declaring custom model
2025-06-10 11:03:47,268:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-10 11:03:47,270:INFO:Cross validation set to False
2025-06-10 11:03:47,270:INFO:Fitting Model
2025-06-10 11:03:47,904:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7844, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 11:03:47,904:INFO:create_model() successfully completed......................................
2025-06-10 11:03:48,043:INFO:_master_model_container: 14
2025-06-10 11:03:48,043:INFO:_display_container: 2
2025-06-10 11:03:48,044:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7844, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-10 11:03:48,044:INFO:compare_models() successfully completed......................................
2025-06-10 11:03:48,049:INFO:Initializing save_model()
2025-06-10 11:03:48,050:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7844, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              m...
                                                              strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-10 11:03:48,050:INFO:Adding model into prep_pipe
2025-06-10 11:03:48,095:INFO:best_model.pkl saved in current working directory
2025-06-10 11:03:48,110:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                random_state=7844, reg_alpha=0.0,
                                reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-06-10 11:03:48,110:INFO:save_model() successfully completed......................................
2025-06-10 11:04:20,851:INFO:Initializing load_model()
2025-06-10 11:04:20,851:INFO:load_model(model_name=best_model, platform=None, authentication=None, verbose=True)
2025-06-10 11:04:20,900:INFO:Initializing predict_model()
2025-06-10 11:04:20,900:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4DCDE9ED0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    tr...ormer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['buying', 'maint', 'door',
                                             'persons', 'lug_boot', 'safety'],
                                    transformer=OneHotEncoder(cols=['buying',
                                                                    'maint',
                                                                    'door',
                                                                    'persons',
                                                                    'lug_boot',
                                                                    'safety'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 LGBMClassifier(n_jobs=-1, random_state=7844))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F4DD48D870>)
2025-06-10 11:04:20,901:INFO:Checking exceptions
2025-06-10 11:04:20,901:INFO:Preloading libraries
2025-06-10 11:04:20,901:INFO:Set up data.
2025-06-10 11:04:20,907:INFO:Set up index.
2025-06-10 11:09:44,555:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 11:09:59,365:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:25,320:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:30,484:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:36,370:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:36,450:INFO:PyCaret RegressionExperiment
2025-06-10 11:10:36,450:INFO:Logging name: reg-default-name
2025-06-10 11:10:36,450:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 11:10:36,450:INFO:version 3.3.2
2025-06-10 11:10:36,450:INFO:Initializing setup()
2025-06-10 11:10:36,450:INFO:self.USI: 1be5
2025-06-10 11:10:36,450:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'logging_param', 'transform_target_param', 'USI', 'X_test', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 11:10:36,450:INFO:Checking environment
2025-06-10 11:10:36,450:INFO:python_version: 3.10.6
2025-06-10 11:10:36,450:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 11:10:36,450:INFO:machine: AMD64
2025-06-10 11:10:36,450:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 11:10:36,451:INFO:Memory: svmem(total=8416440320, available=1589166080, percent=81.1, used=6827274240, free=1589166080)
2025-06-10 11:10:36,451:INFO:Physical Core: 8
2025-06-10 11:10:36,451:INFO:Logical Core: 16
2025-06-10 11:10:36,451:INFO:Checking libraries
2025-06-10 11:10:36,452:INFO:System:
2025-06-10 11:10:36,452:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 11:10:36,452:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 11:10:36,452:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 11:10:36,452:INFO:PyCaret required dependencies:
2025-06-10 11:10:36,452:INFO:                 pip: 23.1.2
2025-06-10 11:10:36,452:INFO:          setuptools: 63.2.0
2025-06-10 11:10:36,452:INFO:             pycaret: 3.3.2
2025-06-10 11:10:36,452:INFO:             IPython: 8.4.0
2025-06-10 11:10:36,452:INFO:          ipywidgets: 8.0.6
2025-06-10 11:10:36,452:INFO:                tqdm: 4.65.0
2025-06-10 11:10:36,452:INFO:               numpy: 1.26.4
2025-06-10 11:10:36,452:INFO:              pandas: 1.4.4
2025-06-10 11:10:36,452:INFO:              jinja2: 3.1.2
2025-06-10 11:10:36,452:INFO:               scipy: 1.11.0
2025-06-10 11:10:36,452:INFO:              joblib: 1.3.2
2025-06-10 11:10:36,452:INFO:             sklearn: 1.4.2
2025-06-10 11:10:36,452:INFO:                pyod: 2.0.5
2025-06-10 11:10:36,452:INFO:            imblearn: 0.13.0
2025-06-10 11:10:36,452:INFO:   category_encoders: 2.7.0
2025-06-10 11:10:36,452:INFO:            lightgbm: 4.6.0
2025-06-10 11:10:36,452:INFO:               numba: 0.61.2
2025-06-10 11:10:36,452:INFO:            requests: 2.31.0
2025-06-10 11:10:36,452:INFO:          matplotlib: 3.5.3
2025-06-10 11:10:36,452:INFO:          scikitplot: 0.3.7
2025-06-10 11:10:36,452:INFO:         yellowbrick: 1.5
2025-06-10 11:10:36,452:INFO:              plotly: 5.24.1
2025-06-10 11:10:36,453:INFO:    plotly-resampler: Not installed
2025-06-10 11:10:36,453:INFO:             kaleido: 0.2.1
2025-06-10 11:10:36,453:INFO:           schemdraw: 0.15
2025-06-10 11:10:36,453:INFO:         statsmodels: 0.14.4
2025-06-10 11:10:36,453:INFO:              sktime: 0.26.0
2025-06-10 11:10:36,453:INFO:               tbats: 1.1.3
2025-06-10 11:10:36,453:INFO:            pmdarima: 2.0.4
2025-06-10 11:10:36,454:INFO:              psutil: 5.9.1
2025-06-10 11:10:36,454:INFO:          markupsafe: 2.1.1
2025-06-10 11:10:36,454:INFO:             pickle5: Not installed
2025-06-10 11:10:36,454:INFO:         cloudpickle: 3.1.1
2025-06-10 11:10:36,454:INFO:         deprecation: 2.1.0
2025-06-10 11:10:36,454:INFO:              xxhash: 3.5.0
2025-06-10 11:10:36,454:INFO:           wurlitzer: Not installed
2025-06-10 11:10:36,454:INFO:PyCaret optional dependencies:
2025-06-10 11:10:36,454:INFO:                shap: Not installed
2025-06-10 11:10:36,454:INFO:           interpret: Not installed
2025-06-10 11:10:36,455:INFO:                umap: Not installed
2025-06-10 11:10:36,455:INFO:     ydata_profiling: Not installed
2025-06-10 11:10:36,455:INFO:  explainerdashboard: Not installed
2025-06-10 11:10:36,455:INFO:             autoviz: Not installed
2025-06-10 11:10:36,455:INFO:           fairlearn: Not installed
2025-06-10 11:10:36,455:INFO:          deepchecks: Not installed
2025-06-10 11:10:36,455:INFO:             xgboost: Not installed
2025-06-10 11:10:36,455:INFO:            catboost: Not installed
2025-06-10 11:10:36,455:INFO:              kmodes: Not installed
2025-06-10 11:10:36,455:INFO:             mlxtend: Not installed
2025-06-10 11:10:36,455:INFO:       statsforecast: Not installed
2025-06-10 11:10:36,455:INFO:        tune_sklearn: Not installed
2025-06-10 11:10:36,455:INFO:                 ray: Not installed
2025-06-10 11:10:36,455:INFO:            hyperopt: Not installed
2025-06-10 11:10:36,455:INFO:              optuna: Not installed
2025-06-10 11:10:36,455:INFO:               skopt: Not installed
2025-06-10 11:10:36,455:INFO:              mlflow: Not installed
2025-06-10 11:10:36,455:INFO:              gradio: Not installed
2025-06-10 11:10:36,455:INFO:             fastapi: Not installed
2025-06-10 11:10:36,455:INFO:             uvicorn: Not installed
2025-06-10 11:10:36,455:INFO:              m2cgen: Not installed
2025-06-10 11:10:36,455:INFO:           evidently: Not installed
2025-06-10 11:10:36,455:INFO:               fugue: Not installed
2025-06-10 11:10:36,456:INFO:           streamlit: 1.45.1
2025-06-10 11:10:36,456:INFO:             prophet: Not installed
2025-06-10 11:10:36,456:INFO:None
2025-06-10 11:10:36,456:INFO:Set up data.
2025-06-10 11:10:36,618:INFO:Set up folding strategy.
2025-06-10 11:10:36,619:INFO:Set up train/test split.
2025-06-10 11:10:36,685:INFO:Set up index.
2025-06-10 11:10:36,691:INFO:Assigning column types.
2025-06-10 11:10:36,741:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 11:10:36,741:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,745:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,749:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,841:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:36,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:36,879:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,883:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,886:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:36,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,006:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 11:10:37,010:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,015:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,096:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,138:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,220:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,258:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,259:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 11:10:37,266:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,393:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,508:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 11:10:37,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,726:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,765:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 11:10:37,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:37,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:37,980:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:38,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,018:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 11:10:38,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:38,269:INFO:Preparing preprocessing pipeline...
2025-06-10 11:10:38,269:INFO:Set up simple imputation.
2025-06-10 11:10:38,292:INFO:Set up encoding of categorical features.
2025-06-10 11:10:38,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:39,027:INFO:Finished creating preprocessing pipeline.
2025-06-10 11:10:39,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 11:10:39,033:INFO:Creating final display dataframe.
2025-06-10 11:10:39,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:39,650:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:40,022:INFO:Setup _display_container:                     Description             Value
0                    Session id              5665
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              1be5
2025-06-10 11:10:40,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:40,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:40,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:40,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:40,270:INFO:setup() successfully completed in 3.83s...............
2025-06-10 11:10:47,303:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:49,060:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:10:49,127:INFO:PyCaret RegressionExperiment
2025-06-10 11:10:49,127:INFO:Logging name: reg-default-name
2025-06-10 11:10:49,127:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 11:10:49,127:INFO:version 3.3.2
2025-06-10 11:10:49,127:INFO:Initializing setup()
2025-06-10 11:10:49,127:INFO:self.USI: 6a95
2025-06-10 11:10:49,127:INFO:self._variable_keys: {'y', 'data', 'html_param', 'idx', 'fold_generator', 'gpu_param', '_available_plots', 'X', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'memory', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'exp_id', 'y_train', 'fold_groups_param', 'X_train', 'logging_param', 'transform_target_param', 'USI', 'X_test', 'target_param', 'y_test', 'exp_name_log'}
2025-06-10 11:10:49,128:INFO:Checking environment
2025-06-10 11:10:49,128:INFO:python_version: 3.10.6
2025-06-10 11:10:49,128:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 11:10:49,128:INFO:machine: AMD64
2025-06-10 11:10:49,128:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 11:10:49,128:INFO:Memory: svmem(total=8416440320, available=1483751424, percent=82.4, used=6932688896, free=1483751424)
2025-06-10 11:10:49,128:INFO:Physical Core: 8
2025-06-10 11:10:49,128:INFO:Logical Core: 16
2025-06-10 11:10:49,128:INFO:Checking libraries
2025-06-10 11:10:49,128:INFO:System:
2025-06-10 11:10:49,128:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 11:10:49,128:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 11:10:49,128:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 11:10:49,128:INFO:PyCaret required dependencies:
2025-06-10 11:10:49,128:INFO:                 pip: 23.1.2
2025-06-10 11:10:49,128:INFO:          setuptools: 63.2.0
2025-06-10 11:10:49,128:INFO:             pycaret: 3.3.2
2025-06-10 11:10:49,128:INFO:             IPython: 8.4.0
2025-06-10 11:10:49,128:INFO:          ipywidgets: 8.0.6
2025-06-10 11:10:49,128:INFO:                tqdm: 4.65.0
2025-06-10 11:10:49,128:INFO:               numpy: 1.26.4
2025-06-10 11:10:49,128:INFO:              pandas: 1.4.4
2025-06-10 11:10:49,128:INFO:              jinja2: 3.1.2
2025-06-10 11:10:49,129:INFO:               scipy: 1.11.0
2025-06-10 11:10:49,129:INFO:              joblib: 1.3.2
2025-06-10 11:10:49,129:INFO:             sklearn: 1.4.2
2025-06-10 11:10:49,129:INFO:                pyod: 2.0.5
2025-06-10 11:10:49,129:INFO:            imblearn: 0.13.0
2025-06-10 11:10:49,129:INFO:   category_encoders: 2.7.0
2025-06-10 11:10:49,129:INFO:            lightgbm: 4.6.0
2025-06-10 11:10:49,129:INFO:               numba: 0.61.2
2025-06-10 11:10:49,129:INFO:            requests: 2.31.0
2025-06-10 11:10:49,129:INFO:          matplotlib: 3.5.3
2025-06-10 11:10:49,129:INFO:          scikitplot: 0.3.7
2025-06-10 11:10:49,129:INFO:         yellowbrick: 1.5
2025-06-10 11:10:49,129:INFO:              plotly: 5.24.1
2025-06-10 11:10:49,129:INFO:    plotly-resampler: Not installed
2025-06-10 11:10:49,129:INFO:             kaleido: 0.2.1
2025-06-10 11:10:49,129:INFO:           schemdraw: 0.15
2025-06-10 11:10:49,129:INFO:         statsmodels: 0.14.4
2025-06-10 11:10:49,129:INFO:              sktime: 0.26.0
2025-06-10 11:10:49,129:INFO:               tbats: 1.1.3
2025-06-10 11:10:49,129:INFO:            pmdarima: 2.0.4
2025-06-10 11:10:49,129:INFO:              psutil: 5.9.1
2025-06-10 11:10:49,129:INFO:          markupsafe: 2.1.1
2025-06-10 11:10:49,129:INFO:             pickle5: Not installed
2025-06-10 11:10:49,129:INFO:         cloudpickle: 3.1.1
2025-06-10 11:10:49,129:INFO:         deprecation: 2.1.0
2025-06-10 11:10:49,129:INFO:              xxhash: 3.5.0
2025-06-10 11:10:49,129:INFO:           wurlitzer: Not installed
2025-06-10 11:10:49,129:INFO:PyCaret optional dependencies:
2025-06-10 11:10:49,129:INFO:                shap: Not installed
2025-06-10 11:10:49,130:INFO:           interpret: Not installed
2025-06-10 11:10:49,130:INFO:                umap: Not installed
2025-06-10 11:10:49,130:INFO:     ydata_profiling: Not installed
2025-06-10 11:10:49,130:INFO:  explainerdashboard: Not installed
2025-06-10 11:10:49,130:INFO:             autoviz: Not installed
2025-06-10 11:10:49,130:INFO:           fairlearn: Not installed
2025-06-10 11:10:49,130:INFO:          deepchecks: Not installed
2025-06-10 11:10:49,130:INFO:             xgboost: Not installed
2025-06-10 11:10:49,130:INFO:            catboost: Not installed
2025-06-10 11:10:49,130:INFO:              kmodes: Not installed
2025-06-10 11:10:49,130:INFO:             mlxtend: Not installed
2025-06-10 11:10:49,130:INFO:       statsforecast: Not installed
2025-06-10 11:10:49,130:INFO:        tune_sklearn: Not installed
2025-06-10 11:10:49,130:INFO:                 ray: Not installed
2025-06-10 11:10:49,130:INFO:            hyperopt: Not installed
2025-06-10 11:10:49,130:INFO:              optuna: Not installed
2025-06-10 11:10:49,130:INFO:               skopt: Not installed
2025-06-10 11:10:49,130:INFO:              mlflow: Not installed
2025-06-10 11:10:49,130:INFO:              gradio: Not installed
2025-06-10 11:10:49,130:INFO:             fastapi: Not installed
2025-06-10 11:10:49,130:INFO:             uvicorn: Not installed
2025-06-10 11:10:49,130:INFO:              m2cgen: Not installed
2025-06-10 11:10:49,130:INFO:           evidently: Not installed
2025-06-10 11:10:49,130:INFO:               fugue: Not installed
2025-06-10 11:10:49,130:INFO:           streamlit: 1.45.1
2025-06-10 11:10:49,130:INFO:             prophet: Not installed
2025-06-10 11:10:49,130:INFO:None
2025-06-10 11:10:49,130:INFO:Set up data.
2025-06-10 11:10:49,283:INFO:Set up folding strategy.
2025-06-10 11:10:49,283:INFO:Set up train/test split.
2025-06-10 11:10:49,346:INFO:Set up index.
2025-06-10 11:10:49,351:INFO:Assigning column types.
2025-06-10 11:10:49,403:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 11:10:49,403:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,407:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,411:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,490:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,527:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,528:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,532:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,536:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,613:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,649:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 11:10:49,653:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,656:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,771:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,776:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,780:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,901:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:49,902:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 11:10:49,910:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:49,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,039:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,115:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,153:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,154:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 11:10:50,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,366:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,404:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,404:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 11:10:50,488:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:10:50,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,647:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 11:10:50,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:50,894:INFO:Preparing preprocessing pipeline...
2025-06-10 11:10:50,894:INFO:Set up simple imputation.
2025-06-10 11:10:50,915:INFO:Set up encoding of categorical features.
2025-06-10 11:10:51,023:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:51,596:INFO:Finished creating preprocessing pipeline.
2025-06-10 11:10:51,603:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 11:10:51,603:INFO:Creating final display dataframe.
2025-06-10 11:10:51,688:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:52,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:10:52,592:INFO:Setup _display_container:                     Description             Value
0                    Session id              5638
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              6a95
2025-06-10 11:10:52,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:52,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:52,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:52,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:10:52,838:INFO:setup() successfully completed in 3.71s...............
2025-06-10 11:10:52,839:INFO:Initializing compare_models()
2025-06-10 11:10:52,839:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-10 11:10:52,839:INFO:Checking exceptions
2025-06-10 11:10:52,858:INFO:Preparing display monitor
2025-06-10 11:10:52,861:INFO:Initializing Linear Regression
2025-06-10 11:10:52,861:INFO:Total runtime is 0.0 minutes
2025-06-10 11:10:52,862:INFO:SubProcess create_model() called ==================================
2025-06-10 11:10:52,862:INFO:Initializing create_model()
2025-06-10 11:10:52,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:10:52,862:INFO:Checking exceptions
2025-06-10 11:10:52,862:INFO:Importing libraries
2025-06-10 11:10:52,862:INFO:Copying training dataset
2025-06-10 11:10:52,907:INFO:Defining folds
2025-06-10 11:10:52,907:INFO:Declaring metric variables
2025-06-10 11:10:52,908:INFO:Importing untrained model
2025-06-10 11:10:52,908:INFO:Linear Regression Imported successfully
2025-06-10 11:10:52,908:INFO:Starting cross validation
2025-06-10 11:10:52,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:01,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,266:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,290:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:01,313:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,327:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,668:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,686:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,711:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:04,784:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:05,052:INFO:Calculating mean and std
2025-06-10 11:11:05,054:INFO:Creating metrics dataframe
2025-06-10 11:11:05,062:INFO:Uploading results into container
2025-06-10 11:11:05,063:INFO:Uploading model into container now
2025-06-10 11:11:05,064:INFO:_master_model_container: 1
2025-06-10 11:11:05,064:INFO:_display_container: 2
2025-06-10 11:11:05,064:INFO:LinearRegression(n_jobs=-1)
2025-06-10 11:11:05,064:INFO:create_model() successfully completed......................................
2025-06-10 11:11:05,269:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:05,269:INFO:Creating metrics dataframe
2025-06-10 11:11:05,274:INFO:Initializing Lasso Regression
2025-06-10 11:11:05,274:INFO:Total runtime is 0.2068809469540914 minutes
2025-06-10 11:11:05,275:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:05,275:INFO:Initializing create_model()
2025-06-10 11:11:05,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:05,275:INFO:Checking exceptions
2025-06-10 11:11:05,275:INFO:Importing libraries
2025-06-10 11:11:05,275:INFO:Copying training dataset
2025-06-10 11:11:05,351:INFO:Defining folds
2025-06-10 11:11:05,351:INFO:Declaring metric variables
2025-06-10 11:11:05,351:INFO:Importing untrained model
2025-06-10 11:11:05,351:INFO:Lasso Regression Imported successfully
2025-06-10 11:11:05,351:INFO:Starting cross validation
2025-06-10 11:11:05,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:05,645:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:05,693:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:05,740:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:05,774:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,677:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,687:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,698:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,704:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,705:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:13,707:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:14,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.213e+13, tolerance: 3.290e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:14,774:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:15,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.203e+13, tolerance: 3.302e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:15,044:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:15,082:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.212e+13, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:15,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:15,144:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.220e+13, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:15,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,196:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.217e+13, tolerance: 3.309e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.205e+13, tolerance: 3.298e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+13, tolerance: 3.302e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,301:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,307:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,316:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.206e+13, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,328:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,341:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+13, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.215e+13, tolerance: 3.300e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:23,397:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:23,592:INFO:Calculating mean and std
2025-06-10 11:11:23,596:INFO:Creating metrics dataframe
2025-06-10 11:11:23,610:INFO:Uploading results into container
2025-06-10 11:11:23,612:INFO:Uploading model into container now
2025-06-10 11:11:23,613:INFO:_master_model_container: 2
2025-06-10 11:11:23,613:INFO:_display_container: 2
2025-06-10 11:11:23,614:INFO:Lasso(random_state=5638)
2025-06-10 11:11:23,615:INFO:create_model() successfully completed......................................
2025-06-10 11:11:23,721:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:23,721:INFO:Creating metrics dataframe
2025-06-10 11:11:23,728:INFO:Initializing Ridge Regression
2025-06-10 11:11:23,728:INFO:Total runtime is 0.5144580006599426 minutes
2025-06-10 11:11:23,728:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:23,729:INFO:Initializing create_model()
2025-06-10 11:11:23,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:23,729:INFO:Checking exceptions
2025-06-10 11:11:23,729:INFO:Importing libraries
2025-06-10 11:11:23,729:INFO:Copying training dataset
2025-06-10 11:11:23,779:INFO:Defining folds
2025-06-10 11:11:23,779:INFO:Declaring metric variables
2025-06-10 11:11:23,779:INFO:Importing untrained model
2025-06-10 11:11:23,779:INFO:Ridge Regression Imported successfully
2025-06-10 11:11:23,779:INFO:Starting cross validation
2025-06-10 11:11:23,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:23,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,082:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,155:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,311:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,408:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,558:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,653:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:24,724:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:26,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,129:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,272:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,345:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,439:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:27,625:INFO:Calculating mean and std
2025-06-10 11:11:27,627:INFO:Creating metrics dataframe
2025-06-10 11:11:27,636:INFO:Uploading results into container
2025-06-10 11:11:27,637:INFO:Uploading model into container now
2025-06-10 11:11:27,638:INFO:_master_model_container: 3
2025-06-10 11:11:27,638:INFO:_display_container: 2
2025-06-10 11:11:27,639:INFO:Ridge(random_state=5638)
2025-06-10 11:11:27,640:INFO:create_model() successfully completed......................................
2025-06-10 11:11:27,745:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:27,746:INFO:Creating metrics dataframe
2025-06-10 11:11:27,759:INFO:Initializing Elastic Net
2025-06-10 11:11:27,759:INFO:Total runtime is 0.5816442688306173 minutes
2025-06-10 11:11:27,759:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:27,760:INFO:Initializing create_model()
2025-06-10 11:11:27,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:27,760:INFO:Checking exceptions
2025-06-10 11:11:27,760:INFO:Importing libraries
2025-06-10 11:11:27,760:INFO:Copying training dataset
2025-06-10 11:11:27,814:INFO:Defining folds
2025-06-10 11:11:27,814:INFO:Declaring metric variables
2025-06-10 11:11:27,814:INFO:Importing untrained model
2025-06-10 11:11:27,816:INFO:Elastic Net Imported successfully
2025-06-10 11:11:27,816:INFO:Starting cross validation
2025-06-10 11:11:27,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:28,023:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,088:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,135:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,306:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,434:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,563:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:28,662:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:50,863:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.853e+12, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:50,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:50,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.998e+12, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:50,982:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.395e+12, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.539e+12, tolerance: 3.298e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.709e+12, tolerance: 3.290e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,131:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.716e+12, tolerance: 3.302e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,195:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.545e+12, tolerance: 3.309e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,215:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.276e+12, tolerance: 3.302e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,304:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.548e+12, tolerance: 3.300e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,304:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.673e+12, tolerance: 3.297e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 11:11:51,311:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,314:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,508:INFO:Calculating mean and std
2025-06-10 11:11:51,511:INFO:Creating metrics dataframe
2025-06-10 11:11:51,522:INFO:Uploading results into container
2025-06-10 11:11:51,523:INFO:Uploading model into container now
2025-06-10 11:11:51,525:INFO:_master_model_container: 4
2025-06-10 11:11:51,525:INFO:_display_container: 2
2025-06-10 11:11:51,526:INFO:ElasticNet(random_state=5638)
2025-06-10 11:11:51,526:INFO:create_model() successfully completed......................................
2025-06-10 11:11:51,628:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:51,628:INFO:Creating metrics dataframe
2025-06-10 11:11:51,634:INFO:Initializing Least Angle Regression
2025-06-10 11:11:51,634:INFO:Total runtime is 0.9795530716578166 minutes
2025-06-10 11:11:51,634:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:51,634:INFO:Initializing create_model()
2025-06-10 11:11:51,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:51,634:INFO:Checking exceptions
2025-06-10 11:11:51,634:INFO:Importing libraries
2025-06-10 11:11:51,634:INFO:Copying training dataset
2025-06-10 11:11:51,681:INFO:Defining folds
2025-06-10 11:11:51,681:INFO:Declaring metric variables
2025-06-10 11:11:51,681:INFO:Importing untrained model
2025-06-10 11:11:51,683:INFO:Least Angle Regression Imported successfully
2025-06-10 11:11:51,683:INFO:Starting cross validation
2025-06-10 11:11:51,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:51,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,932:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:51,997:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,055:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,228:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,292:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,441:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:52,530:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,458:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.578e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,459:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.789e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,460:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.377e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,461:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.374e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,462:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=8.825e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,463:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=6.997e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=3.992e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,465:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.902e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,466:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.829e+03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.746e+03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=6.183e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=5.577e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,469:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=1.742e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,471:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=4.160e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,473:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=6.949e+09, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,473:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=2.724e+09, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,510:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,552:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=3.106e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,553:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=5.928e+00, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,573:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=6.329e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,575:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=3.194e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.069e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.555e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.747e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,578:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=2.198e+03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,579:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=9.801e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=4.359e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,580:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=3.630e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,581:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.483e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,581:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,581:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=8.343e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=3.451e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,583:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=7.620e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,583:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=2.698e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,609:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.632e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.816e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.406e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=9.590e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=7.576e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,749:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=4.231e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,750:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=3.357e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.107e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=6.556e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,752:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=9.097e+01, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=5.940e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=5.322e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,753:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.841e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,754:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=1.147e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,755:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.404e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,756:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.435e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.824e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.477e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,757:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=6.967e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,758:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=3.815e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.062e+02, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=4.978e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,761:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=1.089e+07, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,779:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,783:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,799:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.358e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.176e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.628e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,804:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=6.847e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,805:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=1.822e+01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=2.408e+01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,819:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,839:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.471e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,840:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.602e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=8.008e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.957e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.450e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,842:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=6.116e+05, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,842:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.213e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=2.356e+03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,844:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.922e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,844:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.761e+02, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=3.012e+01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=5.622e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=2.435e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,846:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=2.389e+02, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,860:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=3.169e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=3.889e+00, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:54,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.889e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=2.289e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,923:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=1.972e+06, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:54,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,099:INFO:Calculating mean and std
2025-06-10 11:11:55,101:INFO:Creating metrics dataframe
2025-06-10 11:11:55,109:INFO:Uploading results into container
2025-06-10 11:11:55,110:INFO:Uploading model into container now
2025-06-10 11:11:55,113:INFO:_master_model_container: 5
2025-06-10 11:11:55,113:INFO:_display_container: 2
2025-06-10 11:11:55,115:INFO:Lars(random_state=5638)
2025-06-10 11:11:55,115:INFO:create_model() successfully completed......................................
2025-06-10 11:11:55,210:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:55,211:INFO:Creating metrics dataframe
2025-06-10 11:11:55,214:INFO:Initializing Lasso Least Angle Regression
2025-06-10 11:11:55,214:INFO:Total runtime is 1.0392179926236471 minutes
2025-06-10 11:11:55,214:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:55,214:INFO:Initializing create_model()
2025-06-10 11:11:55,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:55,214:INFO:Checking exceptions
2025-06-10 11:11:55,214:INFO:Importing libraries
2025-06-10 11:11:55,215:INFO:Copying training dataset
2025-06-10 11:11:55,259:INFO:Defining folds
2025-06-10 11:11:55,259:INFO:Declaring metric variables
2025-06-10 11:11:55,259:INFO:Importing untrained model
2025-06-10 11:11:55,259:INFO:Lasso Least Angle Regression Imported successfully
2025-06-10 11:11:55,259:INFO:Starting cross validation
2025-06-10 11:11:55,261:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:55,459:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,523:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,588:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,650:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,728:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,805:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,831:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:55,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:56,053:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,018:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.578e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.789e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.377e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.374e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,024:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 6 iterations, alpha=1.377e+06, previous alpha=1.393e+04, with an active set of 5 regressors.
  warnings.warn(

2025-06-10 11:11:58,051:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,071:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=6.329e+05, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=3.194e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,321:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.069e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,321:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.555e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,321:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.747e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,322:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 9 iterations, alpha=7.183e+03, previous alpha=2.381e+03, with an active set of 8 regressors.
  warnings.warn(

2025-06-10 11:11:58,345:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,352:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.404e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.435e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.824e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,355:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 10 iterations, alpha=3.658e+03, previous alpha=2.791e+03, with an active set of 9 regressors.
  warnings.warn(

2025-06-10 11:11:58,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.471e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.602e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,405:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=8.008e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,405:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.957e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,405:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.450e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=6.116e+05, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=4.213e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,407:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 10 iterations, alpha=2.832e+06, previous alpha=3.018e+03, with an active set of 9 regressors.
  warnings.warn(

2025-06-10 11:11:58,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,475:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.632e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.816e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.406e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 6 iterations, alpha=1.402e+06, previous alpha=1.324e+04, with an active set of 5 regressors.
  warnings.warn(

2025-06-10 11:11:58,495:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.358e+04, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.176e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,496:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.628e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 11:11:58,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 13 iterations, alpha=1.653e+03, previous alpha=5.009e+02, with an active set of 12 regressors.
  warnings.warn(

2025-06-10 11:11:58,500:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,524:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:58,722:INFO:Calculating mean and std
2025-06-10 11:11:58,725:INFO:Creating metrics dataframe
2025-06-10 11:11:58,735:INFO:Uploading results into container
2025-06-10 11:11:58,737:INFO:Uploading model into container now
2025-06-10 11:11:58,738:INFO:_master_model_container: 6
2025-06-10 11:11:58,738:INFO:_display_container: 2
2025-06-10 11:11:58,739:INFO:LassoLars(random_state=5638)
2025-06-10 11:11:58,739:INFO:create_model() successfully completed......................................
2025-06-10 11:11:58,854:INFO:SubProcess create_model() end ==================================
2025-06-10 11:11:58,855:INFO:Creating metrics dataframe
2025-06-10 11:11:58,871:INFO:Initializing Orthogonal Matching Pursuit
2025-06-10 11:11:58,871:INFO:Total runtime is 1.1001789013544718 minutes
2025-06-10 11:11:58,872:INFO:SubProcess create_model() called ==================================
2025-06-10 11:11:58,872:INFO:Initializing create_model()
2025-06-10 11:11:58,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:11:58,872:INFO:Checking exceptions
2025-06-10 11:11:58,872:INFO:Importing libraries
2025-06-10 11:11:58,872:INFO:Copying training dataset
2025-06-10 11:11:58,932:INFO:Defining folds
2025-06-10 11:11:58,932:INFO:Declaring metric variables
2025-06-10 11:11:58,932:INFO:Importing untrained model
2025-06-10 11:11:58,932:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-10 11:11:58,932:INFO:Starting cross validation
2025-06-10 11:11:58,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:11:59,167:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,207:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,246:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,512:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,632:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,680:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:11:59,766:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:01,651:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:01,711:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:01,797:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:01,853:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:01,966:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,100:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,132:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,328:INFO:Calculating mean and std
2025-06-10 11:12:02,331:INFO:Creating metrics dataframe
2025-06-10 11:12:02,339:INFO:Uploading results into container
2025-06-10 11:12:02,341:INFO:Uploading model into container now
2025-06-10 11:12:02,342:INFO:_master_model_container: 7
2025-06-10 11:12:02,342:INFO:_display_container: 2
2025-06-10 11:12:02,342:INFO:OrthogonalMatchingPursuit()
2025-06-10 11:12:02,342:INFO:create_model() successfully completed......................................
2025-06-10 11:12:02,439:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:02,440:INFO:Creating metrics dataframe
2025-06-10 11:12:02,445:INFO:Initializing Bayesian Ridge
2025-06-10 11:12:02,446:INFO:Total runtime is 1.1597524603207905 minutes
2025-06-10 11:12:02,446:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:02,446:INFO:Initializing create_model()
2025-06-10 11:12:02,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:02,446:INFO:Checking exceptions
2025-06-10 11:12:02,446:INFO:Importing libraries
2025-06-10 11:12:02,446:INFO:Copying training dataset
2025-06-10 11:12:02,496:INFO:Defining folds
2025-06-10 11:12:02,497:INFO:Declaring metric variables
2025-06-10 11:12:02,497:INFO:Importing untrained model
2025-06-10 11:12:02,497:INFO:Bayesian Ridge Imported successfully
2025-06-10 11:12:02,498:INFO:Starting cross validation
2025-06-10 11:12:02,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:02,696:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,740:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,835:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,866:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:02,974:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:03,049:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:03,095:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:03,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:03,214:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:03,303:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:05,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,021:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,151:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,332:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,359:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,367:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,439:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,534:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:06,723:INFO:Calculating mean and std
2025-06-10 11:12:06,726:INFO:Creating metrics dataframe
2025-06-10 11:12:06,735:INFO:Uploading results into container
2025-06-10 11:12:06,737:INFO:Uploading model into container now
2025-06-10 11:12:06,738:INFO:_master_model_container: 8
2025-06-10 11:12:06,738:INFO:_display_container: 2
2025-06-10 11:12:06,739:INFO:BayesianRidge()
2025-06-10 11:12:06,739:INFO:create_model() successfully completed......................................
2025-06-10 11:12:06,845:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:06,845:INFO:Creating metrics dataframe
2025-06-10 11:12:06,850:INFO:Initializing Passive Aggressive Regressor
2025-06-10 11:12:06,850:INFO:Total runtime is 1.2331632216771442 minutes
2025-06-10 11:12:06,850:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:06,850:INFO:Initializing create_model()
2025-06-10 11:12:06,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:06,850:INFO:Checking exceptions
2025-06-10 11:12:06,851:INFO:Importing libraries
2025-06-10 11:12:06,851:INFO:Copying training dataset
2025-06-10 11:12:06,897:INFO:Defining folds
2025-06-10 11:12:06,897:INFO:Declaring metric variables
2025-06-10 11:12:06,898:INFO:Importing untrained model
2025-06-10 11:12:06,898:INFO:Passive Aggressive Regressor Imported successfully
2025-06-10 11:12:06,898:INFO:Starting cross validation
2025-06-10 11:12:06,899:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:07,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,215:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,282:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,444:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,494:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,563:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:07,700:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,056:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,307:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,316:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,438:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:10,665:INFO:Calculating mean and std
2025-06-10 11:12:10,667:INFO:Creating metrics dataframe
2025-06-10 11:12:10,669:INFO:Uploading results into container
2025-06-10 11:12:10,669:INFO:Uploading model into container now
2025-06-10 11:12:10,670:INFO:_master_model_container: 9
2025-06-10 11:12:10,670:INFO:_display_container: 2
2025-06-10 11:12:10,670:INFO:PassiveAggressiveRegressor(random_state=5638)
2025-06-10 11:12:10,670:INFO:create_model() successfully completed......................................
2025-06-10 11:12:10,753:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:10,753:INFO:Creating metrics dataframe
2025-06-10 11:12:10,757:INFO:Initializing Huber Regressor
2025-06-10 11:12:10,758:INFO:Total runtime is 1.298282484213511 minutes
2025-06-10 11:12:10,758:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:10,758:INFO:Initializing create_model()
2025-06-10 11:12:10,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:10,758:INFO:Checking exceptions
2025-06-10 11:12:10,758:INFO:Importing libraries
2025-06-10 11:12:10,758:INFO:Copying training dataset
2025-06-10 11:12:10,805:INFO:Defining folds
2025-06-10 11:12:10,805:INFO:Declaring metric variables
2025-06-10 11:12:10,805:INFO:Importing untrained model
2025-06-10 11:12:10,805:INFO:Huber Regressor Imported successfully
2025-06-10 11:12:10,806:INFO:Starting cross validation
2025-06-10 11:12:10,807:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:10,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,072:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,202:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,275:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,423:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,540:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:11,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:16,587:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:16,619:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:16,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:16,889:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:17,100:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:17,138:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:17,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:17,335:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:17,404:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:18,412:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:18,581:INFO:Calculating mean and std
2025-06-10 11:12:18,582:INFO:Creating metrics dataframe
2025-06-10 11:12:18,585:INFO:Uploading results into container
2025-06-10 11:12:18,585:INFO:Uploading model into container now
2025-06-10 11:12:18,586:INFO:_master_model_container: 10
2025-06-10 11:12:18,586:INFO:_display_container: 2
2025-06-10 11:12:18,586:INFO:HuberRegressor()
2025-06-10 11:12:18,586:INFO:create_model() successfully completed......................................
2025-06-10 11:12:18,688:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:18,688:INFO:Creating metrics dataframe
2025-06-10 11:12:18,693:INFO:Initializing K Neighbors Regressor
2025-06-10 11:12:18,693:INFO:Total runtime is 1.4305391073226927 minutes
2025-06-10 11:12:18,693:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:18,693:INFO:Initializing create_model()
2025-06-10 11:12:18,693:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:18,693:INFO:Checking exceptions
2025-06-10 11:12:18,693:INFO:Importing libraries
2025-06-10 11:12:18,693:INFO:Copying training dataset
2025-06-10 11:12:18,756:INFO:Defining folds
2025-06-10 11:12:18,756:INFO:Declaring metric variables
2025-06-10 11:12:18,756:INFO:Importing untrained model
2025-06-10 11:12:18,757:INFO:K Neighbors Regressor Imported successfully
2025-06-10 11:12:18,757:INFO:Starting cross validation
2025-06-10 11:12:18,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:18,986:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,078:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,150:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,294:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,644:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,751:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:19,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,592:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,696:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,818:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,863:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:22,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:29,139:INFO:Calculating mean and std
2025-06-10 11:12:29,140:INFO:Creating metrics dataframe
2025-06-10 11:12:29,143:INFO:Uploading results into container
2025-06-10 11:12:29,143:INFO:Uploading model into container now
2025-06-10 11:12:29,144:INFO:_master_model_container: 11
2025-06-10 11:12:29,144:INFO:_display_container: 2
2025-06-10 11:12:29,144:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-10 11:12:29,144:INFO:create_model() successfully completed......................................
2025-06-10 11:12:29,262:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:29,263:INFO:Creating metrics dataframe
2025-06-10 11:12:29,267:INFO:Initializing Decision Tree Regressor
2025-06-10 11:12:29,267:INFO:Total runtime is 1.6067737619082132 minutes
2025-06-10 11:12:29,268:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:29,268:INFO:Initializing create_model()
2025-06-10 11:12:29,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:29,268:INFO:Checking exceptions
2025-06-10 11:12:29,268:INFO:Importing libraries
2025-06-10 11:12:29,268:INFO:Copying training dataset
2025-06-10 11:12:29,334:INFO:Defining folds
2025-06-10 11:12:29,334:INFO:Declaring metric variables
2025-06-10 11:12:29,335:INFO:Importing untrained model
2025-06-10 11:12:29,335:INFO:Decision Tree Regressor Imported successfully
2025-06-10 11:12:29,335:INFO:Starting cross validation
2025-06-10 11:12:29,337:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:29,588:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:29,647:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:29,719:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:29,825:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:29,963:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:30,041:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:30,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:30,229:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:30,304:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:30,402:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,548:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,667:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,701:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,712:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,752:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,755:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:34,809:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:35,243:INFO:Calculating mean and std
2025-06-10 11:12:35,245:INFO:Creating metrics dataframe
2025-06-10 11:12:35,247:INFO:Uploading results into container
2025-06-10 11:12:35,248:INFO:Uploading model into container now
2025-06-10 11:12:35,248:INFO:_master_model_container: 12
2025-06-10 11:12:35,248:INFO:_display_container: 2
2025-06-10 11:12:35,248:INFO:DecisionTreeRegressor(random_state=5638)
2025-06-10 11:12:35,248:INFO:create_model() successfully completed......................................
2025-06-10 11:12:35,360:INFO:SubProcess create_model() end ==================================
2025-06-10 11:12:35,360:INFO:Creating metrics dataframe
2025-06-10 11:12:35,365:INFO:Initializing Random Forest Regressor
2025-06-10 11:12:35,365:INFO:Total runtime is 1.708402868111928 minutes
2025-06-10 11:12:35,365:INFO:SubProcess create_model() called ==================================
2025-06-10 11:12:35,365:INFO:Initializing create_model()
2025-06-10 11:12:35,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:12:35,366:INFO:Checking exceptions
2025-06-10 11:12:35,366:INFO:Importing libraries
2025-06-10 11:12:35,366:INFO:Copying training dataset
2025-06-10 11:12:35,436:INFO:Defining folds
2025-06-10 11:12:35,436:INFO:Declaring metric variables
2025-06-10 11:12:35,436:INFO:Importing untrained model
2025-06-10 11:12:35,437:INFO:Random Forest Regressor Imported successfully
2025-06-10 11:12:35,437:INFO:Starting cross validation
2025-06-10 11:12:35,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:12:35,671:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:35,763:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:35,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:35,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,074:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,330:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:12:36,399:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:53,968:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:56,342:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:57,049:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:57,106:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:57,163:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:57,596:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:58,085:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:58,198:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:58,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:58,275:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:13:59,593:INFO:Calculating mean and std
2025-06-10 11:13:59,653:INFO:Creating metrics dataframe
2025-06-10 11:13:59,802:INFO:Uploading results into container
2025-06-10 11:13:59,808:INFO:Uploading model into container now
2025-06-10 11:13:59,825:INFO:_master_model_container: 13
2025-06-10 11:13:59,825:INFO:_display_container: 2
2025-06-10 11:13:59,848:INFO:RandomForestRegressor(n_jobs=-1, random_state=5638)
2025-06-10 11:13:59,848:INFO:create_model() successfully completed......................................
2025-06-10 11:14:00,736:INFO:SubProcess create_model() end ==================================
2025-06-10 11:14:00,737:INFO:Creating metrics dataframe
2025-06-10 11:14:00,750:INFO:Initializing Extra Trees Regressor
2025-06-10 11:14:00,750:INFO:Total runtime is 3.131481925646464 minutes
2025-06-10 11:14:00,751:INFO:SubProcess create_model() called ==================================
2025-06-10 11:14:00,751:INFO:Initializing create_model()
2025-06-10 11:14:00,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:14:00,751:INFO:Checking exceptions
2025-06-10 11:14:00,752:INFO:Importing libraries
2025-06-10 11:14:00,753:INFO:Copying training dataset
2025-06-10 11:14:00,928:INFO:Defining folds
2025-06-10 11:14:00,928:INFO:Declaring metric variables
2025-06-10 11:14:00,929:INFO:Importing untrained model
2025-06-10 11:14:00,930:INFO:Extra Trees Regressor Imported successfully
2025-06-10 11:14:00,930:INFO:Starting cross validation
2025-06-10 11:14:00,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:14:01,656:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,778:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,811:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:01,955:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:02,089:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:02,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:14:02,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,657:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,659:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,660:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,672:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,685:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,696:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:15:56,748:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:32,231:INFO:Calculating mean and std
2025-06-10 11:17:32,261:INFO:Creating metrics dataframe
2025-06-10 11:17:32,314:INFO:Uploading results into container
2025-06-10 11:17:32,318:INFO:Uploading model into container now
2025-06-10 11:17:32,337:INFO:_master_model_container: 14
2025-06-10 11:17:32,344:INFO:_display_container: 2
2025-06-10 11:17:32,354:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=5638)
2025-06-10 11:17:32,355:INFO:create_model() successfully completed......................................
2025-06-10 11:17:32,726:INFO:SubProcess create_model() end ==================================
2025-06-10 11:17:32,737:INFO:Creating metrics dataframe
2025-06-10 11:17:32,769:INFO:Initializing AdaBoost Regressor
2025-06-10 11:17:32,770:INFO:Total runtime is 6.665145460764567 minutes
2025-06-10 11:17:32,771:INFO:SubProcess create_model() called ==================================
2025-06-10 11:17:32,772:INFO:Initializing create_model()
2025-06-10 11:17:32,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:17:32,776:INFO:Checking exceptions
2025-06-10 11:17:32,779:INFO:Importing libraries
2025-06-10 11:17:32,782:INFO:Copying training dataset
2025-06-10 11:17:33,084:INFO:Defining folds
2025-06-10 11:17:33,085:INFO:Declaring metric variables
2025-06-10 11:17:33,085:INFO:Importing untrained model
2025-06-10 11:17:33,088:INFO:AdaBoost Regressor Imported successfully
2025-06-10 11:17:33,089:INFO:Starting cross validation
2025-06-10 11:17:33,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:17:33,962:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:17:34,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,163:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,225:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:17:34,322:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,538:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,636:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,746:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,921:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:34,975:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,226:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,554:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,754:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,763:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,796:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,809:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,848:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:41,904:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:42,061:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:42,257:INFO:Calculating mean and std
2025-06-10 11:17:42,257:INFO:Creating metrics dataframe
2025-06-10 11:17:42,261:INFO:Uploading results into container
2025-06-10 11:17:42,262:INFO:Uploading model into container now
2025-06-10 11:17:42,262:INFO:_master_model_container: 15
2025-06-10 11:17:42,262:INFO:_display_container: 2
2025-06-10 11:17:42,262:INFO:AdaBoostRegressor(random_state=5638)
2025-06-10 11:17:42,262:INFO:create_model() successfully completed......................................
2025-06-10 11:17:42,383:INFO:SubProcess create_model() end ==================================
2025-06-10 11:17:42,383:INFO:Creating metrics dataframe
2025-06-10 11:17:42,389:INFO:Initializing Gradient Boosting Regressor
2025-06-10 11:17:42,390:INFO:Total runtime is 6.825471103191376 minutes
2025-06-10 11:17:42,390:INFO:SubProcess create_model() called ==================================
2025-06-10 11:17:42,390:INFO:Initializing create_model()
2025-06-10 11:17:42,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:17:42,390:INFO:Checking exceptions
2025-06-10 11:17:42,390:INFO:Importing libraries
2025-06-10 11:17:42,390:INFO:Copying training dataset
2025-06-10 11:17:42,456:INFO:Defining folds
2025-06-10 11:17:42,456:INFO:Declaring metric variables
2025-06-10 11:17:42,456:INFO:Importing untrained model
2025-06-10 11:17:42,456:INFO:Gradient Boosting Regressor Imported successfully
2025-06-10 11:17:42,457:INFO:Starting cross validation
2025-06-10 11:17:42,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 11:17:42,816:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:42,875:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:42,961:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,059:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,155:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,194:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,228:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:17:43,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:18:09,193:WARNING:create_model() for gbr raised an exception or returned all 0.0, trying without fit_kwargs:
2025-06-10 11:18:09,203:WARNING:Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-06-10 11:18:09,204:INFO:Initializing create_model()
2025-06-10 11:18:09,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F4DD2271C0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4DFE618A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 11:18:09,204:INFO:Checking exceptions
2025-06-10 11:18:09,204:INFO:Importing libraries
2025-06-10 11:18:09,204:INFO:Copying training dataset
2025-06-10 11:19:10,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 11:19:10,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 11:19:10,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 11:19:10,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 11:19:13,633:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 11:19:13,853:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:19:23,458:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:19:23,725:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 11:19:30,230:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:19:36,252:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:19:39,050:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:19:39,136:INFO:PyCaret RegressionExperiment
2025-06-10 11:19:39,136:INFO:Logging name: reg-default-name
2025-06-10 11:19:39,136:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 11:19:39,136:INFO:version 3.3.2
2025-06-10 11:19:39,136:INFO:Initializing setup()
2025-06-10 11:19:39,136:INFO:self.USI: 117c
2025-06-10 11:19:39,136:INFO:self._variable_keys: {'pipeline', 'data', '_available_plots', 'X_train', '_ml_usecase', 'y_train', 'gpu_n_jobs_param', 'logging_param', 'fold_generator', 'transform_target_param', 'exp_name_log', 'fold_shuffle_param', 'gpu_param', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'y', 'html_param', 'target_param', 'X_test', 'USI', 'X', 'exp_id', 'y_test', 'n_jobs_param'}
2025-06-10 11:19:39,136:INFO:Checking environment
2025-06-10 11:19:39,136:INFO:python_version: 3.10.6
2025-06-10 11:19:39,136:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 11:19:39,136:INFO:machine: AMD64
2025-06-10 11:19:39,157:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 11:19:39,157:INFO:Memory: svmem(total=8416440320, available=1310953472, percent=84.4, used=7105486848, free=1310953472)
2025-06-10 11:19:39,158:INFO:Physical Core: 8
2025-06-10 11:19:39,158:INFO:Logical Core: 16
2025-06-10 11:19:39,158:INFO:Checking libraries
2025-06-10 11:19:39,158:INFO:System:
2025-06-10 11:19:39,158:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 11:19:39,158:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 11:19:39,158:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 11:19:39,158:INFO:PyCaret required dependencies:
2025-06-10 11:19:39,225:INFO:                 pip: 23.1.2
2025-06-10 11:19:39,225:INFO:          setuptools: 63.2.0
2025-06-10 11:19:39,225:INFO:             pycaret: 3.3.2
2025-06-10 11:19:39,225:INFO:             IPython: 8.4.0
2025-06-10 11:19:39,225:INFO:          ipywidgets: 8.0.6
2025-06-10 11:19:39,226:INFO:                tqdm: 4.65.0
2025-06-10 11:19:39,226:INFO:               numpy: 1.26.4
2025-06-10 11:19:39,226:INFO:              pandas: 1.4.4
2025-06-10 11:19:39,226:INFO:              jinja2: 3.1.2
2025-06-10 11:19:39,226:INFO:               scipy: 1.11.0
2025-06-10 11:19:39,226:INFO:              joblib: 1.3.2
2025-06-10 11:19:39,226:INFO:             sklearn: 1.4.2
2025-06-10 11:19:39,226:INFO:                pyod: 2.0.5
2025-06-10 11:19:39,226:INFO:            imblearn: 0.13.0
2025-06-10 11:19:39,226:INFO:   category_encoders: 2.7.0
2025-06-10 11:19:39,226:INFO:            lightgbm: 4.6.0
2025-06-10 11:19:39,226:INFO:               numba: 0.61.2
2025-06-10 11:19:39,226:INFO:            requests: 2.31.0
2025-06-10 11:19:39,226:INFO:          matplotlib: 3.5.3
2025-06-10 11:19:39,226:INFO:          scikitplot: 0.3.7
2025-06-10 11:19:39,226:INFO:         yellowbrick: 1.5
2025-06-10 11:19:39,226:INFO:              plotly: 5.24.1
2025-06-10 11:19:39,226:INFO:    plotly-resampler: Not installed
2025-06-10 11:19:39,226:INFO:             kaleido: 0.2.1
2025-06-10 11:19:39,226:INFO:           schemdraw: 0.15
2025-06-10 11:19:39,226:INFO:         statsmodels: 0.14.4
2025-06-10 11:19:39,226:INFO:              sktime: 0.26.0
2025-06-10 11:19:39,226:INFO:               tbats: 1.1.3
2025-06-10 11:19:39,226:INFO:            pmdarima: 2.0.4
2025-06-10 11:19:39,226:INFO:              psutil: 5.9.1
2025-06-10 11:19:39,226:INFO:          markupsafe: 2.1.1
2025-06-10 11:19:39,226:INFO:             pickle5: Not installed
2025-06-10 11:19:39,226:INFO:         cloudpickle: 3.1.1
2025-06-10 11:19:39,227:INFO:         deprecation: 2.1.0
2025-06-10 11:19:39,227:INFO:              xxhash: 3.5.0
2025-06-10 11:19:39,227:INFO:           wurlitzer: Not installed
2025-06-10 11:19:39,227:INFO:PyCaret optional dependencies:
2025-06-10 11:19:39,239:INFO:                shap: Not installed
2025-06-10 11:19:39,240:INFO:           interpret: Not installed
2025-06-10 11:19:39,240:INFO:                umap: Not installed
2025-06-10 11:19:39,240:INFO:     ydata_profiling: Not installed
2025-06-10 11:19:39,240:INFO:  explainerdashboard: Not installed
2025-06-10 11:19:39,240:INFO:             autoviz: Not installed
2025-06-10 11:19:39,240:INFO:           fairlearn: Not installed
2025-06-10 11:19:39,240:INFO:          deepchecks: Not installed
2025-06-10 11:19:39,240:INFO:             xgboost: Not installed
2025-06-10 11:19:39,240:INFO:            catboost: Not installed
2025-06-10 11:19:39,240:INFO:              kmodes: Not installed
2025-06-10 11:19:39,240:INFO:             mlxtend: Not installed
2025-06-10 11:19:39,240:INFO:       statsforecast: Not installed
2025-06-10 11:19:39,240:INFO:        tune_sklearn: Not installed
2025-06-10 11:19:39,240:INFO:                 ray: Not installed
2025-06-10 11:19:39,240:INFO:            hyperopt: Not installed
2025-06-10 11:19:39,240:INFO:              optuna: Not installed
2025-06-10 11:19:39,240:INFO:               skopt: Not installed
2025-06-10 11:19:39,240:INFO:              mlflow: Not installed
2025-06-10 11:19:39,240:INFO:              gradio: Not installed
2025-06-10 11:19:39,240:INFO:             fastapi: Not installed
2025-06-10 11:19:39,240:INFO:             uvicorn: Not installed
2025-06-10 11:19:39,240:INFO:              m2cgen: Not installed
2025-06-10 11:19:39,240:INFO:           evidently: Not installed
2025-06-10 11:19:39,240:INFO:               fugue: Not installed
2025-06-10 11:19:39,240:INFO:           streamlit: 1.45.1
2025-06-10 11:19:39,240:INFO:             prophet: Not installed
2025-06-10 11:19:39,240:INFO:None
2025-06-10 11:19:39,241:INFO:Set up data.
2025-06-10 11:19:39,384:INFO:Set up folding strategy.
2025-06-10 11:19:39,384:INFO:Set up train/test split.
2025-06-10 11:19:39,450:INFO:Set up index.
2025-06-10 11:19:39,454:INFO:Assigning column types.
2025-06-10 11:19:39,498:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 11:19:39,498:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,503:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,506:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,634:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,638:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,762:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 11:19:39,768:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,775:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,898:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:39,903:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,907:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:39,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,035:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 11:19:40,044:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,126:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,175:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,296:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 11:19:40,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,566:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 11:19:40,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 11:19:40,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,832:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 11:19:40,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:40,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:41,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:41,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:41,101:INFO:Preparing preprocessing pipeline...
2025-06-10 11:19:41,101:INFO:Set up simple imputation.
2025-06-10 11:19:41,125:INFO:Set up encoding of categorical features.
2025-06-10 11:19:41,243:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:19:41,854:INFO:Finished creating preprocessing pipeline.
2025-06-10 11:19:41,860:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 11:19:41,860:INFO:Creating final display dataframe.
2025-06-10 11:19:41,959:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:19:42,533:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 11:19:42,927:INFO:Setup _display_container:                     Description             Value
0                    Session id              6574
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              117c
2025-06-10 11:19:43,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:43,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:43,200:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:43,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 11:19:43,200:INFO:setup() successfully completed in 4.08s...............
2025-06-10 11:20:03,574:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:07,650:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:14,937:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:15,169:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 11:20:21,488:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:50,104:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:52,378:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:54,040:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 11:20:54,871:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:37:53,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 14:37:53,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 14:37:53,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 14:37:53,532:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 14:37:57,761:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 14:37:58,008:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:07,696:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:12,295:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:14,793:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:16,596:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:18,834:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 14:38:23,200:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:16,140:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:25,655:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:25,908:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 15:53:32,276:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:38,363:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:40,687:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:40,782:INFO:PyCaret RegressionExperiment
2025-06-10 15:53:40,782:INFO:Logging name: reg-default-name
2025-06-10 15:53:40,782:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 15:53:40,782:INFO:version 3.3.2
2025-06-10 15:53:40,782:INFO:Initializing setup()
2025-06-10 15:53:40,782:INFO:self.USI: 82cd
2025-06-10 15:53:40,782:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 15:53:40,782:INFO:Checking environment
2025-06-10 15:53:40,782:INFO:python_version: 3.10.6
2025-06-10 15:53:40,782:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 15:53:40,782:INFO:machine: AMD64
2025-06-10 15:53:40,797:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 15:53:40,797:INFO:Memory: svmem(total=8416440320, available=252256256, percent=97.0, used=8164184064, free=252256256)
2025-06-10 15:53:40,798:INFO:Physical Core: 8
2025-06-10 15:53:40,798:INFO:Logical Core: 16
2025-06-10 15:53:40,798:INFO:Checking libraries
2025-06-10 15:53:40,798:INFO:System:
2025-06-10 15:53:40,798:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 15:53:40,799:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 15:53:40,799:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 15:53:40,799:INFO:PyCaret required dependencies:
2025-06-10 15:53:40,884:INFO:                 pip: 23.1.2
2025-06-10 15:53:40,884:INFO:          setuptools: 63.2.0
2025-06-10 15:53:40,884:INFO:             pycaret: 3.3.2
2025-06-10 15:53:40,884:INFO:             IPython: 8.4.0
2025-06-10 15:53:40,884:INFO:          ipywidgets: 8.0.6
2025-06-10 15:53:40,884:INFO:                tqdm: 4.65.0
2025-06-10 15:53:40,884:INFO:               numpy: 1.26.4
2025-06-10 15:53:40,884:INFO:              pandas: 1.4.4
2025-06-10 15:53:40,884:INFO:              jinja2: 3.1.2
2025-06-10 15:53:40,884:INFO:               scipy: 1.11.0
2025-06-10 15:53:40,884:INFO:              joblib: 1.3.2
2025-06-10 15:53:40,884:INFO:             sklearn: 1.4.2
2025-06-10 15:53:40,884:INFO:                pyod: 2.0.5
2025-06-10 15:53:40,884:INFO:            imblearn: 0.13.0
2025-06-10 15:53:40,885:INFO:   category_encoders: 2.7.0
2025-06-10 15:53:40,885:INFO:            lightgbm: 4.6.0
2025-06-10 15:53:40,885:INFO:               numba: 0.61.2
2025-06-10 15:53:40,885:INFO:            requests: 2.31.0
2025-06-10 15:53:40,885:INFO:          matplotlib: 3.5.3
2025-06-10 15:53:40,885:INFO:          scikitplot: 0.3.7
2025-06-10 15:53:40,885:INFO:         yellowbrick: 1.5
2025-06-10 15:53:40,885:INFO:              plotly: 5.24.1
2025-06-10 15:53:40,885:INFO:    plotly-resampler: Not installed
2025-06-10 15:53:40,885:INFO:             kaleido: 0.2.1
2025-06-10 15:53:40,885:INFO:           schemdraw: 0.15
2025-06-10 15:53:40,885:INFO:         statsmodels: 0.14.4
2025-06-10 15:53:40,885:INFO:              sktime: 0.26.0
2025-06-10 15:53:40,885:INFO:               tbats: 1.1.3
2025-06-10 15:53:40,885:INFO:            pmdarima: 2.0.4
2025-06-10 15:53:40,885:INFO:              psutil: 5.9.1
2025-06-10 15:53:40,885:INFO:          markupsafe: 2.1.1
2025-06-10 15:53:40,885:INFO:             pickle5: Not installed
2025-06-10 15:53:40,885:INFO:         cloudpickle: 3.1.1
2025-06-10 15:53:40,885:INFO:         deprecation: 2.1.0
2025-06-10 15:53:40,885:INFO:              xxhash: 3.5.0
2025-06-10 15:53:40,885:INFO:           wurlitzer: Not installed
2025-06-10 15:53:40,885:INFO:PyCaret optional dependencies:
2025-06-10 15:53:40,899:INFO:                shap: Not installed
2025-06-10 15:53:40,899:INFO:           interpret: Not installed
2025-06-10 15:53:40,899:INFO:                umap: Not installed
2025-06-10 15:53:40,899:INFO:     ydata_profiling: Not installed
2025-06-10 15:53:40,899:INFO:  explainerdashboard: Not installed
2025-06-10 15:53:40,899:INFO:             autoviz: Not installed
2025-06-10 15:53:40,899:INFO:           fairlearn: Not installed
2025-06-10 15:53:40,899:INFO:          deepchecks: Not installed
2025-06-10 15:53:40,899:INFO:             xgboost: Not installed
2025-06-10 15:53:40,899:INFO:            catboost: Not installed
2025-06-10 15:53:40,900:INFO:              kmodes: Not installed
2025-06-10 15:53:40,900:INFO:             mlxtend: Not installed
2025-06-10 15:53:40,900:INFO:       statsforecast: Not installed
2025-06-10 15:53:40,900:INFO:        tune_sklearn: Not installed
2025-06-10 15:53:40,900:INFO:                 ray: Not installed
2025-06-10 15:53:40,900:INFO:            hyperopt: Not installed
2025-06-10 15:53:40,900:INFO:              optuna: Not installed
2025-06-10 15:53:40,900:INFO:               skopt: Not installed
2025-06-10 15:53:40,900:INFO:              mlflow: Not installed
2025-06-10 15:53:40,900:INFO:              gradio: Not installed
2025-06-10 15:53:40,900:INFO:             fastapi: Not installed
2025-06-10 15:53:40,900:INFO:             uvicorn: Not installed
2025-06-10 15:53:40,900:INFO:              m2cgen: Not installed
2025-06-10 15:53:40,900:INFO:           evidently: Not installed
2025-06-10 15:53:40,900:INFO:               fugue: Not installed
2025-06-10 15:53:40,900:INFO:           streamlit: 1.45.1
2025-06-10 15:53:40,900:INFO:             prophet: Not installed
2025-06-10 15:53:40,900:INFO:None
2025-06-10 15:53:40,900:INFO:Set up data.
2025-06-10 15:53:41,065:INFO:Set up folding strategy.
2025-06-10 15:53:41,065:INFO:Set up train/test split.
2025-06-10 15:53:41,150:INFO:Set up index.
2025-06-10 15:53:41,156:INFO:Assigning column types.
2025-06-10 15:53:41,215:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 15:53:41,215:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,220:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,225:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,353:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,357:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,361:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,476:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 15:53:41,480:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,483:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,561:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,607:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,683:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,719:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 15:53:41,727:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,804:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,840:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,848:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,930:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,966:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:41,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:41,967:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 15:53:42,050:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,086:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,172:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,210:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 15:53:42,293:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 15:53:42,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,453:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 15:53:42,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:42,698:INFO:Preparing preprocessing pipeline...
2025-06-10 15:53:42,698:INFO:Set up simple imputation.
2025-06-10 15:53:42,722:INFO:Set up encoding of categorical features.
2025-06-10 15:53:42,837:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 15:53:43,436:INFO:Finished creating preprocessing pipeline.
2025-06-10 15:53:43,443:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 15:53:43,443:INFO:Creating final display dataframe.
2025-06-10 15:53:43,525:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 15:53:44,076:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 15:53:44,437:INFO:Setup _display_container:                     Description             Value
0                    Session id              6579
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              82cd
2025-06-10 15:53:44,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:44,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:44,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:44,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 15:53:44,688:INFO:setup() successfully completed in 3.93s...............
2025-06-10 15:53:53,552:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:53:56,997:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:54:10,737:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:54:15,688:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:54:21,986:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:54:22,233:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 15:54:29,219:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:59:44,945:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:59:54,404:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 15:59:54,651:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 15:59:59,437:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:00:02,597:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:00:05,356:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:00:05,449:INFO:PyCaret RegressionExperiment
2025-06-10 16:00:05,449:INFO:Logging name: reg-default-name
2025-06-10 16:00:05,449:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:00:05,449:INFO:version 3.3.2
2025-06-10 16:00:05,449:INFO:Initializing setup()
2025-06-10 16:00:05,449:INFO:self.USI: acb6
2025-06-10 16:00:05,450:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:00:05,450:INFO:Checking environment
2025-06-10 16:00:05,450:INFO:python_version: 3.10.6
2025-06-10 16:00:05,450:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:00:05,450:INFO:machine: AMD64
2025-06-10 16:00:05,450:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:00:05,451:INFO:Memory: svmem(total=8416440320, available=722239488, percent=91.4, used=7694200832, free=722239488)
2025-06-10 16:00:05,451:INFO:Physical Core: 8
2025-06-10 16:00:05,451:INFO:Logical Core: 16
2025-06-10 16:00:05,452:INFO:Checking libraries
2025-06-10 16:00:05,452:INFO:System:
2025-06-10 16:00:05,452:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:00:05,452:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:00:05,453:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:00:05,453:INFO:PyCaret required dependencies:
2025-06-10 16:00:05,453:INFO:                 pip: 23.1.2
2025-06-10 16:00:05,453:INFO:          setuptools: 63.2.0
2025-06-10 16:00:05,453:INFO:             pycaret: 3.3.2
2025-06-10 16:00:05,453:INFO:             IPython: 8.4.0
2025-06-10 16:00:05,453:INFO:          ipywidgets: 8.0.6
2025-06-10 16:00:05,453:INFO:                tqdm: 4.65.0
2025-06-10 16:00:05,454:INFO:               numpy: 1.26.4
2025-06-10 16:00:05,454:INFO:              pandas: 1.4.4
2025-06-10 16:00:05,454:INFO:              jinja2: 3.1.2
2025-06-10 16:00:05,454:INFO:               scipy: 1.11.0
2025-06-10 16:00:05,454:INFO:              joblib: 1.3.2
2025-06-10 16:00:05,454:INFO:             sklearn: 1.4.2
2025-06-10 16:00:05,454:INFO:                pyod: 2.0.5
2025-06-10 16:00:05,454:INFO:            imblearn: 0.13.0
2025-06-10 16:00:05,454:INFO:   category_encoders: 2.7.0
2025-06-10 16:00:05,454:INFO:            lightgbm: 4.6.0
2025-06-10 16:00:05,455:INFO:               numba: 0.61.2
2025-06-10 16:00:05,455:INFO:            requests: 2.31.0
2025-06-10 16:00:05,455:INFO:          matplotlib: 3.5.3
2025-06-10 16:00:05,455:INFO:          scikitplot: 0.3.7
2025-06-10 16:00:05,455:INFO:         yellowbrick: 1.5
2025-06-10 16:00:05,455:INFO:              plotly: 5.24.1
2025-06-10 16:00:05,455:INFO:    plotly-resampler: Not installed
2025-06-10 16:00:05,455:INFO:             kaleido: 0.2.1
2025-06-10 16:00:05,455:INFO:           schemdraw: 0.15
2025-06-10 16:00:05,456:INFO:         statsmodels: 0.14.4
2025-06-10 16:00:05,456:INFO:              sktime: 0.26.0
2025-06-10 16:00:05,456:INFO:               tbats: 1.1.3
2025-06-10 16:00:05,456:INFO:            pmdarima: 2.0.4
2025-06-10 16:00:05,456:INFO:              psutil: 5.9.1
2025-06-10 16:00:05,456:INFO:          markupsafe: 2.1.1
2025-06-10 16:00:05,456:INFO:             pickle5: Not installed
2025-06-10 16:00:05,456:INFO:         cloudpickle: 3.1.1
2025-06-10 16:00:05,456:INFO:         deprecation: 2.1.0
2025-06-10 16:00:05,456:INFO:              xxhash: 3.5.0
2025-06-10 16:00:05,456:INFO:           wurlitzer: Not installed
2025-06-10 16:00:05,456:INFO:PyCaret optional dependencies:
2025-06-10 16:00:05,457:INFO:                shap: Not installed
2025-06-10 16:00:05,457:INFO:           interpret: Not installed
2025-06-10 16:00:05,457:INFO:                umap: Not installed
2025-06-10 16:00:05,457:INFO:     ydata_profiling: Not installed
2025-06-10 16:00:05,457:INFO:  explainerdashboard: Not installed
2025-06-10 16:00:05,457:INFO:             autoviz: Not installed
2025-06-10 16:00:05,457:INFO:           fairlearn: Not installed
2025-06-10 16:00:05,457:INFO:          deepchecks: Not installed
2025-06-10 16:00:05,457:INFO:             xgboost: Not installed
2025-06-10 16:00:05,457:INFO:            catboost: Not installed
2025-06-10 16:00:05,457:INFO:              kmodes: Not installed
2025-06-10 16:00:05,457:INFO:             mlxtend: Not installed
2025-06-10 16:00:05,458:INFO:       statsforecast: Not installed
2025-06-10 16:00:05,458:INFO:        tune_sklearn: Not installed
2025-06-10 16:00:05,458:INFO:                 ray: Not installed
2025-06-10 16:00:05,458:INFO:            hyperopt: Not installed
2025-06-10 16:00:05,458:INFO:              optuna: Not installed
2025-06-10 16:00:05,458:INFO:               skopt: Not installed
2025-06-10 16:00:05,458:INFO:              mlflow: Not installed
2025-06-10 16:00:05,458:INFO:              gradio: Not installed
2025-06-10 16:00:05,458:INFO:             fastapi: Not installed
2025-06-10 16:00:05,458:INFO:             uvicorn: Not installed
2025-06-10 16:00:05,459:INFO:              m2cgen: Not installed
2025-06-10 16:00:05,459:INFO:           evidently: Not installed
2025-06-10 16:00:05,459:INFO:               fugue: Not installed
2025-06-10 16:00:05,459:INFO:           streamlit: 1.45.1
2025-06-10 16:00:05,459:INFO:             prophet: Not installed
2025-06-10 16:00:05,459:INFO:None
2025-06-10 16:00:05,459:INFO:Set up data.
2025-06-10 16:00:05,603:INFO:Set up folding strategy.
2025-06-10 16:00:05,603:INFO:Set up train/test split.
2025-06-10 16:00:05,672:INFO:Set up index.
2025-06-10 16:00:05,677:INFO:Assigning column types.
2025-06-10 16:00:05,720:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:00:05,720:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,726:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,729:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,831:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:05,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:05,875:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,879:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,883:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:05,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,009:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:00:06,013:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,017:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,153:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,157:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,345:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:00:06,352:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,434:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,479:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,558:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,595:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,596:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:00:06,690:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,853:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:00:06,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:06,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:06,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:00:07,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,116:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:00:07,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:07,388:INFO:Preparing preprocessing pipeline...
2025-06-10 16:00:07,388:INFO:Set up simple imputation.
2025-06-10 16:00:07,414:INFO:Set up encoding of categorical features.
2025-06-10 16:00:07,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:00:08,147:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:00:08,154:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:00:08,154:INFO:Creating final display dataframe.
2025-06-10 16:00:08,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:00:08,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:00:09,121:INFO:Setup _display_container:                     Description             Value
0                    Session id              8309
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              acb6
2025-06-10 16:00:09,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:09,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:09,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:09,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:00:09,369:INFO:setup() successfully completed in 3.93s...............
2025-06-10 16:00:09,369:INFO:Initializing get_config()
2025-06-10 16:00:09,369:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DCFBDF0>, variable=X_train)
2025-06-10 16:00:09,369:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-06-10 16:00:09,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:00:09,416:INFO:Variable:  returned as               Date Precip  WindGustSpd    MaxTemp    MinTemp   MeanTemp Snowfall PoorWeather  YR  MO  DA PRCP  DR  ...  SNF  SND  FT  FB FTI  ITH  PGT  TSHDSBRSGF  SD3  RHX  RHN RVG  WTE
76234    1944-12-4      0          NaN  29.444445  12.777778  21.111111      0.0         NaN  44  12   4    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
112455    1944-3-3      T          NaN  29.444445  22.777779  26.111111      0.0         1.0  44   3   3    T NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         1.0  NaN  NaN  NaN NaN  NaN
116591   1943-6-27      0          NaN  20.000000   5.000000  12.222222      0.0         NaN  43   6  27    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
65630   1944-12-11      0          NaN  26.666666  13.888889  20.000000      0.0         NaN  44  12  11    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
87628   1944-10-21      0          NaN  34.444443  18.888889  26.666666      0.0         NaN  44  10  21    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
...            ...    ...          ...        ...        ...        ...      ...         ...  ..  ..  ..  ...  ..  ...  ...  ...  ..  ..  ..  ...  ...         ...  ...  ...  ...  ..  ...
86314     1945-5-3      0          NaN  30.555555  14.444445  22.222221      0.0         NaN  45   5   3    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
116692   1943-10-6      0          NaN  24.444445  10.000000  17.222221      0.0         NaN  43  10   6    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
88221   1944-11-13      0          NaN  25.555555  10.000000  17.777779      0.0         NaN  44  11  13    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
14219     1943-3-5      0          NaN  36.111111  19.444445  27.777779      0.0         NaN  43   3   5    0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
58845    1942-8-26      0          NaN  27.777779  20.000000  23.888889        0         NaN  42   8  26    0 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN

[83328 rows x 30 columns]
2025-06-10 16:00:09,416:INFO:get_config() successfully completed......................................
2025-06-10 16:00:09,416:INFO:Initializing get_config()
2025-06-10 16:00:09,416:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DCFBDF0>, variable=y_train)
2025-06-10 16:00:09,416:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-06-10 16:00:09,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:00:09,431:INFO:Variable:  returned as 76234     32815
112455    81601
116591    82501
65630     31701
87628     33401
          ...  
86314     33303
116692    82501
88221     33405
14219     10803
58845     22508
Name: STA, Length: 83328, dtype: int32
2025-06-10 16:00:09,431:INFO:get_config() successfully completed......................................
2025-06-10 16:01:45,551:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:01:53,009:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:01:53,268:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:01:56,598:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:01:57,691:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:01:59,366:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:01:59,487:INFO:PyCaret RegressionExperiment
2025-06-10 16:01:59,487:INFO:Logging name: reg-default-name
2025-06-10 16:01:59,487:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:01:59,487:INFO:version 3.3.2
2025-06-10 16:01:59,488:INFO:Initializing setup()
2025-06-10 16:01:59,488:INFO:self.USI: 1b9f
2025-06-10 16:01:59,488:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:01:59,488:INFO:Checking environment
2025-06-10 16:01:59,488:INFO:python_version: 3.10.6
2025-06-10 16:01:59,488:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:01:59,488:INFO:machine: AMD64
2025-06-10 16:01:59,488:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:01:59,488:INFO:Memory: svmem(total=8416440320, available=718151680, percent=91.5, used=7698288640, free=718151680)
2025-06-10 16:01:59,488:INFO:Physical Core: 8
2025-06-10 16:01:59,488:INFO:Logical Core: 16
2025-06-10 16:01:59,488:INFO:Checking libraries
2025-06-10 16:01:59,489:INFO:System:
2025-06-10 16:01:59,489:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:01:59,489:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:01:59,489:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:01:59,489:INFO:PyCaret required dependencies:
2025-06-10 16:01:59,489:INFO:                 pip: 23.1.2
2025-06-10 16:01:59,489:INFO:          setuptools: 63.2.0
2025-06-10 16:01:59,490:INFO:             pycaret: 3.3.2
2025-06-10 16:01:59,490:INFO:             IPython: 8.4.0
2025-06-10 16:01:59,490:INFO:          ipywidgets: 8.0.6
2025-06-10 16:01:59,490:INFO:                tqdm: 4.65.0
2025-06-10 16:01:59,490:INFO:               numpy: 1.26.4
2025-06-10 16:01:59,490:INFO:              pandas: 1.4.4
2025-06-10 16:01:59,490:INFO:              jinja2: 3.1.2
2025-06-10 16:01:59,490:INFO:               scipy: 1.11.0
2025-06-10 16:01:59,490:INFO:              joblib: 1.3.2
2025-06-10 16:01:59,490:INFO:             sklearn: 1.4.2
2025-06-10 16:01:59,490:INFO:                pyod: 2.0.5
2025-06-10 16:01:59,490:INFO:            imblearn: 0.13.0
2025-06-10 16:01:59,490:INFO:   category_encoders: 2.7.0
2025-06-10 16:01:59,490:INFO:            lightgbm: 4.6.0
2025-06-10 16:01:59,490:INFO:               numba: 0.61.2
2025-06-10 16:01:59,490:INFO:            requests: 2.31.0
2025-06-10 16:01:59,490:INFO:          matplotlib: 3.5.3
2025-06-10 16:01:59,490:INFO:          scikitplot: 0.3.7
2025-06-10 16:01:59,490:INFO:         yellowbrick: 1.5
2025-06-10 16:01:59,490:INFO:              plotly: 5.24.1
2025-06-10 16:01:59,490:INFO:    plotly-resampler: Not installed
2025-06-10 16:01:59,490:INFO:             kaleido: 0.2.1
2025-06-10 16:01:59,490:INFO:           schemdraw: 0.15
2025-06-10 16:01:59,490:INFO:         statsmodels: 0.14.4
2025-06-10 16:01:59,490:INFO:              sktime: 0.26.0
2025-06-10 16:01:59,490:INFO:               tbats: 1.1.3
2025-06-10 16:01:59,491:INFO:            pmdarima: 2.0.4
2025-06-10 16:01:59,491:INFO:              psutil: 5.9.1
2025-06-10 16:01:59,491:INFO:          markupsafe: 2.1.1
2025-06-10 16:01:59,491:INFO:             pickle5: Not installed
2025-06-10 16:01:59,491:INFO:         cloudpickle: 3.1.1
2025-06-10 16:01:59,491:INFO:         deprecation: 2.1.0
2025-06-10 16:01:59,491:INFO:              xxhash: 3.5.0
2025-06-10 16:01:59,491:INFO:           wurlitzer: Not installed
2025-06-10 16:01:59,491:INFO:PyCaret optional dependencies:
2025-06-10 16:01:59,491:INFO:                shap: Not installed
2025-06-10 16:01:59,491:INFO:           interpret: Not installed
2025-06-10 16:01:59,491:INFO:                umap: Not installed
2025-06-10 16:01:59,491:INFO:     ydata_profiling: Not installed
2025-06-10 16:01:59,491:INFO:  explainerdashboard: Not installed
2025-06-10 16:01:59,491:INFO:             autoviz: Not installed
2025-06-10 16:01:59,491:INFO:           fairlearn: Not installed
2025-06-10 16:01:59,491:INFO:          deepchecks: Not installed
2025-06-10 16:01:59,491:INFO:             xgboost: Not installed
2025-06-10 16:01:59,491:INFO:            catboost: Not installed
2025-06-10 16:01:59,491:INFO:              kmodes: Not installed
2025-06-10 16:01:59,491:INFO:             mlxtend: Not installed
2025-06-10 16:01:59,491:INFO:       statsforecast: Not installed
2025-06-10 16:01:59,491:INFO:        tune_sklearn: Not installed
2025-06-10 16:01:59,491:INFO:                 ray: Not installed
2025-06-10 16:01:59,491:INFO:            hyperopt: Not installed
2025-06-10 16:01:59,491:INFO:              optuna: Not installed
2025-06-10 16:01:59,492:INFO:               skopt: Not installed
2025-06-10 16:01:59,492:INFO:              mlflow: Not installed
2025-06-10 16:01:59,492:INFO:              gradio: Not installed
2025-06-10 16:01:59,492:INFO:             fastapi: Not installed
2025-06-10 16:01:59,492:INFO:             uvicorn: Not installed
2025-06-10 16:01:59,492:INFO:              m2cgen: Not installed
2025-06-10 16:01:59,492:INFO:           evidently: Not installed
2025-06-10 16:01:59,492:INFO:               fugue: Not installed
2025-06-10 16:01:59,492:INFO:           streamlit: 1.45.1
2025-06-10 16:01:59,492:INFO:             prophet: Not installed
2025-06-10 16:01:59,492:INFO:None
2025-06-10 16:01:59,492:INFO:Set up data.
2025-06-10 16:01:59,641:INFO:Set up folding strategy.
2025-06-10 16:01:59,641:INFO:Set up train/test split.
2025-06-10 16:01:59,700:INFO:Set up index.
2025-06-10 16:01:59,705:INFO:Assigning column types.
2025-06-10 16:01:59,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:01:59,746:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,750:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,869:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:01:59,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:01:59,870:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,874:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,877:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,960:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:01:59,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:01:59,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:01:59,998:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:02:00,002:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,093:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,140:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,145:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,277:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:02:00,286:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,414:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,424:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,511:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,555:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:02:00,652:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,696:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,697:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,839:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,840:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:02:00,944:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:00,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:00,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:01,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,120:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:02:01,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:01,403:INFO:Preparing preprocessing pipeline...
2025-06-10 16:02:01,403:INFO:Set up simple imputation.
2025-06-10 16:02:01,429:INFO:Set up encoding of categorical features.
2025-06-10 16:02:01,587:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:02:01,959:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:02:02,226:INFO:PyCaret RegressionExperiment
2025-06-10 16:02:02,226:INFO:Logging name: reg-default-name
2025-06-10 16:02:02,226:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:02:02,226:INFO:version 3.3.2
2025-06-10 16:02:02,226:INFO:Initializing setup()
2025-06-10 16:02:02,226:INFO:self.USI: c5c3
2025-06-10 16:02:02,226:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:02:02,226:INFO:Checking environment
2025-06-10 16:02:02,227:INFO:python_version: 3.10.6
2025-06-10 16:02:02,227:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:02:02,227:INFO:machine: AMD64
2025-06-10 16:02:02,227:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:02:02,228:INFO:Memory: svmem(total=8416440320, available=601890816, percent=92.8, used=7814549504, free=601890816)
2025-06-10 16:02:02,228:INFO:Physical Core: 8
2025-06-10 16:02:02,228:INFO:Logical Core: 16
2025-06-10 16:02:02,228:INFO:Checking libraries
2025-06-10 16:02:02,228:INFO:System:
2025-06-10 16:02:02,228:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:02:02,228:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:02:02,228:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:02:02,228:INFO:PyCaret required dependencies:
2025-06-10 16:02:02,229:INFO:                 pip: 23.1.2
2025-06-10 16:02:02,229:INFO:          setuptools: 63.2.0
2025-06-10 16:02:02,229:INFO:             pycaret: 3.3.2
2025-06-10 16:02:02,229:INFO:             IPython: 8.4.0
2025-06-10 16:02:02,229:INFO:          ipywidgets: 8.0.6
2025-06-10 16:02:02,229:INFO:                tqdm: 4.65.0
2025-06-10 16:02:02,229:INFO:               numpy: 1.26.4
2025-06-10 16:02:02,229:INFO:              pandas: 1.4.4
2025-06-10 16:02:02,229:INFO:              jinja2: 3.1.2
2025-06-10 16:02:02,229:INFO:               scipy: 1.11.0
2025-06-10 16:02:02,229:INFO:              joblib: 1.3.2
2025-06-10 16:02:02,229:INFO:             sklearn: 1.4.2
2025-06-10 16:02:02,229:INFO:                pyod: 2.0.5
2025-06-10 16:02:02,229:INFO:            imblearn: 0.13.0
2025-06-10 16:02:02,230:INFO:   category_encoders: 2.7.0
2025-06-10 16:02:02,230:INFO:            lightgbm: 4.6.0
2025-06-10 16:02:02,230:INFO:               numba: 0.61.2
2025-06-10 16:02:02,230:INFO:            requests: 2.31.0
2025-06-10 16:02:02,230:INFO:          matplotlib: 3.5.3
2025-06-10 16:02:02,230:INFO:          scikitplot: 0.3.7
2025-06-10 16:02:02,230:INFO:         yellowbrick: 1.5
2025-06-10 16:02:02,230:INFO:              plotly: 5.24.1
2025-06-10 16:02:02,230:INFO:    plotly-resampler: Not installed
2025-06-10 16:02:02,230:INFO:             kaleido: 0.2.1
2025-06-10 16:02:02,230:INFO:           schemdraw: 0.15
2025-06-10 16:02:02,230:INFO:         statsmodels: 0.14.4
2025-06-10 16:02:02,230:INFO:              sktime: 0.26.0
2025-06-10 16:02:02,230:INFO:               tbats: 1.1.3
2025-06-10 16:02:02,230:INFO:            pmdarima: 2.0.4
2025-06-10 16:02:02,230:INFO:              psutil: 5.9.1
2025-06-10 16:02:02,231:INFO:          markupsafe: 2.1.1
2025-06-10 16:02:02,232:INFO:             pickle5: Not installed
2025-06-10 16:02:02,232:INFO:         cloudpickle: 3.1.1
2025-06-10 16:02:02,232:INFO:         deprecation: 2.1.0
2025-06-10 16:02:02,232:INFO:              xxhash: 3.5.0
2025-06-10 16:02:02,232:INFO:           wurlitzer: Not installed
2025-06-10 16:02:02,232:INFO:PyCaret optional dependencies:
2025-06-10 16:02:02,232:INFO:                shap: Not installed
2025-06-10 16:02:02,232:INFO:           interpret: Not installed
2025-06-10 16:02:02,232:INFO:                umap: Not installed
2025-06-10 16:02:02,232:INFO:     ydata_profiling: Not installed
2025-06-10 16:02:02,232:INFO:  explainerdashboard: Not installed
2025-06-10 16:02:02,232:INFO:             autoviz: Not installed
2025-06-10 16:02:02,232:INFO:           fairlearn: Not installed
2025-06-10 16:02:02,232:INFO:          deepchecks: Not installed
2025-06-10 16:02:02,232:INFO:             xgboost: Not installed
2025-06-10 16:02:02,232:INFO:            catboost: Not installed
2025-06-10 16:02:02,233:INFO:              kmodes: Not installed
2025-06-10 16:02:02,233:INFO:             mlxtend: Not installed
2025-06-10 16:02:02,233:INFO:       statsforecast: Not installed
2025-06-10 16:02:02,233:INFO:        tune_sklearn: Not installed
2025-06-10 16:02:02,233:INFO:                 ray: Not installed
2025-06-10 16:02:02,233:INFO:            hyperopt: Not installed
2025-06-10 16:02:02,233:INFO:              optuna: Not installed
2025-06-10 16:02:02,233:INFO:               skopt: Not installed
2025-06-10 16:02:02,233:INFO:              mlflow: Not installed
2025-06-10 16:02:02,233:INFO:              gradio: Not installed
2025-06-10 16:02:02,233:INFO:             fastapi: Not installed
2025-06-10 16:02:02,234:INFO:             uvicorn: Not installed
2025-06-10 16:02:02,234:INFO:              m2cgen: Not installed
2025-06-10 16:02:02,234:INFO:           evidently: Not installed
2025-06-10 16:02:02,234:INFO:               fugue: Not installed
2025-06-10 16:02:02,234:INFO:           streamlit: 1.45.1
2025-06-10 16:02:02,234:INFO:             prophet: Not installed
2025-06-10 16:02:02,234:INFO:None
2025-06-10 16:02:02,234:INFO:Set up data.
2025-06-10 16:02:02,400:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:02:02,407:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:02:02,407:INFO:Creating final display dataframe.
2025-06-10 16:02:02,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:02:02,577:INFO:Set up folding strategy.
2025-06-10 16:02:02,578:INFO:Set up train/test split.
2025-06-10 16:02:02,780:INFO:Set up index.
2025-06-10 16:02:02,785:INFO:Assigning column types.
2025-06-10 16:02:02,910:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:02:02,910:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:02:02,914:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:02,919:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,070:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,106:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,110:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,113:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,236:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,237:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:02:03,240:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,243:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,355:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,392:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,392:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,396:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,400:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,587:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:02:03,595:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,730:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,774:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,774:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,781:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,876:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,911:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:03,912:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:03,912:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:02:04,016:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,190:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:02:04,211:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:02:04,285:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:02:04,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,489:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:02:04,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:04,822:INFO:Preparing preprocessing pipeline...
2025-06-10 16:02:04,822:INFO:Set up simple imputation.
2025-06-10 16:02:04,882:INFO:Set up encoding of categorical features.
2025-06-10 16:02:05,129:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:02:05,598:INFO:Setup _display_container:                     Description             Value
0                    Session id              1131
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              1b9f
2025-06-10 16:02:05,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:05,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:05,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:05,923:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:05,924:INFO:setup() successfully completed in 6.45s...............
2025-06-10 16:02:06,009:INFO:Initializing get_config()
2025-06-10 16:02:06,009:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DB11120>, variable=X_train)
2025-06-10 16:02:06,009:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-06-10 16:02:06,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:02:06,060:INFO:Variable:  returned as              Date  Precip  WindGustSpd    MaxTemp    MinTemp   MeanTemp Snowfall PoorWeather  YR  MO  DA  PRCP  DR  ...  SNF  SND  FT  FB FTI  ITH  PGT  TSHDSBRSGF  SD3  RHX  RHN RVG  WTE
94961  1945-10-24   15.24          NaN  18.888889  13.888889  16.666666      0.0           1  45  10  24   0.6 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN
26702   1943-5-12   0.508          NaN  33.333332  21.666666  27.777779      0.0         NaN  43   5  12  0.02 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
66668   1943-7-17       0          NaN  30.000000  22.222221  26.111111      0.0         NaN  43   7  17     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
85463    1945-3-1       0          NaN  16.111111   3.333333  10.000000      0.0         NaN  45   3   1     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
24223  1941-10-28   0.508          NaN  29.444445  23.333334  28.888889      0.0         NaN  41  10  28  0.02 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
...           ...     ...          ...        ...        ...        ...      ...         ...  ..  ..  ..   ...  ..  ...  ...  ...  ..  ..  ..  ...  ...         ...  ...  ...  ...  ..  ...
37877   1944-7-15       0          NaN  25.555555  18.333334  22.222221        0         NaN  44   7  15     0 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
15798   1943-10-3       0          NaN  31.111111  21.111111  26.111111      0.0           1  43  10   3     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN
90722   1945-5-19       0          NaN  24.444445  16.666666  20.555555      0.0         NaN  45   5  19     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
99544  1944-11-21       T          NaN  32.222221  23.333334  27.777779      0.0         1.0  44  11  21     T NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         1.0  NaN  NaN  NaN NaN  NaN
59403    1944-3-6  36.576          NaN  23.888889  17.777779  21.111111        0           1  44   3   6  1.44 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN

[83328 rows x 30 columns]
2025-06-10 16:02:06,060:INFO:get_config() successfully completed......................................
2025-06-10 16:02:06,060:INFO:Initializing get_config()
2025-06-10 16:02:06,060:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DB11120>, variable=y_train)
2025-06-10 16:02:06,060:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-06-10 16:02:06,060:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:02:06,079:INFO:Variable:  returned as 94961    34147
26702    11701
66668    32501
85463    33206
24223    11610
         ...  
37877    13002
15798    10804
90722    34017
99544    50303
59403    22508
Name: STA, Length: 83328, dtype: int32
2025-06-10 16:02:06,079:INFO:get_config() successfully completed......................................
2025-06-10 16:02:06,198:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:02:06,212:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:02:06,212:INFO:Creating final display dataframe.
2025-06-10 16:02:07,561:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:02:07,913:INFO:Setup _display_container:                     Description             Value
0                    Session id              2888
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              c5c3
2025-06-10 16:02:08,039:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:08,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:08,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:08,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:02:08,161:INFO:setup() successfully completed in 6.04s...............
2025-06-10 16:02:08,161:INFO:Initializing get_config()
2025-06-10 16:02:08,161:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DB11120>, variable=X_train)
2025-06-10 16:02:08,161:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-06-10 16:02:08,161:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:02:08,203:INFO:Variable:  returned as              Date  Precip  WindGustSpd    MaxTemp    MinTemp   MeanTemp Snowfall PoorWeather  YR  MO  DA  PRCP  DR  ...  SNF  SND  FT  FB FTI  ITH  PGT  TSHDSBRSGF  SD3  RHX  RHN RVG  WTE
94961  1945-10-24   15.24          NaN  18.888889  13.888889  16.666666      0.0           1  45  10  24   0.6 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN
26702   1943-5-12   0.508          NaN  33.333332  21.666666  27.777779      0.0         NaN  43   5  12  0.02 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
66668   1943-7-17       0          NaN  30.000000  22.222221  26.111111      0.0         NaN  43   7  17     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
85463    1945-3-1       0          NaN  16.111111   3.333333  10.000000      0.0         NaN  45   3   1     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
24223  1941-10-28   0.508          NaN  29.444445  23.333334  28.888889      0.0         NaN  41  10  28  0.02 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
...           ...     ...          ...        ...        ...        ...      ...         ...  ..  ..  ..   ...  ..  ...  ...  ...  ..  ..  ..  ...  ...         ...  ...  ...  ...  ..  ...
37877   1944-7-15       0          NaN  25.555555  18.333334  22.222221        0         NaN  44   7  15     0 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
15798   1943-10-3       0          NaN  31.111111  21.111111  26.111111      0.0           1  43  10   3     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN
90722   1945-5-19       0          NaN  24.444445  16.666666  20.555555      0.0         NaN  45   5  19     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
99544  1944-11-21       T          NaN  32.222221  23.333334  27.777779      0.0         1.0  44  11  21     T NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         1.0  NaN  NaN  NaN NaN  NaN
59403    1944-3-6  36.576          NaN  23.888889  17.777779  21.111111        0           1  44   3   6  1.44 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN

[83328 rows x 30 columns]
2025-06-10 16:02:08,203:INFO:get_config() successfully completed......................................
2025-06-10 16:02:08,203:INFO:Initializing get_config()
2025-06-10 16:02:08,203:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721DB11120>, variable=y_train)
2025-06-10 16:02:08,203:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-06-10 16:02:08,203:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:02:08,216:INFO:Variable:  returned as 94961    34147
26702    11701
66668    32501
85463    33206
24223    11610
         ...  
37877    13002
15798    10804
90722    34017
99544    50303
59403    22508
Name: STA, Length: 83328, dtype: int32
2025-06-10 16:02:08,216:INFO:get_config() successfully completed......................................
2025-06-10 16:05:10,841:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:05:16,180:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:05:16,422:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:05:20,050:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:05:22,332:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:05:23,865:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:05:23,966:INFO:PyCaret RegressionExperiment
2025-06-10 16:05:23,966:INFO:Logging name: reg-default-name
2025-06-10 16:05:23,966:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:05:23,966:INFO:version 3.3.2
2025-06-10 16:05:23,966:INFO:Initializing setup()
2025-06-10 16:05:23,966:INFO:self.USI: 3d5c
2025-06-10 16:05:23,966:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:05:23,966:INFO:Checking environment
2025-06-10 16:05:23,966:INFO:python_version: 3.10.6
2025-06-10 16:05:23,966:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:05:23,966:INFO:machine: AMD64
2025-06-10 16:05:23,967:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:05:23,967:INFO:Memory: svmem(total=8416440320, available=564649984, percent=93.3, used=7851790336, free=564649984)
2025-06-10 16:05:23,967:INFO:Physical Core: 8
2025-06-10 16:05:23,967:INFO:Logical Core: 16
2025-06-10 16:05:23,967:INFO:Checking libraries
2025-06-10 16:05:23,967:INFO:System:
2025-06-10 16:05:23,967:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:05:23,967:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:05:23,967:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:05:23,967:INFO:PyCaret required dependencies:
2025-06-10 16:05:23,967:INFO:                 pip: 23.1.2
2025-06-10 16:05:23,967:INFO:          setuptools: 63.2.0
2025-06-10 16:05:23,967:INFO:             pycaret: 3.3.2
2025-06-10 16:05:23,968:INFO:             IPython: 8.4.0
2025-06-10 16:05:23,968:INFO:          ipywidgets: 8.0.6
2025-06-10 16:05:23,968:INFO:                tqdm: 4.65.0
2025-06-10 16:05:23,968:INFO:               numpy: 1.26.4
2025-06-10 16:05:23,968:INFO:              pandas: 1.4.4
2025-06-10 16:05:23,968:INFO:              jinja2: 3.1.2
2025-06-10 16:05:23,968:INFO:               scipy: 1.11.0
2025-06-10 16:05:23,968:INFO:              joblib: 1.3.2
2025-06-10 16:05:23,968:INFO:             sklearn: 1.4.2
2025-06-10 16:05:23,968:INFO:                pyod: 2.0.5
2025-06-10 16:05:23,968:INFO:            imblearn: 0.13.0
2025-06-10 16:05:23,968:INFO:   category_encoders: 2.7.0
2025-06-10 16:05:23,968:INFO:            lightgbm: 4.6.0
2025-06-10 16:05:23,968:INFO:               numba: 0.61.2
2025-06-10 16:05:23,968:INFO:            requests: 2.31.0
2025-06-10 16:05:23,968:INFO:          matplotlib: 3.5.3
2025-06-10 16:05:23,968:INFO:          scikitplot: 0.3.7
2025-06-10 16:05:23,968:INFO:         yellowbrick: 1.5
2025-06-10 16:05:23,968:INFO:              plotly: 5.24.1
2025-06-10 16:05:23,968:INFO:    plotly-resampler: Not installed
2025-06-10 16:05:23,968:INFO:             kaleido: 0.2.1
2025-06-10 16:05:23,968:INFO:           schemdraw: 0.15
2025-06-10 16:05:23,968:INFO:         statsmodels: 0.14.4
2025-06-10 16:05:23,968:INFO:              sktime: 0.26.0
2025-06-10 16:05:23,968:INFO:               tbats: 1.1.3
2025-06-10 16:05:23,968:INFO:            pmdarima: 2.0.4
2025-06-10 16:05:23,969:INFO:              psutil: 5.9.1
2025-06-10 16:05:23,969:INFO:          markupsafe: 2.1.1
2025-06-10 16:05:23,969:INFO:             pickle5: Not installed
2025-06-10 16:05:23,969:INFO:         cloudpickle: 3.1.1
2025-06-10 16:05:23,969:INFO:         deprecation: 2.1.0
2025-06-10 16:05:23,969:INFO:              xxhash: 3.5.0
2025-06-10 16:05:23,969:INFO:           wurlitzer: Not installed
2025-06-10 16:05:23,969:INFO:PyCaret optional dependencies:
2025-06-10 16:05:23,969:INFO:                shap: Not installed
2025-06-10 16:05:23,969:INFO:           interpret: Not installed
2025-06-10 16:05:23,969:INFO:                umap: Not installed
2025-06-10 16:05:23,969:INFO:     ydata_profiling: Not installed
2025-06-10 16:05:23,969:INFO:  explainerdashboard: Not installed
2025-06-10 16:05:23,969:INFO:             autoviz: Not installed
2025-06-10 16:05:23,969:INFO:           fairlearn: Not installed
2025-06-10 16:05:23,969:INFO:          deepchecks: Not installed
2025-06-10 16:05:23,969:INFO:             xgboost: Not installed
2025-06-10 16:05:23,969:INFO:            catboost: Not installed
2025-06-10 16:05:23,969:INFO:              kmodes: Not installed
2025-06-10 16:05:23,969:INFO:             mlxtend: Not installed
2025-06-10 16:05:23,969:INFO:       statsforecast: Not installed
2025-06-10 16:05:23,969:INFO:        tune_sklearn: Not installed
2025-06-10 16:05:23,969:INFO:                 ray: Not installed
2025-06-10 16:05:23,969:INFO:            hyperopt: Not installed
2025-06-10 16:05:23,969:INFO:              optuna: Not installed
2025-06-10 16:05:23,969:INFO:               skopt: Not installed
2025-06-10 16:05:23,969:INFO:              mlflow: Not installed
2025-06-10 16:05:23,970:INFO:              gradio: Not installed
2025-06-10 16:05:23,970:INFO:             fastapi: Not installed
2025-06-10 16:05:23,970:INFO:             uvicorn: Not installed
2025-06-10 16:05:23,970:INFO:              m2cgen: Not installed
2025-06-10 16:05:23,970:INFO:           evidently: Not installed
2025-06-10 16:05:23,970:INFO:               fugue: Not installed
2025-06-10 16:05:23,970:INFO:           streamlit: 1.45.1
2025-06-10 16:05:23,970:INFO:             prophet: Not installed
2025-06-10 16:05:23,970:INFO:None
2025-06-10 16:05:23,970:INFO:Set up data.
2025-06-10 16:05:24,107:INFO:Set up folding strategy.
2025-06-10 16:05:24,107:INFO:Set up train/test split.
2025-06-10 16:05:24,164:INFO:Set up index.
2025-06-10 16:05:24,168:INFO:Assigning column types.
2025-06-10 16:05:24,208:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:05:24,208:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,212:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,216:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,327:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,330:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,334:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,444:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,445:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:05:24,448:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,452:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,535:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,570:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,574:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,578:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,690:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:05:24,697:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,808:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,816:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:24,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,940:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:24,940:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:05:25,023:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,180:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:05:25,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,299:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,299:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:05:25,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,419:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:05:25,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:25,662:INFO:Preparing preprocessing pipeline...
2025-06-10 16:05:25,662:INFO:Set up simple imputation.
2025-06-10 16:05:25,684:INFO:Set up encoding of categorical features.
2025-06-10 16:05:25,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:05:26,343:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:05:26,349:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:05:26,349:INFO:Creating final display dataframe.
2025-06-10 16:05:26,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:05:26,954:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:05:27,303:INFO:Setup _display_container:                     Description             Value
0                    Session id              2217
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              3d5c
2025-06-10 16:05:27,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:27,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:27,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:27,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:05:27,548:INFO:setup() successfully completed in 3.6s...............
2025-06-10 16:05:27,549:INFO:Initializing get_config()
2025-06-10 16:05:27,549:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721B7CAEC0>, variable=X_train)
2025-06-10 16:05:27,549:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-06-10 16:05:27,549:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:05:27,591:INFO:Variable:  returned as               Date Precip  WindGustSpd    MaxTemp    MinTemp   MeanTemp Snowfall PoorWeather  YR  MO  DA  PRCP  DR  ...  SNF  SND  FT  FB FTI  ITH  PGT  TSHDSBRSGF  SD3  RHX  RHN RVG  WTE
43386    1944-1-29  6.604          NaN   2.222222  -5.555555  -1.666667    20.32           1  44   1  29  0.26 NaN  ...  0.8  NaN NaN NaN NaN  NaN  NaN           1  NaN  NaN  NaN NaN  NaN
78500    1944-1-14  0.762          NaN  22.222221  12.222222  17.222221      0.0         NaN  44   1  14  0.03 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
2991      1943-3-4      0          NaN  33.888889  23.333334  28.888889      0.0         NaN  43   3   4     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
102348   1944-3-24  8.382          NaN  28.888889  21.666666  25.555555      0.0         1.0  44   3  24  0.33 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         1.0  NaN  NaN  NaN NaN  NaN
79154    1944-8-11  8.636          NaN  28.888889  21.111111  25.000000      0.0         NaN  44   8  11  0.34 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
...            ...    ...          ...        ...        ...        ...      ...         ...  ..  ..  ..   ...  ..  ...  ...  ...  ..  ..  ..  ...  ...         ...  ...  ...  ...  ..  ...
6352      1940-3-4  0.254          NaN  32.222221  22.777779  27.777779      0.0         NaN  40   3   4  0.01 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
16819   1943-10-27      T          NaN  21.111111  15.555555  18.333334      0.0         NaN  43  10  27     T NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
67396    1944-4-29      0          NaN  35.000000  23.333334  28.888889      0.0         NaN  44   4  29     0 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
18473    1944-9-15  1.524          NaN  31.666666  23.333334  27.777779      0.0         NaN  44   9  15  0.06 NaN  ...  0.0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN
53976    1944-7-23      0          NaN  28.333334  20.555555  24.444445        0         NaN  44   7  23     0 NaN  ...    0  NaN NaN NaN NaN  NaN  NaN         NaN  NaN  NaN  NaN NaN  NaN

[83328 rows x 30 columns]
2025-06-10 16:05:27,591:INFO:get_config() successfully completed......................................
2025-06-10 16:05:27,591:INFO:Initializing get_config()
2025-06-10 16:05:27,591:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001721B7CAEC0>, variable=y_train)
2025-06-10 16:05:27,591:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-06-10 16:05:27,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-06-10 16:05:27,604:INFO:Variable:  returned as 43386     16201
78500     32907
2991      10102
102348    50403
79154     33003
          ...  
6352      10701
16819     10806
67396     32503
18473     11103
53976     22502
Name: STA, Length: 83328, dtype: int32
2025-06-10 16:05:27,604:INFO:get_config() successfully completed......................................
2025-06-10 16:06:47,870:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:06:53,789:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:06:54,019:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:06:58,092:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:06:59,642:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:01,064:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:01,157:INFO:PyCaret RegressionExperiment
2025-06-10 16:07:01,157:INFO:Logging name: reg-default-name
2025-06-10 16:07:01,157:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:07:01,157:INFO:version 3.3.2
2025-06-10 16:07:01,157:INFO:Initializing setup()
2025-06-10 16:07:01,157:INFO:self.USI: c99f
2025-06-10 16:07:01,157:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:07:01,157:INFO:Checking environment
2025-06-10 16:07:01,157:INFO:python_version: 3.10.6
2025-06-10 16:07:01,157:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:07:01,157:INFO:machine: AMD64
2025-06-10 16:07:01,158:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:07:01,158:INFO:Memory: svmem(total=8416440320, available=696328192, percent=91.7, used=7720112128, free=696328192)
2025-06-10 16:07:01,158:INFO:Physical Core: 8
2025-06-10 16:07:01,159:INFO:Logical Core: 16
2025-06-10 16:07:01,159:INFO:Checking libraries
2025-06-10 16:07:01,159:INFO:System:
2025-06-10 16:07:01,159:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:07:01,159:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:07:01,159:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:07:01,159:INFO:PyCaret required dependencies:
2025-06-10 16:07:01,159:INFO:                 pip: 23.1.2
2025-06-10 16:07:01,159:INFO:          setuptools: 63.2.0
2025-06-10 16:07:01,159:INFO:             pycaret: 3.3.2
2025-06-10 16:07:01,159:INFO:             IPython: 8.4.0
2025-06-10 16:07:01,159:INFO:          ipywidgets: 8.0.6
2025-06-10 16:07:01,159:INFO:                tqdm: 4.65.0
2025-06-10 16:07:01,159:INFO:               numpy: 1.26.4
2025-06-10 16:07:01,159:INFO:              pandas: 1.4.4
2025-06-10 16:07:01,159:INFO:              jinja2: 3.1.2
2025-06-10 16:07:01,159:INFO:               scipy: 1.11.0
2025-06-10 16:07:01,159:INFO:              joblib: 1.3.2
2025-06-10 16:07:01,159:INFO:             sklearn: 1.4.2
2025-06-10 16:07:01,159:INFO:                pyod: 2.0.5
2025-06-10 16:07:01,159:INFO:            imblearn: 0.13.0
2025-06-10 16:07:01,160:INFO:   category_encoders: 2.7.0
2025-06-10 16:07:01,160:INFO:            lightgbm: 4.6.0
2025-06-10 16:07:01,160:INFO:               numba: 0.61.2
2025-06-10 16:07:01,160:INFO:            requests: 2.31.0
2025-06-10 16:07:01,160:INFO:          matplotlib: 3.5.3
2025-06-10 16:07:01,160:INFO:          scikitplot: 0.3.7
2025-06-10 16:07:01,160:INFO:         yellowbrick: 1.5
2025-06-10 16:07:01,160:INFO:              plotly: 5.24.1
2025-06-10 16:07:01,160:INFO:    plotly-resampler: Not installed
2025-06-10 16:07:01,160:INFO:             kaleido: 0.2.1
2025-06-10 16:07:01,160:INFO:           schemdraw: 0.15
2025-06-10 16:07:01,160:INFO:         statsmodels: 0.14.4
2025-06-10 16:07:01,160:INFO:              sktime: 0.26.0
2025-06-10 16:07:01,160:INFO:               tbats: 1.1.3
2025-06-10 16:07:01,160:INFO:            pmdarima: 2.0.4
2025-06-10 16:07:01,160:INFO:              psutil: 5.9.1
2025-06-10 16:07:01,160:INFO:          markupsafe: 2.1.1
2025-06-10 16:07:01,160:INFO:             pickle5: Not installed
2025-06-10 16:07:01,160:INFO:         cloudpickle: 3.1.1
2025-06-10 16:07:01,160:INFO:         deprecation: 2.1.0
2025-06-10 16:07:01,160:INFO:              xxhash: 3.5.0
2025-06-10 16:07:01,160:INFO:           wurlitzer: Not installed
2025-06-10 16:07:01,160:INFO:PyCaret optional dependencies:
2025-06-10 16:07:01,160:INFO:                shap: Not installed
2025-06-10 16:07:01,160:INFO:           interpret: Not installed
2025-06-10 16:07:01,160:INFO:                umap: Not installed
2025-06-10 16:07:01,160:INFO:     ydata_profiling: Not installed
2025-06-10 16:07:01,160:INFO:  explainerdashboard: Not installed
2025-06-10 16:07:01,161:INFO:             autoviz: Not installed
2025-06-10 16:07:01,161:INFO:           fairlearn: Not installed
2025-06-10 16:07:01,161:INFO:          deepchecks: Not installed
2025-06-10 16:07:01,161:INFO:             xgboost: Not installed
2025-06-10 16:07:01,161:INFO:            catboost: Not installed
2025-06-10 16:07:01,161:INFO:              kmodes: Not installed
2025-06-10 16:07:01,161:INFO:             mlxtend: Not installed
2025-06-10 16:07:01,161:INFO:       statsforecast: Not installed
2025-06-10 16:07:01,161:INFO:        tune_sklearn: Not installed
2025-06-10 16:07:01,161:INFO:                 ray: Not installed
2025-06-10 16:07:01,161:INFO:            hyperopt: Not installed
2025-06-10 16:07:01,161:INFO:              optuna: Not installed
2025-06-10 16:07:01,161:INFO:               skopt: Not installed
2025-06-10 16:07:01,161:INFO:              mlflow: Not installed
2025-06-10 16:07:01,161:INFO:              gradio: Not installed
2025-06-10 16:07:01,161:INFO:             fastapi: Not installed
2025-06-10 16:07:01,161:INFO:             uvicorn: Not installed
2025-06-10 16:07:01,161:INFO:              m2cgen: Not installed
2025-06-10 16:07:01,161:INFO:           evidently: Not installed
2025-06-10 16:07:01,161:INFO:               fugue: Not installed
2025-06-10 16:07:01,161:INFO:           streamlit: 1.45.1
2025-06-10 16:07:01,161:INFO:             prophet: Not installed
2025-06-10 16:07:01,161:INFO:None
2025-06-10 16:07:01,161:INFO:Set up data.
2025-06-10 16:07:01,298:INFO:Set up folding strategy.
2025-06-10 16:07:01,298:INFO:Set up train/test split.
2025-06-10 16:07:01,351:INFO:Set up index.
2025-06-10 16:07:01,355:INFO:Assigning column types.
2025-06-10 16:07:01,396:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:07:01,396:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,400:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,404:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,476:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,514:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,518:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,521:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,633:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,633:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:07:01,637:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,640:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,727:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,768:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,772:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,848:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,885:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:01,885:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:07:01,893:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:01,974:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,011:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,095:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,132:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:07:02,215:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,339:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,379:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:07:02,461:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,588:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:02,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,625:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:07:02,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,862:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:02,863:INFO:Preparing preprocessing pipeline...
2025-06-10 16:07:02,863:INFO:Set up simple imputation.
2025-06-10 16:07:02,883:INFO:Set up encoding of categorical features.
2025-06-10 16:07:02,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:03,541:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:07:03,546:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:07:03,546:INFO:Creating final display dataframe.
2025-06-10 16:07:03,626:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:04,172:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:04,524:INFO:Setup _display_container:                     Description             Value
0                    Session id              5855
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              c99f
2025-06-10 16:07:04,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:04,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:04,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:04,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:04,769:INFO:setup() successfully completed in 3.63s...............
2025-06-10 16:07:42,061:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:47,931:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:48,173:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:07:51,927:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:53,039:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:54,411:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:07:54,518:INFO:PyCaret RegressionExperiment
2025-06-10 16:07:54,518:INFO:Logging name: reg-default-name
2025-06-10 16:07:54,518:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:07:54,518:INFO:version 3.3.2
2025-06-10 16:07:54,518:INFO:Initializing setup()
2025-06-10 16:07:54,518:INFO:self.USI: e736
2025-06-10 16:07:54,518:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:07:54,518:INFO:Checking environment
2025-06-10 16:07:54,518:INFO:python_version: 3.10.6
2025-06-10 16:07:54,518:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:07:54,518:INFO:machine: AMD64
2025-06-10 16:07:54,518:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:07:54,518:INFO:Memory: svmem(total=8416440320, available=567427072, percent=93.3, used=7849013248, free=567427072)
2025-06-10 16:07:54,518:INFO:Physical Core: 8
2025-06-10 16:07:54,518:INFO:Logical Core: 16
2025-06-10 16:07:54,518:INFO:Checking libraries
2025-06-10 16:07:54,518:INFO:System:
2025-06-10 16:07:54,518:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:07:54,519:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:07:54,519:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:07:54,519:INFO:PyCaret required dependencies:
2025-06-10 16:07:54,519:INFO:                 pip: 23.1.2
2025-06-10 16:07:54,519:INFO:          setuptools: 63.2.0
2025-06-10 16:07:54,519:INFO:             pycaret: 3.3.2
2025-06-10 16:07:54,519:INFO:             IPython: 8.4.0
2025-06-10 16:07:54,519:INFO:          ipywidgets: 8.0.6
2025-06-10 16:07:54,519:INFO:                tqdm: 4.65.0
2025-06-10 16:07:54,519:INFO:               numpy: 1.26.4
2025-06-10 16:07:54,519:INFO:              pandas: 1.4.4
2025-06-10 16:07:54,519:INFO:              jinja2: 3.1.2
2025-06-10 16:07:54,519:INFO:               scipy: 1.11.0
2025-06-10 16:07:54,519:INFO:              joblib: 1.3.2
2025-06-10 16:07:54,519:INFO:             sklearn: 1.4.2
2025-06-10 16:07:54,519:INFO:                pyod: 2.0.5
2025-06-10 16:07:54,519:INFO:            imblearn: 0.13.0
2025-06-10 16:07:54,519:INFO:   category_encoders: 2.7.0
2025-06-10 16:07:54,519:INFO:            lightgbm: 4.6.0
2025-06-10 16:07:54,519:INFO:               numba: 0.61.2
2025-06-10 16:07:54,519:INFO:            requests: 2.31.0
2025-06-10 16:07:54,519:INFO:          matplotlib: 3.5.3
2025-06-10 16:07:54,519:INFO:          scikitplot: 0.3.7
2025-06-10 16:07:54,519:INFO:         yellowbrick: 1.5
2025-06-10 16:07:54,519:INFO:              plotly: 5.24.1
2025-06-10 16:07:54,519:INFO:    plotly-resampler: Not installed
2025-06-10 16:07:54,519:INFO:             kaleido: 0.2.1
2025-06-10 16:07:54,520:INFO:           schemdraw: 0.15
2025-06-10 16:07:54,520:INFO:         statsmodels: 0.14.4
2025-06-10 16:07:54,520:INFO:              sktime: 0.26.0
2025-06-10 16:07:54,520:INFO:               tbats: 1.1.3
2025-06-10 16:07:54,520:INFO:            pmdarima: 2.0.4
2025-06-10 16:07:54,520:INFO:              psutil: 5.9.1
2025-06-10 16:07:54,520:INFO:          markupsafe: 2.1.1
2025-06-10 16:07:54,520:INFO:             pickle5: Not installed
2025-06-10 16:07:54,520:INFO:         cloudpickle: 3.1.1
2025-06-10 16:07:54,520:INFO:         deprecation: 2.1.0
2025-06-10 16:07:54,520:INFO:              xxhash: 3.5.0
2025-06-10 16:07:54,520:INFO:           wurlitzer: Not installed
2025-06-10 16:07:54,520:INFO:PyCaret optional dependencies:
2025-06-10 16:07:54,520:INFO:                shap: Not installed
2025-06-10 16:07:54,520:INFO:           interpret: Not installed
2025-06-10 16:07:54,520:INFO:                umap: Not installed
2025-06-10 16:07:54,520:INFO:     ydata_profiling: Not installed
2025-06-10 16:07:54,520:INFO:  explainerdashboard: Not installed
2025-06-10 16:07:54,520:INFO:             autoviz: Not installed
2025-06-10 16:07:54,520:INFO:           fairlearn: Not installed
2025-06-10 16:07:54,520:INFO:          deepchecks: Not installed
2025-06-10 16:07:54,520:INFO:             xgboost: Not installed
2025-06-10 16:07:54,520:INFO:            catboost: Not installed
2025-06-10 16:07:54,520:INFO:              kmodes: Not installed
2025-06-10 16:07:54,520:INFO:             mlxtend: Not installed
2025-06-10 16:07:54,520:INFO:       statsforecast: Not installed
2025-06-10 16:07:54,520:INFO:        tune_sklearn: Not installed
2025-06-10 16:07:54,520:INFO:                 ray: Not installed
2025-06-10 16:07:54,520:INFO:            hyperopt: Not installed
2025-06-10 16:07:54,521:INFO:              optuna: Not installed
2025-06-10 16:07:54,521:INFO:               skopt: Not installed
2025-06-10 16:07:54,521:INFO:              mlflow: Not installed
2025-06-10 16:07:54,521:INFO:              gradio: Not installed
2025-06-10 16:07:54,521:INFO:             fastapi: Not installed
2025-06-10 16:07:54,521:INFO:             uvicorn: Not installed
2025-06-10 16:07:54,521:INFO:              m2cgen: Not installed
2025-06-10 16:07:54,521:INFO:           evidently: Not installed
2025-06-10 16:07:54,521:INFO:               fugue: Not installed
2025-06-10 16:07:54,521:INFO:           streamlit: 1.45.1
2025-06-10 16:07:54,521:INFO:             prophet: Not installed
2025-06-10 16:07:54,521:INFO:None
2025-06-10 16:07:54,521:INFO:Set up data.
2025-06-10 16:07:54,661:INFO:Set up folding strategy.
2025-06-10 16:07:54,661:INFO:Set up train/test split.
2025-06-10 16:07:54,718:INFO:Set up index.
2025-06-10 16:07:54,722:INFO:Assigning column types.
2025-06-10 16:07:54,764:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:07:54,765:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,769:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,855:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,892:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,893:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:54,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:54,893:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,897:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,900:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:54,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,014:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:07:55,018:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,021:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,096:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,135:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,139:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,248:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:07:55,256:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,331:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,365:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,373:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,483:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:07:55,564:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,678:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,713:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:07:55,796:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,833:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:07:55,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:55,953:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:07:56,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:56,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:56,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:56,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:56,192:INFO:Preparing preprocessing pipeline...
2025-06-10 16:07:56,193:INFO:Set up simple imputation.
2025-06-10 16:07:56,212:INFO:Set up encoding of categorical features.
2025-06-10 16:07:56,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:56,865:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:07:56,871:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:07:56,871:INFO:Creating final display dataframe.
2025-06-10 16:07:56,951:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:57,469:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:07:57,839:INFO:Setup _display_container:                     Description             Value
0                    Session id              6607
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              e736
2025-06-10 16:07:57,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:57,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:58,082:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:58,082:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:07:58,083:INFO:setup() successfully completed in 3.58s...............
2025-06-10 16:08:02,228:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:08:03,792:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:08:03,898:INFO:PyCaret RegressionExperiment
2025-06-10 16:08:03,899:INFO:Logging name: reg-default-name
2025-06-10 16:08:03,899:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:08:03,899:INFO:version 3.3.2
2025-06-10 16:08:03,899:INFO:Initializing setup()
2025-06-10 16:08:03,899:INFO:self.USI: cb53
2025-06-10 16:08:03,899:INFO:self._variable_keys: {'log_plots_param', 'transform_target_param', 'exp_name_log', '_ml_usecase', 'gpu_param', 'X_train', 'data', 'fold_groups_param', 'X_test', 'X', 'target_param', 'seed', 'y_test', 'y_train', '_available_plots', 'logging_param', 'fold_generator', 'gpu_n_jobs_param', 'y', 'pipeline', 'USI', 'exp_id', 'memory', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'html_param'}
2025-06-10 16:08:03,899:INFO:Checking environment
2025-06-10 16:08:03,899:INFO:python_version: 3.10.6
2025-06-10 16:08:03,899:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:08:03,899:INFO:machine: AMD64
2025-06-10 16:08:03,899:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:08:03,900:INFO:Memory: svmem(total=8416440320, available=682901504, percent=91.9, used=7733538816, free=682901504)
2025-06-10 16:08:03,900:INFO:Physical Core: 8
2025-06-10 16:08:03,900:INFO:Logical Core: 16
2025-06-10 16:08:03,900:INFO:Checking libraries
2025-06-10 16:08:03,900:INFO:System:
2025-06-10 16:08:03,900:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:08:03,900:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:08:03,900:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:08:03,900:INFO:PyCaret required dependencies:
2025-06-10 16:08:03,900:INFO:                 pip: 23.1.2
2025-06-10 16:08:03,900:INFO:          setuptools: 63.2.0
2025-06-10 16:08:03,900:INFO:             pycaret: 3.3.2
2025-06-10 16:08:03,900:INFO:             IPython: 8.4.0
2025-06-10 16:08:03,900:INFO:          ipywidgets: 8.0.6
2025-06-10 16:08:03,900:INFO:                tqdm: 4.65.0
2025-06-10 16:08:03,900:INFO:               numpy: 1.26.4
2025-06-10 16:08:03,901:INFO:              pandas: 1.4.4
2025-06-10 16:08:03,901:INFO:              jinja2: 3.1.2
2025-06-10 16:08:03,901:INFO:               scipy: 1.11.0
2025-06-10 16:08:03,901:INFO:              joblib: 1.3.2
2025-06-10 16:08:03,901:INFO:             sklearn: 1.4.2
2025-06-10 16:08:03,901:INFO:                pyod: 2.0.5
2025-06-10 16:08:03,901:INFO:            imblearn: 0.13.0
2025-06-10 16:08:03,901:INFO:   category_encoders: 2.7.0
2025-06-10 16:08:03,901:INFO:            lightgbm: 4.6.0
2025-06-10 16:08:03,901:INFO:               numba: 0.61.2
2025-06-10 16:08:03,901:INFO:            requests: 2.31.0
2025-06-10 16:08:03,901:INFO:          matplotlib: 3.5.3
2025-06-10 16:08:03,901:INFO:          scikitplot: 0.3.7
2025-06-10 16:08:03,901:INFO:         yellowbrick: 1.5
2025-06-10 16:08:03,901:INFO:              plotly: 5.24.1
2025-06-10 16:08:03,901:INFO:    plotly-resampler: Not installed
2025-06-10 16:08:03,901:INFO:             kaleido: 0.2.1
2025-06-10 16:08:03,901:INFO:           schemdraw: 0.15
2025-06-10 16:08:03,901:INFO:         statsmodels: 0.14.4
2025-06-10 16:08:03,901:INFO:              sktime: 0.26.0
2025-06-10 16:08:03,901:INFO:               tbats: 1.1.3
2025-06-10 16:08:03,901:INFO:            pmdarima: 2.0.4
2025-06-10 16:08:03,901:INFO:              psutil: 5.9.1
2025-06-10 16:08:03,901:INFO:          markupsafe: 2.1.1
2025-06-10 16:08:03,901:INFO:             pickle5: Not installed
2025-06-10 16:08:03,901:INFO:         cloudpickle: 3.1.1
2025-06-10 16:08:03,902:INFO:         deprecation: 2.1.0
2025-06-10 16:08:03,902:INFO:              xxhash: 3.5.0
2025-06-10 16:08:03,902:INFO:           wurlitzer: Not installed
2025-06-10 16:08:03,902:INFO:PyCaret optional dependencies:
2025-06-10 16:08:03,902:INFO:                shap: Not installed
2025-06-10 16:08:03,902:INFO:           interpret: Not installed
2025-06-10 16:08:03,902:INFO:                umap: Not installed
2025-06-10 16:08:03,902:INFO:     ydata_profiling: Not installed
2025-06-10 16:08:03,902:INFO:  explainerdashboard: Not installed
2025-06-10 16:08:03,902:INFO:             autoviz: Not installed
2025-06-10 16:08:03,902:INFO:           fairlearn: Not installed
2025-06-10 16:08:03,902:INFO:          deepchecks: Not installed
2025-06-10 16:08:03,902:INFO:             xgboost: Not installed
2025-06-10 16:08:03,902:INFO:            catboost: Not installed
2025-06-10 16:08:03,902:INFO:              kmodes: Not installed
2025-06-10 16:08:03,902:INFO:             mlxtend: Not installed
2025-06-10 16:08:03,902:INFO:       statsforecast: Not installed
2025-06-10 16:08:03,902:INFO:        tune_sklearn: Not installed
2025-06-10 16:08:03,902:INFO:                 ray: Not installed
2025-06-10 16:08:03,902:INFO:            hyperopt: Not installed
2025-06-10 16:08:03,902:INFO:              optuna: Not installed
2025-06-10 16:08:03,902:INFO:               skopt: Not installed
2025-06-10 16:08:03,902:INFO:              mlflow: Not installed
2025-06-10 16:08:03,902:INFO:              gradio: Not installed
2025-06-10 16:08:03,902:INFO:             fastapi: Not installed
2025-06-10 16:08:03,902:INFO:             uvicorn: Not installed
2025-06-10 16:08:03,902:INFO:              m2cgen: Not installed
2025-06-10 16:08:03,903:INFO:           evidently: Not installed
2025-06-10 16:08:03,903:INFO:               fugue: Not installed
2025-06-10 16:08:03,903:INFO:           streamlit: 1.45.1
2025-06-10 16:08:03,903:INFO:             prophet: Not installed
2025-06-10 16:08:03,903:INFO:None
2025-06-10 16:08:03,903:INFO:Set up data.
2025-06-10 16:08:04,060:INFO:Set up folding strategy.
2025-06-10 16:08:04,060:INFO:Set up train/test split.
2025-06-10 16:08:04,126:INFO:Set up index.
2025-06-10 16:08:04,131:INFO:Assigning column types.
2025-06-10 16:08:04,174:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:08:04,174:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,178:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,182:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,302:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,306:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,310:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,433:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:08:04,436:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,440:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,562:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,566:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,649:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,687:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:08:04,695:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,821:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,830:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,914:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,951:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:04,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:04,952:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:08:05,043:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,086:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,223:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,223:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:08:05,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,345:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,429:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:08:05,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,467:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:08:05,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:05,712:INFO:Preparing preprocessing pipeline...
2025-06-10 16:08:05,712:INFO:Set up simple imputation.
2025-06-10 16:08:05,733:INFO:Set up encoding of categorical features.
2025-06-10 16:08:05,834:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:06,429:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:08:06,434:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:08:06,434:INFO:Creating final display dataframe.
2025-06-10 16:08:06,517:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:07,036:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:07,391:INFO:Setup _display_container:                     Description             Value
0                    Session id              6966
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              cb53
2025-06-10 16:08:07,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:07,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:07,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:07,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:08:07,657:INFO:setup() successfully completed in 3.78s...............
2025-06-10 16:08:07,659:INFO:Initializing compare_models()
2025-06-10 16:08:07,659:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-10 16:08:07,659:INFO:Checking exceptions
2025-06-10 16:08:07,677:INFO:Preparing display monitor
2025-06-10 16:08:07,686:INFO:Initializing Linear Regression
2025-06-10 16:08:07,687:INFO:Total runtime is 1.7261505126953126e-05 minutes
2025-06-10 16:08:07,687:INFO:SubProcess create_model() called ==================================
2025-06-10 16:08:07,687:INFO:Initializing create_model()
2025-06-10 16:08:07,687:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:08:07,687:INFO:Checking exceptions
2025-06-10 16:08:07,687:INFO:Importing libraries
2025-06-10 16:08:07,687:INFO:Copying training dataset
2025-06-10 16:08:07,730:INFO:Defining folds
2025-06-10 16:08:07,730:INFO:Declaring metric variables
2025-06-10 16:08:07,731:INFO:Importing untrained model
2025-06-10 16:08:07,731:INFO:Linear Regression Imported successfully
2025-06-10 16:08:07,732:INFO:Starting cross validation
2025-06-10 16:08:07,756:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:08:16,413:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,414:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,421:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,424:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,426:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,438:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,441:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,460:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:16,474:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,299:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,616:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,667:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,683:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,684:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,685:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,689:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:19,962:INFO:Calculating mean and std
2025-06-10 16:08:19,966:INFO:Creating metrics dataframe
2025-06-10 16:08:19,976:INFO:Uploading results into container
2025-06-10 16:08:19,976:INFO:Uploading model into container now
2025-06-10 16:08:19,978:INFO:_master_model_container: 1
2025-06-10 16:08:19,978:INFO:_display_container: 2
2025-06-10 16:08:19,979:INFO:LinearRegression(n_jobs=-1)
2025-06-10 16:08:19,980:INFO:create_model() successfully completed......................................
2025-06-10 16:08:20,110:INFO:SubProcess create_model() end ==================================
2025-06-10 16:08:20,111:INFO:Creating metrics dataframe
2025-06-10 16:08:20,118:INFO:Initializing Lasso Regression
2025-06-10 16:08:20,118:INFO:Total runtime is 0.20719805558522542 minutes
2025-06-10 16:08:20,118:INFO:SubProcess create_model() called ==================================
2025-06-10 16:08:20,118:INFO:Initializing create_model()
2025-06-10 16:08:20,118:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:08:20,118:INFO:Checking exceptions
2025-06-10 16:08:20,118:INFO:Importing libraries
2025-06-10 16:08:20,118:INFO:Copying training dataset
2025-06-10 16:08:20,169:INFO:Defining folds
2025-06-10 16:08:20,169:INFO:Declaring metric variables
2025-06-10 16:08:20,169:INFO:Importing untrained model
2025-06-10 16:08:20,169:INFO:Lasso Regression Imported successfully
2025-06-10 16:08:20,169:INFO:Starting cross validation
2025-06-10 16:08:20,171:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:08:20,449:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:20,502:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:20,541:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:20,586:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,562:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,566:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,587:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,602:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:27,603:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:28,462:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.218e+13, tolerance: 3.279e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:28,485:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:28,880:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+13, tolerance: 3.275e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:28,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:28,934:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+13, tolerance: 3.267e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:28,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:28,970:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.230e+13, tolerance: 3.276e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:28,988:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:35,835:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.229e+13, tolerance: 3.274e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:35,852:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:35,867:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.207e+13, tolerance: 3.284e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:35,882:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:35,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.198e+13, tolerance: 3.264e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:35,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:35,981:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.209e+13, tolerance: 3.268e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:35,997:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,053:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.187e+13, tolerance: 3.266e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:36,057:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+13, tolerance: 3.274e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:08:36,064:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,267:INFO:Calculating mean and std
2025-06-10 16:08:36,270:INFO:Creating metrics dataframe
2025-06-10 16:08:36,279:INFO:Uploading results into container
2025-06-10 16:08:36,280:INFO:Uploading model into container now
2025-06-10 16:08:36,281:INFO:_master_model_container: 2
2025-06-10 16:08:36,281:INFO:_display_container: 2
2025-06-10 16:08:36,282:INFO:Lasso(random_state=6966)
2025-06-10 16:08:36,282:INFO:create_model() successfully completed......................................
2025-06-10 16:08:36,380:INFO:SubProcess create_model() end ==================================
2025-06-10 16:08:36,380:INFO:Creating metrics dataframe
2025-06-10 16:08:36,384:INFO:Initializing Ridge Regression
2025-06-10 16:08:36,384:INFO:Total runtime is 0.4783014376958211 minutes
2025-06-10 16:08:36,385:INFO:SubProcess create_model() called ==================================
2025-06-10 16:08:36,385:INFO:Initializing create_model()
2025-06-10 16:08:36,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:08:36,385:INFO:Checking exceptions
2025-06-10 16:08:36,385:INFO:Importing libraries
2025-06-10 16:08:36,385:INFO:Copying training dataset
2025-06-10 16:08:36,430:INFO:Defining folds
2025-06-10 16:08:36,430:INFO:Declaring metric variables
2025-06-10 16:08:36,430:INFO:Importing untrained model
2025-06-10 16:08:36,432:INFO:Ridge Regression Imported successfully
2025-06-10 16:08:36,432:INFO:Starting cross validation
2025-06-10 16:08:36,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:08:36,658:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,717:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,750:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:36,986:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:37,052:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:37,118:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:37,207:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:37,264:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,433:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,630:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,863:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,864:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,981:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:39,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,185:INFO:Calculating mean and std
2025-06-10 16:08:40,186:INFO:Creating metrics dataframe
2025-06-10 16:08:40,188:INFO:Uploading results into container
2025-06-10 16:08:40,189:INFO:Uploading model into container now
2025-06-10 16:08:40,189:INFO:_master_model_container: 3
2025-06-10 16:08:40,189:INFO:_display_container: 2
2025-06-10 16:08:40,189:INFO:Ridge(random_state=6966)
2025-06-10 16:08:40,189:INFO:create_model() successfully completed......................................
2025-06-10 16:08:40,293:INFO:SubProcess create_model() end ==================================
2025-06-10 16:08:40,293:INFO:Creating metrics dataframe
2025-06-10 16:08:40,298:INFO:Initializing Elastic Net
2025-06-10 16:08:40,298:INFO:Total runtime is 0.5435345530509949 minutes
2025-06-10 16:08:40,298:INFO:SubProcess create_model() called ==================================
2025-06-10 16:08:40,298:INFO:Initializing create_model()
2025-06-10 16:08:40,298:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:08:40,298:INFO:Checking exceptions
2025-06-10 16:08:40,298:INFO:Importing libraries
2025-06-10 16:08:40,298:INFO:Copying training dataset
2025-06-10 16:08:40,349:INFO:Defining folds
2025-06-10 16:08:40,349:INFO:Declaring metric variables
2025-06-10 16:08:40,349:INFO:Importing untrained model
2025-06-10 16:08:40,350:INFO:Elastic Net Imported successfully
2025-06-10 16:08:40,350:INFO:Starting cross validation
2025-06-10 16:08:40,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:08:40,584:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,657:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,724:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,795:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,873:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:40,977:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:41,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:41,103:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:41,191:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:41,272:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:08:53,950:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:09:05,364:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.747e+12, tolerance: 3.276e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,405:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,434:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.346e+12, tolerance: 3.264e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,468:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,664:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.418e+12, tolerance: 3.266e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,679:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.270e+12, tolerance: 3.274e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,702:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,707:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.752e+12, tolerance: 3.268e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,715:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,739:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,758:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.633e+12, tolerance: 3.279e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,778:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,803:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.673e+12, tolerance: 3.284e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,918:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.243e+12, tolerance: 3.267e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,927:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.685e+12, tolerance: 3.274e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,941:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:05,986:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.631e+12, tolerance: 3.275e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:09:05,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:06,182:INFO:Calculating mean and std
2025-06-10 16:09:06,183:INFO:Creating metrics dataframe
2025-06-10 16:09:06,185:INFO:Uploading results into container
2025-06-10 16:09:06,186:INFO:Uploading model into container now
2025-06-10 16:09:06,186:INFO:_master_model_container: 4
2025-06-10 16:09:06,186:INFO:_display_container: 2
2025-06-10 16:09:06,186:INFO:ElasticNet(random_state=6966)
2025-06-10 16:09:06,186:INFO:create_model() successfully completed......................................
2025-06-10 16:09:06,266:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:06,266:INFO:Creating metrics dataframe
2025-06-10 16:09:06,270:INFO:Initializing Least Angle Regression
2025-06-10 16:09:06,270:INFO:Total runtime is 0.9763957420984903 minutes
2025-06-10 16:09:06,271:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:06,271:INFO:Initializing create_model()
2025-06-10 16:09:06,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:06,271:INFO:Checking exceptions
2025-06-10 16:09:06,271:INFO:Importing libraries
2025-06-10 16:09:06,271:INFO:Copying training dataset
2025-06-10 16:09:06,316:INFO:Defining folds
2025-06-10 16:09:06,316:INFO:Declaring metric variables
2025-06-10 16:09:06,316:INFO:Importing untrained model
2025-06-10 16:09:06,317:INFO:Least Angle Regression Imported successfully
2025-06-10 16:09:06,317:INFO:Starting cross validation
2025-06-10 16:09:06,318:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:06,554:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:06,626:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:06,761:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:06,840:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:06,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:07,032:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:07,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:07,212:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:07,283:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:07,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,607:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,648:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=1.257e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,651:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=2.736e-01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,690:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,807:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.465e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,809:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.606e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.234e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,811:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.318e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,812:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.311e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,812:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=7.278e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,813:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=5.443e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,815:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.271e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,816:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.290e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,817:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=6.446e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,818:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=2.591e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,819:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.921e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,819:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.422e+02, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,820:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=9.244e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,822:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.381e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,824:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.038e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=1.005e+02, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=6.719e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,872:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=1.715e-01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=1.715e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,897:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=9.260e-02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,929:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.504e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.752e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,931:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,932:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.347e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.343e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,933:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.110e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,934:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.741e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,935:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.470e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,936:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.174e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,940:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=7.329e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,941:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=2.720e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,941:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=2.353e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,942:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.244e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.033e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,944:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.032e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,947:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=3.667e+01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,948:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=3.078e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,949:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.750e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,978:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:09,987:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=6.075e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,989:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.037e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,990:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.251e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,990:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.249e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,991:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.387e+04, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,992:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.006e+04, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,993:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=3.229e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,993:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.133e+03, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=9.187e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=4.871e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=3.768e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.834e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,995:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.214e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=2.037e+09, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:09,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=7.813e+08, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:10,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:10,179:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.861e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.930e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.237e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.233e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.346e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,182:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.757e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.570e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.275e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=7.126e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,187:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=3.921e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,187:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=2.134e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,187:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.386e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=5.640e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=5.194e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,189:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=1.141e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,190:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=7.583e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,191:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.349e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,191:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.286e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,192:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=1.607e-02, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,213:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:10,245:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.467e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,246:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.617e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.237e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.206e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.199e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,248:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.121e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,249:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=4.363e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,250:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.163e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,250:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.462e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.434e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,252:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=6.690e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,252:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=3.074e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,253:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=9.503e+01, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,253:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=5.383e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=5.359e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=3.667e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,254:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=3.091e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,255:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=7.008e+00, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,256:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=3.895e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,257:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=3.888e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,257:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=8.261e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,273:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=1.167e-01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,275:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=6.299e-02, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:10,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:10,291:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:10,571:INFO:Calculating mean and std
2025-06-10 16:09:10,571:INFO:Creating metrics dataframe
2025-06-10 16:09:10,575:INFO:Uploading results into container
2025-06-10 16:09:10,576:INFO:Uploading model into container now
2025-06-10 16:09:10,576:INFO:_master_model_container: 5
2025-06-10 16:09:10,576:INFO:_display_container: 2
2025-06-10 16:09:10,577:INFO:Lars(random_state=6966)
2025-06-10 16:09:10,577:INFO:create_model() successfully completed......................................
2025-06-10 16:09:10,700:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:10,700:INFO:Creating metrics dataframe
2025-06-10 16:09:10,705:INFO:Initializing Lasso Least Angle Regression
2025-06-10 16:09:10,705:INFO:Total runtime is 1.0503132462501525 minutes
2025-06-10 16:09:10,705:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:10,706:INFO:Initializing create_model()
2025-06-10 16:09:10,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:10,706:INFO:Checking exceptions
2025-06-10 16:09:10,706:INFO:Importing libraries
2025-06-10 16:09:10,706:INFO:Copying training dataset
2025-06-10 16:09:10,770:INFO:Defining folds
2025-06-10 16:09:10,770:INFO:Declaring metric variables
2025-06-10 16:09:10,771:INFO:Importing untrained model
2025-06-10 16:09:10,771:INFO:Lasso Least Angle Regression Imported successfully
2025-06-10 16:09:10,771:INFO:Starting cross validation
2025-06-10 16:09:10,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:11,044:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,111:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,344:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,408:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,515:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,604:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,626:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,705:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:11,798:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,033:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,085:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,149:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,231:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.465e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,233:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.606e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.234e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,235:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.318e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,235:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.311e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=7.278e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,236:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=5.443e+05, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.271e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.290e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,238:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=6.446e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=2.591e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,239:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.921e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=1.422e+02, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=9.244e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,240:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.381e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,241:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.038e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 18 iterations, alpha=1.670e+02, previous alpha=1.611e+01, with an active set of 17 regressors.
  warnings.warn(

2025-06-10 16:09:14,268:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.504e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.752e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.347e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,269:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.343e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.110e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,270:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.741e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 7 iterations, alpha=9.013e+03, previous alpha=2.637e+03, with an active set of 6 regressors.
  warnings.warn(

2025-06-10 16:09:14,297:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=6.075e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,322:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.037e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,323:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.251e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,324:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.249e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,325:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 6 iterations, alpha=1.248e+06, previous alpha=1.283e+04, with an active set of 5 regressors.
  warnings.warn(

2025-06-10 16:09:14,348:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.861e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.930e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.237e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,428:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.233e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.346e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.757e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,431:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 7 iterations, alpha=9.313e+03, previous alpha=2.782e+03, with an active set of 6 regressors.
  warnings.warn(

2025-06-10 16:09:14,444:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.467e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,445:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.617e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=3.237e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.206e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.199e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.121e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,448:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=4.363e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,449:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=3.163e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,449:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.462e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,450:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=1.434e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,450:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=6.690e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,451:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=3.074e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,451:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=9.503e+01, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,452:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=5.383e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,452:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=5.359e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,452:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=3.667e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,453:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=3.091e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,453:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=7.008e+00, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:09:14,454:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 19 iterations, alpha=2.540e+02, previous alpha=3.989e+00, with an active set of 16 regressors.
  warnings.warn(

2025-06-10 16:09:14,469:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,503:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:14,717:INFO:Calculating mean and std
2025-06-10 16:09:14,718:INFO:Creating metrics dataframe
2025-06-10 16:09:14,722:INFO:Uploading results into container
2025-06-10 16:09:14,723:INFO:Uploading model into container now
2025-06-10 16:09:14,724:INFO:_master_model_container: 6
2025-06-10 16:09:14,724:INFO:_display_container: 2
2025-06-10 16:09:14,725:INFO:LassoLars(random_state=6966)
2025-06-10 16:09:14,725:INFO:create_model() successfully completed......................................
2025-06-10 16:09:14,858:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:14,858:INFO:Creating metrics dataframe
2025-06-10 16:09:14,864:INFO:Initializing Orthogonal Matching Pursuit
2025-06-10 16:09:14,864:INFO:Total runtime is 1.1196332931518553 minutes
2025-06-10 16:09:14,864:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:14,864:INFO:Initializing create_model()
2025-06-10 16:09:14,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:14,865:INFO:Checking exceptions
2025-06-10 16:09:14,865:INFO:Importing libraries
2025-06-10 16:09:14,865:INFO:Copying training dataset
2025-06-10 16:09:14,924:INFO:Defining folds
2025-06-10 16:09:14,924:INFO:Declaring metric variables
2025-06-10 16:09:14,924:INFO:Importing untrained model
2025-06-10 16:09:14,924:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-10 16:09:14,925:INFO:Starting cross validation
2025-06-10 16:09:14,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:15,153:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,455:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,574:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,614:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,690:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,768:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:15,846:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,054:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,275:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,484:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,529:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,601:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,612:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,646:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:18,868:INFO:Calculating mean and std
2025-06-10 16:09:18,868:INFO:Creating metrics dataframe
2025-06-10 16:09:18,872:INFO:Uploading results into container
2025-06-10 16:09:18,872:INFO:Uploading model into container now
2025-06-10 16:09:18,872:INFO:_master_model_container: 7
2025-06-10 16:09:18,872:INFO:_display_container: 2
2025-06-10 16:09:18,873:INFO:OrthogonalMatchingPursuit()
2025-06-10 16:09:18,873:INFO:create_model() successfully completed......................................
2025-06-10 16:09:18,985:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:18,986:INFO:Creating metrics dataframe
2025-06-10 16:09:18,990:INFO:Initializing Bayesian Ridge
2025-06-10 16:09:18,990:INFO:Total runtime is 1.1883991400400795 minutes
2025-06-10 16:09:18,990:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:18,991:INFO:Initializing create_model()
2025-06-10 16:09:18,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:18,991:INFO:Checking exceptions
2025-06-10 16:09:18,991:INFO:Importing libraries
2025-06-10 16:09:18,991:INFO:Copying training dataset
2025-06-10 16:09:19,054:INFO:Defining folds
2025-06-10 16:09:19,054:INFO:Declaring metric variables
2025-06-10 16:09:19,055:INFO:Importing untrained model
2025-06-10 16:09:19,055:INFO:Bayesian Ridge Imported successfully
2025-06-10 16:09:19,055:INFO:Starting cross validation
2025-06-10 16:09:19,056:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:19,299:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,684:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,830:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:19,958:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:22,953:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,186:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,288:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,396:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,441:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,483:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,490:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:23,665:INFO:Calculating mean and std
2025-06-10 16:09:23,666:INFO:Creating metrics dataframe
2025-06-10 16:09:23,669:INFO:Uploading results into container
2025-06-10 16:09:23,670:INFO:Uploading model into container now
2025-06-10 16:09:23,670:INFO:_master_model_container: 8
2025-06-10 16:09:23,670:INFO:_display_container: 2
2025-06-10 16:09:23,670:INFO:BayesianRidge()
2025-06-10 16:09:23,671:INFO:create_model() successfully completed......................................
2025-06-10 16:09:23,774:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:23,775:INFO:Creating metrics dataframe
2025-06-10 16:09:23,780:INFO:Initializing Passive Aggressive Regressor
2025-06-10 16:09:23,780:INFO:Total runtime is 1.268230322996775 minutes
2025-06-10 16:09:23,780:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:23,780:INFO:Initializing create_model()
2025-06-10 16:09:23,781:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:23,781:INFO:Checking exceptions
2025-06-10 16:09:23,781:INFO:Importing libraries
2025-06-10 16:09:23,781:INFO:Copying training dataset
2025-06-10 16:09:23,842:INFO:Defining folds
2025-06-10 16:09:23,842:INFO:Declaring metric variables
2025-06-10 16:09:23,842:INFO:Importing untrained model
2025-06-10 16:09:23,842:INFO:Passive Aggressive Regressor Imported successfully
2025-06-10 16:09:23,843:INFO:Starting cross validation
2025-06-10 16:09:23,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:24,084:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,141:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,218:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,340:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,400:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,474:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,526:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,591:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,663:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:24,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,704:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,725:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,792:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,814:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,841:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,844:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:27,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:28,083:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:28,276:INFO:Calculating mean and std
2025-06-10 16:09:28,279:INFO:Creating metrics dataframe
2025-06-10 16:09:28,289:INFO:Uploading results into container
2025-06-10 16:09:28,290:INFO:Uploading model into container now
2025-06-10 16:09:28,292:INFO:_master_model_container: 9
2025-06-10 16:09:28,292:INFO:_display_container: 2
2025-06-10 16:09:28,293:INFO:PassiveAggressiveRegressor(random_state=6966)
2025-06-10 16:09:28,293:INFO:create_model() successfully completed......................................
2025-06-10 16:09:28,415:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:28,415:INFO:Creating metrics dataframe
2025-06-10 16:09:28,420:INFO:Initializing Huber Regressor
2025-06-10 16:09:28,420:INFO:Total runtime is 1.345561877886454 minutes
2025-06-10 16:09:28,420:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:28,420:INFO:Initializing create_model()
2025-06-10 16:09:28,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:28,420:INFO:Checking exceptions
2025-06-10 16:09:28,420:INFO:Importing libraries
2025-06-10 16:09:28,420:INFO:Copying training dataset
2025-06-10 16:09:28,473:INFO:Defining folds
2025-06-10 16:09:28,473:INFO:Declaring metric variables
2025-06-10 16:09:28,473:INFO:Importing untrained model
2025-06-10 16:09:28,474:INFO:Huber Regressor Imported successfully
2025-06-10 16:09:28,474:INFO:Starting cross validation
2025-06-10 16:09:28,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:28,687:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:28,767:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:28,824:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:28,914:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,114:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,196:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:29,410:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:35,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:35,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:35,608:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:35,678:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,111:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,293:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,356:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,377:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,477:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:36,663:INFO:Calculating mean and std
2025-06-10 16:09:36,664:INFO:Creating metrics dataframe
2025-06-10 16:09:36,670:INFO:Uploading results into container
2025-06-10 16:09:36,671:INFO:Uploading model into container now
2025-06-10 16:09:36,672:INFO:_master_model_container: 10
2025-06-10 16:09:36,672:INFO:_display_container: 2
2025-06-10 16:09:36,672:INFO:HuberRegressor()
2025-06-10 16:09:36,672:INFO:create_model() successfully completed......................................
2025-06-10 16:09:36,783:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:36,783:INFO:Creating metrics dataframe
2025-06-10 16:09:36,787:INFO:Initializing K Neighbors Regressor
2025-06-10 16:09:36,787:INFO:Total runtime is 1.4850118915239967 minutes
2025-06-10 16:09:36,788:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:36,788:INFO:Initializing create_model()
2025-06-10 16:09:36,788:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:36,788:INFO:Checking exceptions
2025-06-10 16:09:36,788:INFO:Importing libraries
2025-06-10 16:09:36,788:INFO:Copying training dataset
2025-06-10 16:09:36,850:INFO:Defining folds
2025-06-10 16:09:36,850:INFO:Declaring metric variables
2025-06-10 16:09:36,850:INFO:Importing untrained model
2025-06-10 16:09:36,850:INFO:K Neighbors Regressor Imported successfully
2025-06-10 16:09:36,850:INFO:Starting cross validation
2025-06-10 16:09:36,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:37,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,116:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,173:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,313:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,392:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,488:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,539:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,651:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,698:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:37,782:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:39,766:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:39,871:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:39,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:39,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,044:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,062:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,104:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,168:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:40,194:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:45,710:INFO:Calculating mean and std
2025-06-10 16:09:45,712:INFO:Creating metrics dataframe
2025-06-10 16:09:45,715:INFO:Uploading results into container
2025-06-10 16:09:45,715:INFO:Uploading model into container now
2025-06-10 16:09:45,715:INFO:_master_model_container: 11
2025-06-10 16:09:45,715:INFO:_display_container: 2
2025-06-10 16:09:45,715:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-10 16:09:45,715:INFO:create_model() successfully completed......................................
2025-06-10 16:09:45,794:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:45,794:INFO:Creating metrics dataframe
2025-06-10 16:09:45,798:INFO:Initializing Decision Tree Regressor
2025-06-10 16:09:45,798:INFO:Total runtime is 1.6352005720138547 minutes
2025-06-10 16:09:45,799:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:45,799:INFO:Initializing create_model()
2025-06-10 16:09:45,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:45,799:INFO:Checking exceptions
2025-06-10 16:09:45,799:INFO:Importing libraries
2025-06-10 16:09:45,799:INFO:Copying training dataset
2025-06-10 16:09:45,844:INFO:Defining folds
2025-06-10 16:09:45,844:INFO:Declaring metric variables
2025-06-10 16:09:45,844:INFO:Importing untrained model
2025-06-10 16:09:45,844:INFO:Decision Tree Regressor Imported successfully
2025-06-10 16:09:45,844:INFO:Starting cross validation
2025-06-10 16:09:45,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:46,060:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,139:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,314:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,396:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,457:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,549:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,585:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:46,630:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:49,871:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,024:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,049:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,090:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,202:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,214:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,255:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,321:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:50,519:INFO:Calculating mean and std
2025-06-10 16:09:50,520:INFO:Creating metrics dataframe
2025-06-10 16:09:50,523:INFO:Uploading results into container
2025-06-10 16:09:50,524:INFO:Uploading model into container now
2025-06-10 16:09:50,524:INFO:_master_model_container: 12
2025-06-10 16:09:50,524:INFO:_display_container: 2
2025-06-10 16:09:50,524:INFO:DecisionTreeRegressor(random_state=6966)
2025-06-10 16:09:50,524:INFO:create_model() successfully completed......................................
2025-06-10 16:09:50,620:INFO:SubProcess create_model() end ==================================
2025-06-10 16:09:50,620:INFO:Creating metrics dataframe
2025-06-10 16:09:50,624:INFO:Initializing Random Forest Regressor
2025-06-10 16:09:50,625:INFO:Total runtime is 1.715653308232625 minutes
2025-06-10 16:09:50,625:INFO:SubProcess create_model() called ==================================
2025-06-10 16:09:50,625:INFO:Initializing create_model()
2025-06-10 16:09:50,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:09:50,625:INFO:Checking exceptions
2025-06-10 16:09:50,625:INFO:Importing libraries
2025-06-10 16:09:50,626:INFO:Copying training dataset
2025-06-10 16:09:50,688:INFO:Defining folds
2025-06-10 16:09:50,688:INFO:Declaring metric variables
2025-06-10 16:09:50,689:INFO:Importing untrained model
2025-06-10 16:09:50,689:INFO:Random Forest Regressor Imported successfully
2025-06-10 16:09:50,689:INFO:Starting cross validation
2025-06-10 16:09:50,690:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:09:50,972:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,137:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,339:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,407:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,491:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,571:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,646:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:09:51,766:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:05,380:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:08,550:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:08,796:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:09,090:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,348:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,372:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,381:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,415:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:11,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:12,661:INFO:Calculating mean and std
2025-06-10 16:11:12,705:INFO:Creating metrics dataframe
2025-06-10 16:11:12,826:INFO:Uploading results into container
2025-06-10 16:11:12,831:INFO:Uploading model into container now
2025-06-10 16:11:12,843:INFO:_master_model_container: 13
2025-06-10 16:11:12,844:INFO:_display_container: 2
2025-06-10 16:11:12,858:INFO:RandomForestRegressor(n_jobs=-1, random_state=6966)
2025-06-10 16:11:12,858:INFO:create_model() successfully completed......................................
2025-06-10 16:11:13,388:INFO:SubProcess create_model() end ==================================
2025-06-10 16:11:13,389:INFO:Creating metrics dataframe
2025-06-10 16:11:13,395:INFO:Initializing Extra Trees Regressor
2025-06-10 16:11:13,395:INFO:Total runtime is 3.095145527521769 minutes
2025-06-10 16:11:13,395:INFO:SubProcess create_model() called ==================================
2025-06-10 16:11:13,396:INFO:Initializing create_model()
2025-06-10 16:11:13,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:11:13,396:INFO:Checking exceptions
2025-06-10 16:11:13,396:INFO:Importing libraries
2025-06-10 16:11:13,397:INFO:Copying training dataset
2025-06-10 16:11:13,485:INFO:Defining folds
2025-06-10 16:11:13,485:INFO:Declaring metric variables
2025-06-10 16:11:13,485:INFO:Importing untrained model
2025-06-10 16:11:13,485:INFO:Extra Trees Regressor Imported successfully
2025-06-10 16:11:13,486:INFO:Starting cross validation
2025-06-10 16:11:13,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:11:13,842:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,019:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,173:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,204:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:11:14,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,539:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,555:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,544:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,567:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,616:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,650:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,697:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,747:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:12:35,866:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:08,305:INFO:Calculating mean and std
2025-06-10 16:15:08,372:INFO:Creating metrics dataframe
2025-06-10 16:15:08,595:INFO:Uploading results into container
2025-06-10 16:15:08,603:INFO:Uploading model into container now
2025-06-10 16:15:08,620:INFO:_master_model_container: 14
2025-06-10 16:15:08,620:INFO:_display_container: 2
2025-06-10 16:15:08,644:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6966)
2025-06-10 16:15:08,645:INFO:create_model() successfully completed......................................
2025-06-10 16:15:10,015:INFO:SubProcess create_model() end ==================================
2025-06-10 16:15:10,016:INFO:Creating metrics dataframe
2025-06-10 16:15:10,045:INFO:Initializing AdaBoost Regressor
2025-06-10 16:15:10,045:INFO:Total runtime is 7.0393243114153545 minutes
2025-06-10 16:15:10,047:INFO:SubProcess create_model() called ==================================
2025-06-10 16:15:10,049:INFO:Initializing create_model()
2025-06-10 16:15:10,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017252A13D90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017220F1EDA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:15:10,049:INFO:Checking exceptions
2025-06-10 16:15:10,050:INFO:Importing libraries
2025-06-10 16:15:10,051:INFO:Copying training dataset
2025-06-10 16:15:10,435:INFO:Defining folds
2025-06-10 16:15:10,435:INFO:Declaring metric variables
2025-06-10 16:15:10,436:INFO:Importing untrained model
2025-06-10 16:15:10,437:INFO:AdaBoost Regressor Imported successfully
2025-06-10 16:15:10,438:INFO:Starting cross validation
2025-06-10 16:15:10,442:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:15:11,406:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:11,581:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:11,689:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:11,714:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,110:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,596:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:12,769:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:19,351:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:19,707:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:19,946:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:20,128:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:20,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:20,230:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:20,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:20,767:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:15:21,212:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2025-06-10 16:15:21,235:WARNING:Traceback (most recent call last):
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.


2025-06-10 16:15:21,236:INFO:Initializing create_model()
2025-06-10 16:31:07,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:31:07,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:31:07,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:31:07,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:31:10,032:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 16:31:10,250:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:49:29,633:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:49:29,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:49:29,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:49:29,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:49:32,039:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 16:49:32,266:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:51:08,667:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:51:08,895:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:51:13,438:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:51:15,882:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:54:27,299:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:54:27,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:54:27,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:54:27,300:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-10 16:54:29,705:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-10 16:54:29,940:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:54:36,492:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:54:36,759:WARNING:E:\NoCodeML\app.py:42: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv(file)

2025-06-10 16:55:17,444:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:21,054:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:22,637:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:22,770:INFO:PyCaret RegressionExperiment
2025-06-10 16:55:22,770:INFO:Logging name: reg-default-name
2025-06-10 16:55:22,770:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:55:22,771:INFO:version 3.3.2
2025-06-10 16:55:22,771:INFO:Initializing setup()
2025-06-10 16:55:22,771:INFO:self.USI: b79c
2025-06-10 16:55:22,771:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'transform_target_param', 'data', 'gpu_n_jobs_param', 'USI', 'n_jobs_param', 'X_test', 'gpu_param', 'pipeline', 'y_train', 'memory', 'X', 'target_param', 'html_param', 'logging_param', '_ml_usecase', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'exp_id', 'X_train', 'log_plots_param', 'y_test', 'y', 'seed', 'idx'}
2025-06-10 16:55:22,771:INFO:Checking environment
2025-06-10 16:55:22,771:INFO:python_version: 3.10.6
2025-06-10 16:55:22,771:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:55:22,771:INFO:machine: AMD64
2025-06-10 16:55:22,783:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:55:22,785:INFO:Memory: svmem(total=8416440320, available=814800896, percent=90.3, used=7601639424, free=814800896)
2025-06-10 16:55:22,785:INFO:Physical Core: 8
2025-06-10 16:55:22,785:INFO:Logical Core: 16
2025-06-10 16:55:22,785:INFO:Checking libraries
2025-06-10 16:55:22,785:INFO:System:
2025-06-10 16:55:22,785:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:55:22,785:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:55:22,785:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:55:22,785:INFO:PyCaret required dependencies:
2025-06-10 16:55:22,872:INFO:                 pip: 23.1.2
2025-06-10 16:55:22,872:INFO:          setuptools: 63.2.0
2025-06-10 16:55:22,872:INFO:             pycaret: 3.3.2
2025-06-10 16:55:22,872:INFO:             IPython: 8.4.0
2025-06-10 16:55:22,872:INFO:          ipywidgets: 8.0.6
2025-06-10 16:55:22,872:INFO:                tqdm: 4.65.0
2025-06-10 16:55:22,872:INFO:               numpy: 1.26.4
2025-06-10 16:55:22,872:INFO:              pandas: 1.4.4
2025-06-10 16:55:22,872:INFO:              jinja2: 3.1.2
2025-06-10 16:55:22,872:INFO:               scipy: 1.11.0
2025-06-10 16:55:22,872:INFO:              joblib: 1.3.2
2025-06-10 16:55:22,872:INFO:             sklearn: 1.4.2
2025-06-10 16:55:22,872:INFO:                pyod: 2.0.5
2025-06-10 16:55:22,872:INFO:            imblearn: 0.13.0
2025-06-10 16:55:22,872:INFO:   category_encoders: 2.7.0
2025-06-10 16:55:22,872:INFO:            lightgbm: 4.6.0
2025-06-10 16:55:22,872:INFO:               numba: 0.61.2
2025-06-10 16:55:22,872:INFO:            requests: 2.31.0
2025-06-10 16:55:22,872:INFO:          matplotlib: 3.5.3
2025-06-10 16:55:22,872:INFO:          scikitplot: 0.3.7
2025-06-10 16:55:22,872:INFO:         yellowbrick: 1.5
2025-06-10 16:55:22,872:INFO:              plotly: 5.24.1
2025-06-10 16:55:22,872:INFO:    plotly-resampler: Not installed
2025-06-10 16:55:22,873:INFO:             kaleido: 0.2.1
2025-06-10 16:55:22,873:INFO:           schemdraw: 0.15
2025-06-10 16:55:22,873:INFO:         statsmodels: 0.14.4
2025-06-10 16:55:22,873:INFO:              sktime: 0.26.0
2025-06-10 16:55:22,873:INFO:               tbats: 1.1.3
2025-06-10 16:55:22,873:INFO:            pmdarima: 2.0.4
2025-06-10 16:55:22,873:INFO:              psutil: 5.9.1
2025-06-10 16:55:22,873:INFO:          markupsafe: 2.1.1
2025-06-10 16:55:22,873:INFO:             pickle5: Not installed
2025-06-10 16:55:22,873:INFO:         cloudpickle: 3.1.1
2025-06-10 16:55:22,873:INFO:         deprecation: 2.1.0
2025-06-10 16:55:22,873:INFO:              xxhash: 3.5.0
2025-06-10 16:55:22,873:INFO:           wurlitzer: Not installed
2025-06-10 16:55:22,873:INFO:PyCaret optional dependencies:
2025-06-10 16:55:22,888:INFO:                shap: Not installed
2025-06-10 16:55:22,889:INFO:           interpret: Not installed
2025-06-10 16:55:22,889:INFO:                umap: Not installed
2025-06-10 16:55:22,889:INFO:     ydata_profiling: Not installed
2025-06-10 16:55:22,889:INFO:  explainerdashboard: Not installed
2025-06-10 16:55:22,889:INFO:             autoviz: Not installed
2025-06-10 16:55:22,889:INFO:           fairlearn: Not installed
2025-06-10 16:55:22,889:INFO:          deepchecks: Not installed
2025-06-10 16:55:22,889:INFO:             xgboost: Not installed
2025-06-10 16:55:22,889:INFO:            catboost: Not installed
2025-06-10 16:55:22,889:INFO:              kmodes: Not installed
2025-06-10 16:55:22,889:INFO:             mlxtend: Not installed
2025-06-10 16:55:22,889:INFO:       statsforecast: Not installed
2025-06-10 16:55:22,889:INFO:        tune_sklearn: Not installed
2025-06-10 16:55:22,889:INFO:                 ray: Not installed
2025-06-10 16:55:22,889:INFO:            hyperopt: Not installed
2025-06-10 16:55:22,889:INFO:              optuna: Not installed
2025-06-10 16:55:22,889:INFO:               skopt: Not installed
2025-06-10 16:55:22,889:INFO:              mlflow: Not installed
2025-06-10 16:55:22,889:INFO:              gradio: Not installed
2025-06-10 16:55:22,889:INFO:             fastapi: Not installed
2025-06-10 16:55:22,889:INFO:             uvicorn: Not installed
2025-06-10 16:55:22,889:INFO:              m2cgen: Not installed
2025-06-10 16:55:22,889:INFO:           evidently: Not installed
2025-06-10 16:55:22,889:INFO:               fugue: Not installed
2025-06-10 16:55:22,890:INFO:           streamlit: 1.45.1
2025-06-10 16:55:22,890:INFO:             prophet: Not installed
2025-06-10 16:55:22,890:INFO:None
2025-06-10 16:55:22,890:INFO:Set up data.
2025-06-10 16:55:23,040:INFO:Set up folding strategy.
2025-06-10 16:55:23,040:INFO:Set up train/test split.
2025-06-10 16:55:23,102:INFO:Set up index.
2025-06-10 16:55:23,107:INFO:Assigning column types.
2025-06-10 16:55:23,151:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:55:23,151:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,156:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,160:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,248:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,293:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,297:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,302:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,387:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,430:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,430:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:55:23,435:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,439:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,528:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,569:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,574:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,578:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,699:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:55:23,708:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,793:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,845:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,975:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:23,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:23,977:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:55:24,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,114:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,210:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,259:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:55:24,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:24,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,535:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:55:24,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:24,801:INFO:Preparing preprocessing pipeline...
2025-06-10 16:55:24,801:INFO:Set up simple imputation.
2025-06-10 16:55:24,824:INFO:Set up encoding of categorical features.
2025-06-10 16:55:24,939:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:25,594:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:55:25,601:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:55:25,601:INFO:Creating final display dataframe.
2025-06-10 16:55:25,698:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:26,285:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:26,676:INFO:Setup _display_container:                     Description             Value
0                    Session id              1074
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              b79c
2025-06-10 16:55:26,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:26,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:26,946:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:26,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:26,947:INFO:setup() successfully completed in 4.24s...............
2025-06-10 16:55:33,550:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:35,146:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:35,256:INFO:PyCaret RegressionExperiment
2025-06-10 16:55:35,256:INFO:Logging name: reg-default-name
2025-06-10 16:55:35,256:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-10 16:55:35,256:INFO:version 3.3.2
2025-06-10 16:55:35,256:INFO:Initializing setup()
2025-06-10 16:55:35,256:INFO:self.USI: 189b
2025-06-10 16:55:35,256:INFO:self._variable_keys: {'fold_groups_param', 'exp_name_log', 'transform_target_param', 'data', 'gpu_n_jobs_param', 'USI', 'n_jobs_param', 'X_test', 'gpu_param', 'pipeline', 'y_train', 'memory', 'X', 'target_param', 'html_param', 'logging_param', '_ml_usecase', 'fold_generator', '_available_plots', 'fold_shuffle_param', 'exp_id', 'X_train', 'log_plots_param', 'y_test', 'y', 'seed', 'idx'}
2025-06-10 16:55:35,256:INFO:Checking environment
2025-06-10 16:55:35,256:INFO:python_version: 3.10.6
2025-06-10 16:55:35,256:INFO:python_build: ('tags/v3.10.6:9c7b4bd', 'Aug  1 2022 21:53:49')
2025-06-10 16:55:35,256:INFO:machine: AMD64
2025-06-10 16:55:35,256:INFO:platform: Windows-10-10.0.22631-SP0
2025-06-10 16:55:35,256:INFO:Memory: svmem(total=8416440320, available=748302336, percent=91.1, used=7668137984, free=748302336)
2025-06-10 16:55:35,256:INFO:Physical Core: 8
2025-06-10 16:55:35,256:INFO:Logical Core: 16
2025-06-10 16:55:35,256:INFO:Checking libraries
2025-06-10 16:55:35,256:INFO:System:
2025-06-10 16:55:35,256:INFO:    python: 3.10.6 (tags/v3.10.6:9c7b4bd, Aug  1 2022, 21:53:49) [MSC v.1932 64 bit (AMD64)]
2025-06-10 16:55:35,256:INFO:executable: C:\Users\ASUS\AppData\Local\Programs\Python\Python310\python.exe
2025-06-10 16:55:35,256:INFO:   machine: Windows-10-10.0.22631-SP0
2025-06-10 16:55:35,256:INFO:PyCaret required dependencies:
2025-06-10 16:55:35,257:INFO:                 pip: 23.1.2
2025-06-10 16:55:35,257:INFO:          setuptools: 63.2.0
2025-06-10 16:55:35,257:INFO:             pycaret: 3.3.2
2025-06-10 16:55:35,257:INFO:             IPython: 8.4.0
2025-06-10 16:55:35,257:INFO:          ipywidgets: 8.0.6
2025-06-10 16:55:35,257:INFO:                tqdm: 4.65.0
2025-06-10 16:55:35,257:INFO:               numpy: 1.26.4
2025-06-10 16:55:35,257:INFO:              pandas: 1.4.4
2025-06-10 16:55:35,257:INFO:              jinja2: 3.1.2
2025-06-10 16:55:35,257:INFO:               scipy: 1.11.0
2025-06-10 16:55:35,257:INFO:              joblib: 1.3.2
2025-06-10 16:55:35,257:INFO:             sklearn: 1.4.2
2025-06-10 16:55:35,257:INFO:                pyod: 2.0.5
2025-06-10 16:55:35,257:INFO:            imblearn: 0.13.0
2025-06-10 16:55:35,257:INFO:   category_encoders: 2.7.0
2025-06-10 16:55:35,257:INFO:            lightgbm: 4.6.0
2025-06-10 16:55:35,257:INFO:               numba: 0.61.2
2025-06-10 16:55:35,257:INFO:            requests: 2.31.0
2025-06-10 16:55:35,257:INFO:          matplotlib: 3.5.3
2025-06-10 16:55:35,257:INFO:          scikitplot: 0.3.7
2025-06-10 16:55:35,258:INFO:         yellowbrick: 1.5
2025-06-10 16:55:35,258:INFO:              plotly: 5.24.1
2025-06-10 16:55:35,258:INFO:    plotly-resampler: Not installed
2025-06-10 16:55:35,258:INFO:             kaleido: 0.2.1
2025-06-10 16:55:35,258:INFO:           schemdraw: 0.15
2025-06-10 16:55:35,258:INFO:         statsmodels: 0.14.4
2025-06-10 16:55:35,258:INFO:              sktime: 0.26.0
2025-06-10 16:55:35,258:INFO:               tbats: 1.1.3
2025-06-10 16:55:35,258:INFO:            pmdarima: 2.0.4
2025-06-10 16:55:35,258:INFO:              psutil: 5.9.1
2025-06-10 16:55:35,258:INFO:          markupsafe: 2.1.1
2025-06-10 16:55:35,258:INFO:             pickle5: Not installed
2025-06-10 16:55:35,258:INFO:         cloudpickle: 3.1.1
2025-06-10 16:55:35,258:INFO:         deprecation: 2.1.0
2025-06-10 16:55:35,258:INFO:              xxhash: 3.5.0
2025-06-10 16:55:35,258:INFO:           wurlitzer: Not installed
2025-06-10 16:55:35,258:INFO:PyCaret optional dependencies:
2025-06-10 16:55:35,258:INFO:                shap: Not installed
2025-06-10 16:55:35,258:INFO:           interpret: Not installed
2025-06-10 16:55:35,258:INFO:                umap: Not installed
2025-06-10 16:55:35,258:INFO:     ydata_profiling: Not installed
2025-06-10 16:55:35,258:INFO:  explainerdashboard: Not installed
2025-06-10 16:55:35,258:INFO:             autoviz: Not installed
2025-06-10 16:55:35,258:INFO:           fairlearn: Not installed
2025-06-10 16:55:35,258:INFO:          deepchecks: Not installed
2025-06-10 16:55:35,258:INFO:             xgboost: Not installed
2025-06-10 16:55:35,258:INFO:            catboost: Not installed
2025-06-10 16:55:35,259:INFO:              kmodes: Not installed
2025-06-10 16:55:35,259:INFO:             mlxtend: Not installed
2025-06-10 16:55:35,259:INFO:       statsforecast: Not installed
2025-06-10 16:55:35,259:INFO:        tune_sklearn: Not installed
2025-06-10 16:55:35,259:INFO:                 ray: Not installed
2025-06-10 16:55:35,259:INFO:            hyperopt: Not installed
2025-06-10 16:55:35,259:INFO:              optuna: Not installed
2025-06-10 16:55:35,259:INFO:               skopt: Not installed
2025-06-10 16:55:35,259:INFO:              mlflow: Not installed
2025-06-10 16:55:35,259:INFO:              gradio: Not installed
2025-06-10 16:55:35,259:INFO:             fastapi: Not installed
2025-06-10 16:55:35,259:INFO:             uvicorn: Not installed
2025-06-10 16:55:35,259:INFO:              m2cgen: Not installed
2025-06-10 16:55:35,259:INFO:           evidently: Not installed
2025-06-10 16:55:35,259:INFO:               fugue: Not installed
2025-06-10 16:55:35,259:INFO:           streamlit: 1.45.1
2025-06-10 16:55:35,259:INFO:             prophet: Not installed
2025-06-10 16:55:35,259:INFO:None
2025-06-10 16:55:35,259:INFO:Set up data.
2025-06-10 16:55:35,391:INFO:Set up folding strategy.
2025-06-10 16:55:35,392:INFO:Set up train/test split.
2025-06-10 16:55:35,466:INFO:Set up index.
2025-06-10 16:55:35,470:INFO:Assigning column types.
2025-06-10 16:55:35,512:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-10 16:55:35,512:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,516:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,520:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,633:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,636:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,640:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,764:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,765:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-10 16:55:35,769:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,852:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,889:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:35,895:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,898:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:35,982:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,019:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,020:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,020:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-10 16:55:36,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,106:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,142:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,151:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,247:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,285:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-10 16:55:36,374:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,513:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,551:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,551:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,552:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-10 16:55:36,649:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,788:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-10 16:55:36,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,826:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-10 16:55:36,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:36,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:37,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:37,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:37,097:INFO:Preparing preprocessing pipeline...
2025-06-10 16:55:37,097:INFO:Set up simple imputation.
2025-06-10 16:55:37,117:INFO:Set up encoding of categorical features.
2025-06-10 16:55:37,235:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:37,893:INFO:Finished creating preprocessing pipeline.
2025-06-10 16:55:37,899:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ASUS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['WindGustSpd', 'MaxTemp',
                                             'MinTemp', 'MeanTemp', 'YR', 'MO',
                                             'DA', 'DR', 'SPD', 'MAX', 'MIN',
                                             'MEA', 'SND', 'FT', 'FB', 'FTI',
                                             'ITH', 'PGT', 'SD3', 'RHX', 'RHN',
                                             'RVG', 'WTE'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transforme...Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(include=['Date', 'Precip', 'Snowfall',
                                             'PoorWeather', 'PRCP', 'SNF',
                                             'TSHDSBRSGF'],
                                    transformer=TargetEncoder(cols=['Date',
                                                                    'Precip',
                                                                    'Snowfall',
                                                                    'PoorWeather',
                                                                    'PRCP',
                                                                    'SNF',
                                                                    'TSHDSBRSGF'],
                                                              handle_missing='return_nan')))])
2025-06-10 16:55:37,899:INFO:Creating final display dataframe.
2025-06-10 16:55:38,000:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:38,558:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:38,970:INFO:Setup _display_container:                     Description             Value
0                    Session id              7385
1                        Target               STA
2                   Target type        Regression
3           Original data shape      (119040, 31)
4        Transformed data shape      (119040, 22)
5   Transformed train set shape       (83328, 22)
6    Transformed test set shape       (35712, 22)
7              Numeric features                23
8          Categorical features                 7
9      Rows with missing values            100.0%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              189b
2025-06-10 16:55:39,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:39,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:39,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:39,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-10 16:55:39,246:INFO:setup() successfully completed in 4.01s...............
2025-06-10 16:55:39,246:INFO:Initializing compare_models()
2025-06-10 16:55:39,246:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-06-10 16:55:39,246:INFO:Checking exceptions
2025-06-10 16:55:39,265:INFO:Preparing display monitor
2025-06-10 16:55:39,269:INFO:Initializing Linear Regression
2025-06-10 16:55:39,269:INFO:Total runtime is 0.0 minutes
2025-06-10 16:55:39,269:INFO:SubProcess create_model() called ==================================
2025-06-10 16:55:39,270:INFO:Initializing create_model()
2025-06-10 16:55:39,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:55:39,270:INFO:Checking exceptions
2025-06-10 16:55:39,270:INFO:Importing libraries
2025-06-10 16:55:39,270:INFO:Copying training dataset
2025-06-10 16:55:39,317:INFO:Defining folds
2025-06-10 16:55:39,318:INFO:Declaring metric variables
2025-06-10 16:55:39,318:INFO:Importing untrained model
2025-06-10 16:55:39,318:INFO:Linear Regression Imported successfully
2025-06-10 16:55:39,318:INFO:Starting cross validation
2025-06-10 16:55:39,327:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:55:40,884:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:43,351:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:44,710:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:46,780:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,780:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,886:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,895:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,896:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:46,901:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:48,248:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-10 16:55:50,181:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,276:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,361:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,462:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,474:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,504:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,509:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:50,790:INFO:Calculating mean and std
2025-06-10 16:55:50,794:INFO:Creating metrics dataframe
2025-06-10 16:55:50,802:INFO:Uploading results into container
2025-06-10 16:55:50,803:INFO:Uploading model into container now
2025-06-10 16:55:50,804:INFO:_master_model_container: 1
2025-06-10 16:55:50,804:INFO:_display_container: 2
2025-06-10 16:55:50,805:INFO:LinearRegression(n_jobs=-1)
2025-06-10 16:55:50,805:INFO:create_model() successfully completed......................................
2025-06-10 16:55:50,972:INFO:SubProcess create_model() end ==================================
2025-06-10 16:55:50,973:INFO:Creating metrics dataframe
2025-06-10 16:55:50,977:INFO:Initializing Lasso Regression
2025-06-10 16:55:50,977:INFO:Total runtime is 0.1951454202334086 minutes
2025-06-10 16:55:50,977:INFO:SubProcess create_model() called ==================================
2025-06-10 16:55:50,977:INFO:Initializing create_model()
2025-06-10 16:55:50,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:55:50,978:INFO:Checking exceptions
2025-06-10 16:55:50,978:INFO:Importing libraries
2025-06-10 16:55:50,978:INFO:Copying training dataset
2025-06-10 16:55:51,037:INFO:Defining folds
2025-06-10 16:55:51,037:INFO:Declaring metric variables
2025-06-10 16:55:51,038:INFO:Importing untrained model
2025-06-10 16:55:51,038:INFO:Lasso Regression Imported successfully
2025-06-10 16:55:51,038:INFO:Starting cross validation
2025-06-10 16:55:51,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:55:51,353:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:51,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:51,430:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:51,478:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,280:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,287:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,295:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,295:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,297:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:55:59,305:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:02,057:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+13, tolerance: 3.298e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:02,086:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:02,222:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.235e+13, tolerance: 3.286e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:02,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:02,419:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.225e+13, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:02,456:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:02,635:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.231e+13, tolerance: 3.292e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:02,664:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:14,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.239e+13, tolerance: 3.299e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:14,972:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,029:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.244e+13, tolerance: 3.296e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:15,067:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.224e+13, tolerance: 3.288e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:15,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,199:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.230e+13, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:15,219:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,363:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.240e+13, tolerance: 3.288e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:15,385:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,409:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.231e+13, tolerance: 3.292e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:15,427:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:15,700:INFO:Calculating mean and std
2025-06-10 16:56:15,704:INFO:Creating metrics dataframe
2025-06-10 16:56:15,715:INFO:Uploading results into container
2025-06-10 16:56:15,717:INFO:Uploading model into container now
2025-06-10 16:56:15,718:INFO:_master_model_container: 2
2025-06-10 16:56:15,719:INFO:_display_container: 2
2025-06-10 16:56:15,719:INFO:Lasso(random_state=7385)
2025-06-10 16:56:15,719:INFO:create_model() successfully completed......................................
2025-06-10 16:56:16,012:INFO:SubProcess create_model() end ==================================
2025-06-10 16:56:16,013:INFO:Creating metrics dataframe
2025-06-10 16:56:16,030:INFO:Initializing Ridge Regression
2025-06-10 16:56:16,030:INFO:Total runtime is 0.6126955628395081 minutes
2025-06-10 16:56:16,031:INFO:SubProcess create_model() called ==================================
2025-06-10 16:56:16,032:INFO:Initializing create_model()
2025-06-10 16:56:16,032:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:56:16,032:INFO:Checking exceptions
2025-06-10 16:56:16,032:INFO:Importing libraries
2025-06-10 16:56:16,032:INFO:Copying training dataset
2025-06-10 16:56:16,210:INFO:Defining folds
2025-06-10 16:56:16,212:INFO:Declaring metric variables
2025-06-10 16:56:16,212:INFO:Importing untrained model
2025-06-10 16:56:16,212:INFO:Ridge Regression Imported successfully
2025-06-10 16:56:16,212:INFO:Starting cross validation
2025-06-10 16:56:16,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:56:16,589:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:16,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:16,922:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:16,945:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,156:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,333:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,530:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:17,836:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:20,479:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:20,506:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:20,578:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:20,799:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:20,894:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:21,144:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:21,163:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:21,808:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:21,977:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:22,028:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:22,291:INFO:Calculating mean and std
2025-06-10 16:56:22,292:INFO:Creating metrics dataframe
2025-06-10 16:56:22,296:INFO:Uploading results into container
2025-06-10 16:56:22,296:INFO:Uploading model into container now
2025-06-10 16:56:22,297:INFO:_master_model_container: 3
2025-06-10 16:56:22,297:INFO:_display_container: 2
2025-06-10 16:56:22,297:INFO:Ridge(random_state=7385)
2025-06-10 16:56:22,297:INFO:create_model() successfully completed......................................
2025-06-10 16:56:22,460:INFO:SubProcess create_model() end ==================================
2025-06-10 16:56:22,460:INFO:Creating metrics dataframe
2025-06-10 16:56:22,469:INFO:Initializing Elastic Net
2025-06-10 16:56:22,469:INFO:Total runtime is 0.7200127561887106 minutes
2025-06-10 16:56:22,470:INFO:SubProcess create_model() called ==================================
2025-06-10 16:56:22,470:INFO:Initializing create_model()
2025-06-10 16:56:22,470:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:56:22,471:INFO:Checking exceptions
2025-06-10 16:56:22,471:INFO:Importing libraries
2025-06-10 16:56:22,471:INFO:Copying training dataset
2025-06-10 16:56:22,618:INFO:Defining folds
2025-06-10 16:56:22,618:INFO:Declaring metric variables
2025-06-10 16:56:22,619:INFO:Importing untrained model
2025-06-10 16:56:22,620:INFO:Elastic Net Imported successfully
2025-06-10 16:56:22,620:INFO:Starting cross validation
2025-06-10 16:56:22,624:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:56:23,223:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,278:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,525:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,570:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,576:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,643:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,745:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:23,799:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:24,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:24,061:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:53,452:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.963e+12, tolerance: 3.299e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:53,489:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,476:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.588e+12, tolerance: 3.292e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,520:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,530:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.694e+12, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,563:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,684:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.789e+12, tolerance: 3.298e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,719:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,800:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.861e+12, tolerance: 3.292e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.752e+12, tolerance: 3.288e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,820:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.890e+12, tolerance: 3.288e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,822:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,836:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,890:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.553e+12, tolerance: 3.289e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,909:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:54,943:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.010e+12, tolerance: 3.296e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:54,958:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,071:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.394e+12, tolerance: 3.286e+09
  model = cd_fast.enet_coordinate_descent(

2025-06-10 16:56:55,077:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,249:INFO:Calculating mean and std
2025-06-10 16:56:55,250:INFO:Creating metrics dataframe
2025-06-10 16:56:55,252:INFO:Uploading results into container
2025-06-10 16:56:55,253:INFO:Uploading model into container now
2025-06-10 16:56:55,253:INFO:_master_model_container: 4
2025-06-10 16:56:55,253:INFO:_display_container: 2
2025-06-10 16:56:55,253:INFO:ElasticNet(random_state=7385)
2025-06-10 16:56:55,253:INFO:create_model() successfully completed......................................
2025-06-10 16:56:55,350:INFO:SubProcess create_model() end ==================================
2025-06-10 16:56:55,350:INFO:Creating metrics dataframe
2025-06-10 16:56:55,360:INFO:Initializing Least Angle Regression
2025-06-10 16:56:55,360:INFO:Total runtime is 1.268197027842204 minutes
2025-06-10 16:56:55,361:INFO:SubProcess create_model() called ==================================
2025-06-10 16:56:55,361:INFO:Initializing create_model()
2025-06-10 16:56:55,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:56:55,361:INFO:Checking exceptions
2025-06-10 16:56:55,361:INFO:Importing libraries
2025-06-10 16:56:55,361:INFO:Copying training dataset
2025-06-10 16:56:55,414:INFO:Defining folds
2025-06-10 16:56:55,415:INFO:Declaring metric variables
2025-06-10 16:56:55,415:INFO:Importing untrained model
2025-06-10 16:56:55,415:INFO:Least Angle Regression Imported successfully
2025-06-10 16:56:55,415:INFO:Starting cross validation
2025-06-10 16:56:55,423:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:56:55,669:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,709:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,794:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,900:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:55,994:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:56,056:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:56,127:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:56,193:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:56,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:56,331:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:58,755:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:58,759:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.530e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,763:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.324e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,767:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=8.086e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,768:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=4.307e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,770:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=6.625e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,771:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=3.985e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,773:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.784e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,773:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=1.126e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,777:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=1.176e+01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,777:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=6.497e+00, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:58,837:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.435e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,840:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.592e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,843:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=7.960e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.869e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,845:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.313e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,847:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.967e+05, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,850:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=5.515e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,852:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.562e+03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,853:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=5.217e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,854:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.901e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,855:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=3.956e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,857:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=9.129e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,858:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=7.395e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,858:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=6.234e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,883:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=1.018e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=5.495e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=2.373e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,884:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=3.021e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=1.802e-01, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=2.422e-01, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 20 iterations, i.e. alpha=7.752e-02, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:58,893:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:58,913:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,002:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.697e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,004:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.849e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,004:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.307e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,005:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.305e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,005:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=1.033e+04, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,005:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=4.850e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,006:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=2.322e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,007:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=2.090e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=8.291e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=5.947e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=3.467e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=3.038e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,009:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.157e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=7.453e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=6.599e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,010:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=6.872e-01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,011:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 18 iterations, i.e. alpha=1.163e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=8.057e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=7.309e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=4.236e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.039e+16, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,015:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.421e+10, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,025:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=6.819e+02, with an active set of 10 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,028:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=5.364e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,029:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.956e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,030:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=4.290e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,031:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=2.102e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,032:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 19 iterations, i.e. alpha=1.220e+01, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,033:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=2.735e+01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,034:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,055:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,059:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.355e+04, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,061:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.791e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,063:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.213e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=2.500e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=2.427e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,065:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 10 iterations, i.e. alpha=9.006e+02, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,066:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=2.270e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=8.547e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=8.368e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=4.400e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,069:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=2.282e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,071:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=8.158e+01, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,083:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.608e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,091:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,092:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.804e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.400e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,094:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.031e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,094:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.889e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,095:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.860e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,095:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.117e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,096:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=1.778e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,096:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=7.656e+02, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=3.596e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,098:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=1.831e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,099:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=1.026e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=1.109e+07, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=5.205e+06, with an active set of 18 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,122:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,164:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=5.734e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.865e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,165:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.343e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=7.724e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,167:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.672e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,168:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.612e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,168:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.515e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=1.213e+03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,170:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=4.159e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 14 iterations, i.e. alpha=2.950e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=2.083e+02, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,171:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=6.336e+01, with an active set of 14 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,172:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.608e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,172:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.291e+01, with an active set of 15 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,173:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 21 iterations, i.e. alpha=2.027e+00, with an active set of 19 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:56:59,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,374:INFO:Calculating mean and std
2025-06-10 16:56:59,377:INFO:Creating metrics dataframe
2025-06-10 16:56:59,389:INFO:Uploading results into container
2025-06-10 16:56:59,390:INFO:Uploading model into container now
2025-06-10 16:56:59,392:INFO:_master_model_container: 5
2025-06-10 16:56:59,393:INFO:_display_container: 2
2025-06-10 16:56:59,396:INFO:Lars(random_state=7385)
2025-06-10 16:56:59,397:INFO:create_model() successfully completed......................................
2025-06-10 16:56:59,549:INFO:SubProcess create_model() end ==================================
2025-06-10 16:56:59,549:INFO:Creating metrics dataframe
2025-06-10 16:56:59,552:INFO:Initializing Lasso Least Angle Regression
2025-06-10 16:56:59,552:INFO:Total runtime is 1.3380593498547872 minutes
2025-06-10 16:56:59,553:INFO:SubProcess create_model() called ==================================
2025-06-10 16:56:59,553:INFO:Initializing create_model()
2025-06-10 16:56:59,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:56:59,553:INFO:Checking exceptions
2025-06-10 16:56:59,553:INFO:Importing libraries
2025-06-10 16:56:59,553:INFO:Copying training dataset
2025-06-10 16:56:59,608:INFO:Defining folds
2025-06-10 16:56:59,608:INFO:Declaring metric variables
2025-06-10 16:56:59,609:INFO:Importing untrained model
2025-06-10 16:56:59,609:INFO:Lasso Least Angle Regression Imported successfully
2025-06-10 16:56:59,609:INFO:Starting cross validation
2025-06-10 16:56:59,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:56:59,876:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:56:59,916:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,008:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,320:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,473:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:00,523:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:02,805:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.530e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:02,806:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=4.324e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:02,816:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 9 iterations, alpha=4.149e+03, previous alpha=1.224e+03, with an active set of 8 regressors.
  warnings.warn(

2025-06-10 16:57:02,877:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:02,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,036:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.435e+07, with an active set of 1 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,037:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.592e+07, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,039:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=7.960e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.869e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.313e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,040:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.967e+05, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,042:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 8 iterations, i.e. alpha=5.515e+03, with an active set of 8 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,043:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.697e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,045:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.849e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,045:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=1.562e+03, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,046:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.307e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,046:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 12 iterations, i.e. alpha=5.217e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,046:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.305e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,047:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=1.901e+02, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,047:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=3.956e+01, with an active set of 13 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,047:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=1.033e+04, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,047:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=4.850e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,048:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=9.129e+00, with an active set of 16 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,049:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=7.395e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,049:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 17 iterations, i.e. alpha=6.234e+00, with an active set of 17 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,052:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 8 iterations, alpha=9.564e+03, previous alpha=3.180e+03, with an active set of 7 regressors.
  warnings.warn(

2025-06-10 16:57:03,078:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,106:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,153:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,247:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,263:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=1.355e+04, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,266:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=9.791e+03, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,267:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=5.213e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,281:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=2.643e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,282:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 11 iterations, i.e. alpha=2.570e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,284:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 13 iterations, i.e. alpha=9.558e+02, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=4.789e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,286:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 15 iterations, i.e. alpha=4.728e+02, with an active set of 11 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,287:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=1.091e+02, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,287:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 16 iterations, i.e. alpha=9.210e+01, with an active set of 12 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,290:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 19 iterations, alpha=1.061e+02, previous alpha=2.584e+01, with an active set of 14 regressors.
  warnings.warn(

2025-06-10 16:57:03,305:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,370:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=5.734e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,372:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 4 iterations, i.e. alpha=2.865e+06, with an active set of 4 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,372:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.343e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,372:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=7.724e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.672e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,373:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.612e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,374:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 9 iterations, i.e. alpha=2.515e+03, with an active set of 9 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,378:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 11 iterations, alpha=1.518e+06, previous alpha=1.438e+03, with an active set of 10 regressors.
  warnings.warn(

2025-06-10 16:57:03,386:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=5.608e+06, with an active set of 2 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 3 iterations, i.e. alpha=2.804e+06, with an active set of 3 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,387:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 5 iterations, i.e. alpha=1.400e+06, with an active set of 5 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=8.031e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 6 iterations, i.e. alpha=5.889e+03, with an active set of 6 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.860e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,388:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:688: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 7 iterations, i.e. alpha=3.117e+03, with an active set of 7 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2025-06-10 16:57:03,393:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:718: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 8 iterations, alpha=6.990e+03, previous alpha=1.531e+03, with an active set of 7 regressors.
  warnings.warn(

2025-06-10 16:57:03,403:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:03,602:INFO:Calculating mean and std
2025-06-10 16:57:03,603:INFO:Creating metrics dataframe
2025-06-10 16:57:03,606:INFO:Uploading results into container
2025-06-10 16:57:03,606:INFO:Uploading model into container now
2025-06-10 16:57:03,606:INFO:_master_model_container: 6
2025-06-10 16:57:03,606:INFO:_display_container: 2
2025-06-10 16:57:03,607:INFO:LassoLars(random_state=7385)
2025-06-10 16:57:03,607:INFO:create_model() successfully completed......................................
2025-06-10 16:57:03,697:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:03,697:INFO:Creating metrics dataframe
2025-06-10 16:57:03,702:INFO:Initializing Orthogonal Matching Pursuit
2025-06-10 16:57:03,702:INFO:Total runtime is 1.407219688097636 minutes
2025-06-10 16:57:03,702:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:03,702:INFO:Initializing create_model()
2025-06-10 16:57:03,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:03,702:INFO:Checking exceptions
2025-06-10 16:57:03,702:INFO:Importing libraries
2025-06-10 16:57:03,702:INFO:Copying training dataset
2025-06-10 16:57:03,764:INFO:Defining folds
2025-06-10 16:57:03,764:INFO:Declaring metric variables
2025-06-10 16:57:03,765:INFO:Importing untrained model
2025-06-10 16:57:03,765:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-10 16:57:03,766:INFO:Starting cross validation
2025-06-10 16:57:03,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:04,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,094:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,166:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,242:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,318:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,400:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,469:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,525:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,600:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:04,660:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:06,980:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,014:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,095:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,159:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,206:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,349:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,367:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,377:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,457:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:07,654:INFO:Calculating mean and std
2025-06-10 16:57:07,654:INFO:Creating metrics dataframe
2025-06-10 16:57:07,657:INFO:Uploading results into container
2025-06-10 16:57:07,657:INFO:Uploading model into container now
2025-06-10 16:57:07,658:INFO:_master_model_container: 7
2025-06-10 16:57:07,658:INFO:_display_container: 2
2025-06-10 16:57:07,658:INFO:OrthogonalMatchingPursuit()
2025-06-10 16:57:07,658:INFO:create_model() successfully completed......................................
2025-06-10 16:57:07,747:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:07,747:INFO:Creating metrics dataframe
2025-06-10 16:57:07,756:INFO:Initializing Bayesian Ridge
2025-06-10 16:57:07,757:INFO:Total runtime is 1.474813997745514 minutes
2025-06-10 16:57:07,757:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:07,757:INFO:Initializing create_model()
2025-06-10 16:57:07,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:07,757:INFO:Checking exceptions
2025-06-10 16:57:07,757:INFO:Importing libraries
2025-06-10 16:57:07,757:INFO:Copying training dataset
2025-06-10 16:57:07,810:INFO:Defining folds
2025-06-10 16:57:07,810:INFO:Declaring metric variables
2025-06-10 16:57:07,810:INFO:Importing untrained model
2025-06-10 16:57:07,814:INFO:Bayesian Ridge Imported successfully
2025-06-10 16:57:07,814:INFO:Starting cross validation
2025-06-10 16:57:07,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:08,056:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,128:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,339:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,416:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,602:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,610:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:08,683:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:11,780:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:11,937:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,020:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,093:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,140:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,243:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,298:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,429:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,447:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,467:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:12,700:INFO:Calculating mean and std
2025-06-10 16:57:12,701:INFO:Creating metrics dataframe
2025-06-10 16:57:12,703:INFO:Uploading results into container
2025-06-10 16:57:12,704:INFO:Uploading model into container now
2025-06-10 16:57:12,704:INFO:_master_model_container: 8
2025-06-10 16:57:12,704:INFO:_display_container: 2
2025-06-10 16:57:12,704:INFO:BayesianRidge()
2025-06-10 16:57:12,704:INFO:create_model() successfully completed......................................
2025-06-10 16:57:12,796:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:12,796:INFO:Creating metrics dataframe
2025-06-10 16:57:12,803:INFO:Initializing Passive Aggressive Regressor
2025-06-10 16:57:12,803:INFO:Total runtime is 1.5589104215304057 minutes
2025-06-10 16:57:12,804:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:12,804:INFO:Initializing create_model()
2025-06-10 16:57:12,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:12,804:INFO:Checking exceptions
2025-06-10 16:57:12,804:INFO:Importing libraries
2025-06-10 16:57:12,804:INFO:Copying training dataset
2025-06-10 16:57:12,880:INFO:Defining folds
2025-06-10 16:57:12,880:INFO:Declaring metric variables
2025-06-10 16:57:12,880:INFO:Importing untrained model
2025-06-10 16:57:12,883:INFO:Passive Aggressive Regressor Imported successfully
2025-06-10 16:57:12,883:INFO:Starting cross validation
2025-06-10 16:57:12,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:13,136:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,232:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,303:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,464:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,542:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,643:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,810:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:13,888:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:16,873:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:16,899:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:16,977:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,026:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,027:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,160:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,234:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,289:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,328:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,369:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:17,576:INFO:Calculating mean and std
2025-06-10 16:57:17,577:INFO:Creating metrics dataframe
2025-06-10 16:57:17,580:INFO:Uploading results into container
2025-06-10 16:57:17,581:INFO:Uploading model into container now
2025-06-10 16:57:17,581:INFO:_master_model_container: 9
2025-06-10 16:57:17,581:INFO:_display_container: 2
2025-06-10 16:57:17,581:INFO:PassiveAggressiveRegressor(random_state=7385)
2025-06-10 16:57:17,581:INFO:create_model() successfully completed......................................
2025-06-10 16:57:17,725:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:17,726:INFO:Creating metrics dataframe
2025-06-10 16:57:17,730:INFO:Initializing Huber Regressor
2025-06-10 16:57:17,731:INFO:Total runtime is 1.6410436868667604 minutes
2025-06-10 16:57:17,731:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:17,731:INFO:Initializing create_model()
2025-06-10 16:57:17,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:17,731:INFO:Checking exceptions
2025-06-10 16:57:17,731:INFO:Importing libraries
2025-06-10 16:57:17,731:INFO:Copying training dataset
2025-06-10 16:57:17,793:INFO:Defining folds
2025-06-10 16:57:17,793:INFO:Declaring metric variables
2025-06-10 16:57:17,794:INFO:Importing untrained model
2025-06-10 16:57:17,794:INFO:Huber Regressor Imported successfully
2025-06-10 16:57:17,794:INFO:Starting cross validation
2025-06-10 16:57:17,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:18,051:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,157:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,187:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,283:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,347:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,486:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,520:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,599:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,647:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:18,722:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:24,727:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:25,430:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,075:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,119:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,152:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,162:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,188:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,384:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,394:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,414:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:26,594:INFO:Calculating mean and std
2025-06-10 16:57:26,595:INFO:Creating metrics dataframe
2025-06-10 16:57:26,599:INFO:Uploading results into container
2025-06-10 16:57:26,599:INFO:Uploading model into container now
2025-06-10 16:57:26,599:INFO:_master_model_container: 10
2025-06-10 16:57:26,600:INFO:_display_container: 2
2025-06-10 16:57:26,600:INFO:HuberRegressor()
2025-06-10 16:57:26,600:INFO:create_model() successfully completed......................................
2025-06-10 16:57:26,739:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:26,740:INFO:Creating metrics dataframe
2025-06-10 16:57:26,745:INFO:Initializing K Neighbors Regressor
2025-06-10 16:57:26,745:INFO:Total runtime is 1.7912693142890932 minutes
2025-06-10 16:57:26,745:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:26,745:INFO:Initializing create_model()
2025-06-10 16:57:26,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:26,746:INFO:Checking exceptions
2025-06-10 16:57:26,746:INFO:Importing libraries
2025-06-10 16:57:26,746:INFO:Copying training dataset
2025-06-10 16:57:26,822:INFO:Defining folds
2025-06-10 16:57:26,822:INFO:Declaring metric variables
2025-06-10 16:57:26,822:INFO:Importing untrained model
2025-06-10 16:57:26,823:INFO:K Neighbors Regressor Imported successfully
2025-06-10 16:57:26,824:INFO:Starting cross validation
2025-06-10 16:57:26,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:27,102:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,262:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,359:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,437:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,528:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,633:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,709:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,790:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:27,871:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,244:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,497:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,552:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,593:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,621:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,623:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,706:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,831:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,862:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:30,937:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:37,797:INFO:Calculating mean and std
2025-06-10 16:57:37,799:INFO:Creating metrics dataframe
2025-06-10 16:57:37,809:INFO:Uploading results into container
2025-06-10 16:57:37,811:INFO:Uploading model into container now
2025-06-10 16:57:37,812:INFO:_master_model_container: 11
2025-06-10 16:57:37,812:INFO:_display_container: 2
2025-06-10 16:57:37,813:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-10 16:57:37,813:INFO:create_model() successfully completed......................................
2025-06-10 16:57:37,914:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:37,914:INFO:Creating metrics dataframe
2025-06-10 16:57:37,918:INFO:Initializing Decision Tree Regressor
2025-06-10 16:57:37,918:INFO:Total runtime is 1.977484440803528 minutes
2025-06-10 16:57:37,919:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:37,919:INFO:Initializing create_model()
2025-06-10 16:57:37,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:37,919:INFO:Checking exceptions
2025-06-10 16:57:37,919:INFO:Importing libraries
2025-06-10 16:57:37,919:INFO:Copying training dataset
2025-06-10 16:57:37,970:INFO:Defining folds
2025-06-10 16:57:37,970:INFO:Declaring metric variables
2025-06-10 16:57:37,971:INFO:Importing untrained model
2025-06-10 16:57:37,971:INFO:Decision Tree Regressor Imported successfully
2025-06-10 16:57:37,971:INFO:Starting cross validation
2025-06-10 16:57:37,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:38,176:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,272:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,350:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,411:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,480:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,543:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,628:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,699:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,784:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:38,878:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:41,998:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,080:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,125:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,158:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,174:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,182:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,251:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,261:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,275:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,283:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,482:INFO:Calculating mean and std
2025-06-10 16:57:42,483:INFO:Creating metrics dataframe
2025-06-10 16:57:42,486:INFO:Uploading results into container
2025-06-10 16:57:42,487:INFO:Uploading model into container now
2025-06-10 16:57:42,487:INFO:_master_model_container: 12
2025-06-10 16:57:42,487:INFO:_display_container: 2
2025-06-10 16:57:42,487:INFO:DecisionTreeRegressor(random_state=7385)
2025-06-10 16:57:42,488:INFO:create_model() successfully completed......................................
2025-06-10 16:57:42,560:INFO:SubProcess create_model() end ==================================
2025-06-10 16:57:42,560:INFO:Creating metrics dataframe
2025-06-10 16:57:42,567:INFO:Initializing Random Forest Regressor
2025-06-10 16:57:42,567:INFO:Total runtime is 2.054973614215851 minutes
2025-06-10 16:57:42,567:INFO:SubProcess create_model() called ==================================
2025-06-10 16:57:42,567:INFO:Initializing create_model()
2025-06-10 16:57:42,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:57:42,567:INFO:Checking exceptions
2025-06-10 16:57:42,567:INFO:Importing libraries
2025-06-10 16:57:42,567:INFO:Copying training dataset
2025-06-10 16:57:42,611:INFO:Defining folds
2025-06-10 16:57:42,612:INFO:Declaring metric variables
2025-06-10 16:57:42,612:INFO:Importing untrained model
2025-06-10 16:57:42,612:INFO:Random Forest Regressor Imported successfully
2025-06-10 16:57:42,612:INFO:Starting cross validation
2025-06-10 16:57:42,613:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:57:42,833:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,853:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:42,906:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,012:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,068:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,122:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,180:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,271:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,328:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:57:43,365:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:58:51,908:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:58:53,401:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:58:57,569:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,425:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,508:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,538:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,546:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,547:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,582:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:01,656:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:03,373:INFO:Calculating mean and std
2025-06-10 16:59:03,430:INFO:Creating metrics dataframe
2025-06-10 16:59:03,529:INFO:Uploading results into container
2025-06-10 16:59:03,533:INFO:Uploading model into container now
2025-06-10 16:59:03,545:INFO:_master_model_container: 13
2025-06-10 16:59:03,545:INFO:_display_container: 2
2025-06-10 16:59:03,566:INFO:RandomForestRegressor(n_jobs=-1, random_state=7385)
2025-06-10 16:59:03,567:INFO:create_model() successfully completed......................................
2025-06-10 16:59:04,289:INFO:SubProcess create_model() end ==================================
2025-06-10 16:59:04,289:INFO:Creating metrics dataframe
2025-06-10 16:59:04,300:INFO:Initializing Extra Trees Regressor
2025-06-10 16:59:04,300:INFO:Total runtime is 3.417195185025533 minutes
2025-06-10 16:59:04,300:INFO:SubProcess create_model() called ==================================
2025-06-10 16:59:04,301:INFO:Initializing create_model()
2025-06-10 16:59:04,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001EE934D9FF0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EE93128220>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-10 16:59:04,301:INFO:Checking exceptions
2025-06-10 16:59:04,301:INFO:Importing libraries
2025-06-10 16:59:04,301:INFO:Copying training dataset
2025-06-10 16:59:04,431:INFO:Defining folds
2025-06-10 16:59:04,431:INFO:Declaring metric variables
2025-06-10 16:59:04,431:INFO:Importing untrained model
2025-06-10 16:59:04,432:INFO:Extra Trees Regressor Imported successfully
2025-06-10 16:59:04,432:INFO:Starting cross validation
2025-06-10 16:59:04,435:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-10 16:59:04,829:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:04,885:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,031:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,101:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,107:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,184:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,227:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,237:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,352:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-10 16:59:05,360:WARNING:C:\Users\ASUS\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['FT' 'FB' 'FTI' 'ITH' 'SD3' 'RHX' 'RHN' 'RVG' 'WTE']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2025-06-11 06:40:32,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:40:32,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:40:32,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:40:32,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:40:35,194:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-11 06:40:35,469:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

2025-06-11 06:47:39,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:47:39,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:47:39,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:47:39,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-11 06:47:42,535:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-06-11 06:47:42,803:WARNING:E:\NoCodeML\app.py:30: DtypeWarning: Columns (7,8,18,25) have mixed types. Specify dtype option on import or set low_memory=False.
  df = pd.read_csv('dataset.csv', index_col=None)

